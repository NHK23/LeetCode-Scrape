,Title,Topic Label,Accetpance,Difficulty,Frequency,Accepted,Submissions,Premium
0,208. Implement Trie (Prefix Tree),"['Hash Table', 'String', 'Design', '1+']",62.50%,Medium,26.1195%;,786.6K,1.3M,Y
1,1. Two Sum,"['Array', 'Hash Table']",49.60%,Easy,99.4833%;,9.2M,18.5M,
2,2. Add Two Numbers,"['Linked List', 'Math', 'Recursion']",40.30%,Medium,94.8402%;,3.5M,8.7M,
3,3. Longest Substring Without Repeating Characters,"['Hash Table', 'String', 'Sliding Window']",33.80%,Medium,95.2438%;,4.3M,12.8M,
4,4. Median of Two Sorted Arrays,"['Array', 'Binary Search', 'Divide and Conquer']",36.10%,Hard,92.7477%;,1.8M,5.1M,
5,5. Longest Palindromic Substring,"['String', 'Dynamic Programming']",32.40%,Medium,96.1759%;,2.3M,7.2M,
6,6. Zigzag Conversion,['String'],44.80%,Medium,87.2142%;,996.2K,2.2M,
7,7. Reverse Integer,['Math'],27.40%,Medium,90.6736%;,2.5M,9.1M,
8,8. String to Integer (atoi),['String'],16.60%,Medium,60.4849%;,1.2M,7.3M,
9,9. Palindrome Number,['Math'],53.50%,Easy,93.3893%;,3M,5.6M,
10,10. Regular Expression Matching,"['String', 'Dynamic Programming', 'Recursion']",28.00%,Hard,70.2527%;,795.2K,2.8M,
11,11. Container With Most Water,"['Array', 'Two Pointers', 'Greedy']",54.00%,Medium,88.3469%;,2M,3.7M,
12,12. Integer to Roman,"['Hash Table', 'Math', 'String']",61.90%,Medium,84.2086%;,956.2K,1.5M,
13,13. Roman to Integer,"['Hash Table', 'Math', 'String']",58.50%,Easy,100%;,2.5M,4.3M,
14,14. Longest Common Prefix,"['String', 'Trie']",40.80%,Easy,93.7965%;,2.3M,5.5M,
15,15. 3Sum,"['Array', 'Two Pointers', 'Sorting']",32.50%,Medium,91.7861%;,2.6M,7.9M,
16,16. 3Sum Closest,"['Array', 'Two Pointers', 'Sorting']",45.80%,Medium,72.4978%;,1M,2.2M,
17,17. Letter Combinations of a Phone Number,"['Hash Table', 'String', 'Backtracking']",56.40%,Medium,85.3666%;,1.5M,2.7M,
18,18. 4Sum,"['Array', 'Two Pointers', 'Sorting']",36.00%,Medium,79.0683%;,716.6K,2M,
19,19. Remove Nth Node From End of List,"['Linked List', 'Two Pointers']",40.90%,Medium,65.8998%;,1.9M,4.7M,
20,20. Valid Parentheses,"['String', 'Stack']",40.30%,Easy,98.3142%;,3.1M,7.8M,
21,21. Merge Two Sorted Lists,"['Linked List', 'Recursion']",62.50%,Easy,84.6367%;,3.1M,4.9M,
22,22. Generate Parentheses,"['String', 'Dynamic Programming', 'Backtracking']",72.40%,Medium,88.7057%;,1.4M,1.9M,
23,23. Merge k Sorted Lists,"['Linked List', 'Divide and Conquer', '2+']",49.70%,Hard,76.2647%;,1.6M,3.2M,
24,24. Swap Nodes in Pairs,"['Linked List', 'Recursion']",61.20%,Medium,48.976%;,1.1M,1.7M,
25,25. Reverse Nodes in k-Group,"['Linked List', 'Recursion']",54.50%,Hard,73.991%;,669.7K,1.2M,
26,26. Remove Duplicates from Sorted Array,"['Array', 'Two Pointers']",51.50%,Easy,80.0242%;,2.9M,5.5M,
27,27. Remove Element,"['Array', 'Two Pointers']",52.90%,Easy,53.5173%;,1.7M,3.2M,
28,28. Find the Index of the First Occurrence in a String,"['Two Pointers', 'String', 'String Matching']",38.90%,Easy,51.9971%;,1.6M,4.2M,
29,29. Divide Two Integers,"['Math', 'Bit Manipulation']",17.20%,Medium,53.8387%;,589.7K,3.4M,
30,30. Substring with Concatenation of All Words,"['Hash Table', 'String', 'Sliding Window']",31.20%,Hard,41.6218%;,338.9K,1.1M,
31,31. Next Permutation,"['Array', 'Two Pointers']",37.50%,Medium,88.6686%;,1M,2.7M,
32,32. Longest Valid Parentheses,"['String', 'Dynamic Programming', 'Stack']",32.80%,Hard,68.491%;,603.7K,1.8M,
33,33. Search in Rotated Sorted Array,"['Array', 'Binary Search']",38.90%,Medium,77.7491%;,2M,5M,
34,34. Find First and Last Position of Element in Sorted Array,"['Array', 'Binary Search']",41.80%,Medium,72.7029%;,1.5M,3.5M,
35,35. Search Insert Position,"['Array', 'Binary Search']",43.30%,Easy,70.3158%;,2.1M,4.8M,
36,36. Valid Sudoku,"['Array', 'Hash Table', 'Matrix']",58.00%,Medium,79.7168%;,1.1M,1.8M,
37,37. Sudoku Solver,"['Array', 'Hash Table', 'Backtracking', '1+']",57.60%,Hard,67.7355%;,444.6K,772.4K,
38,38. Count and Say,['String'],52.00%,Medium,82.328%;,771.2K,1.5M,
39,39. Combination Sum,"['Array', 'Backtracking']",68.50%,Medium,73.3842%;,1.4M,2.1M,
40,40. Combination Sum II,"['Array', 'Backtracking']",53.40%,Medium,58.574%;,719.6K,1.3M,
41,41. First Missing Positive,"['Array', 'Hash Table']",36.70%,Hard,83.9029%;,851.4K,2.3M,
42,42. Trapping Rain Water,"['Array', 'Two Pointers', '3+']",59.20%,Hard,97.2093%;,1.5M,2.5M,
43,43. Multiply Strings,"['Math', 'String', 'Simulation']",39.10%,Medium,58.7205%;,642.6K,1.6M,
44,44. Wildcard Matching,"['String', 'Dynamic Programming', 'Greedy', '1+']",26.90%,Hard,63.1715%;,460.7K,1.7M,
45,45. Jump Game II,"['Array', 'Dynamic Programming', 'Greedy']",39.80%,Medium,79.1252%;,860.8K,2.2M,
46,46. Permutations,"['Array', 'Backtracking']",75.60%,Medium,70.5927%;,1.5M,2M,
47,47. Permutations II,"['Array', 'Backtracking']",57.30%,Medium,51.5881%;,768K,1.3M,
48,48. Rotate Image,"['Array', 'Math', 'Matrix']",70.90%,Medium,82.8101%;,1.2M,1.7M,
49,49. Group Anagrams,"['Array', 'Hash Table', 'String', '1+']",66.70%,Medium,86.7101%;,1.9M,2.8M,
50,"50. Pow(x, n)","['Math', 'Recursion']",33.00%,Medium,76.3335%;,1.2M,3.5M,
51,51. N-Queens,"['Array', 'Backtracking']",64.10%,Hard,76.5013%;,524.5K,818.8K,Y
52,52. N-Queens II,['Backtracking'],71.50%,Hard,28.6852%;,302.9K,423.3K,Y
53,53. Maximum Subarray,"['Array', 'Divide and Conquer', '1+']",50.20%,Medium,91.707%;,3.1M,6.1M,Y
54,54. Spiral Matrix,"['Array', 'Matrix', 'Simulation']",44.80%,Medium,86.8368%;,985.5K,2.2M,Y
55,55. Jump Game,"['Array', 'Dynamic Programming', 'Greedy']",38.90%,Medium,80.6475%;,1.3M,3.5M,Y
56,56. Merge Intervals,"['Array', 'Sorting']",46.20%,Medium,94.3234%;,1.8M,4M,Y
57,57. Insert Interval,['Array'],39.00%,Medium,75.0227%;,738.6K,1.9M,Y
58,58. Length of Last Word,['String'],42.70%,Easy,53.7643%;,1.1M,2.5M,Y
59,59. Spiral Matrix II,"['Array', 'Matrix', 'Simulation']",67.30%,Medium,47.9734%;,427.8K,635.7K,Y
60,60. Permutation Sequence,"['Math', 'Recursion']",44.30%,Hard,56.8276%;,319.4K,720.7K,Y
61,61. Rotate List,"['Linked List', 'Two Pointers']",36.10%,Medium,49.1222%;,698.4K,1.9M,Y
62,62. Unique Paths,"['Math', 'Dynamic Programming', 'Combinatorics']",62.60%,Medium,66.3292%;,1.3M,2.1M,Y
63,63. Unique Paths II,"['Array', 'Dynamic Programming', 'Matrix']",39.40%,Medium,52.1082%;,661.1K,1.7M,Y
64,64. Minimum Path Sum,"['Array', 'Dynamic Programming', 'Matrix']",61.10%,Medium,61.3117%;,859.1K,1.4M,Y
65,65. Valid Number,['String'],18.70%,Hard,45.8149%;,301.2K,1.6M,Y
66,66. Plus One,"['Array', 'Math']",43.60%,Easy,63.4954%;,1.6M,3.7M,Y
67,67. Add Binary,"['Math', 'String', 'Bit Manipulation', '1+']",52.40%,Easy,76.3362%;,1.1M,2.1M,Y
68,68. Text Justification,"['Array', 'String', 'Simulation']",37.40%,Hard,82.241%;,288.2K,771.4K,Y
69,69. Sqrt(x),"['Math', 'Binary Search']",37.40%,Easy,73.0085%;,1.4M,3.8M,Y
70,70. Climbing Stairs,"['Math', 'Dynamic Programming', 'Memoization']",52.20%,Easy,87.4202%;,2.3M,4.3M,Y
71,71. Simplify Path,"['String', 'Stack']",39.30%,Medium,69.3135%;,494.6K,1.3M,Y
72,72. Edit Distance,"['String', 'Dynamic Programming']",54.30%,Hard,73.2765%;,629.2K,1.2M,Y
73,73. Set Matrix Zeroes,"['Array', 'Hash Table', 'Matrix']",51.10%,Medium,70.9991%;,946.6K,1.9M,Y
74,74. Search a 2D Matrix,"['Array', 'Binary Search', 'Matrix']",47.60%,Medium,64.6589%;,1.2M,2.4M,Y
75,75. Sort Colors,"['Array', 'Two Pointers', 'Sorting']",58.40%,Medium,66.1308%;,1.4M,2.3M,Y
76,76. Minimum Window Substring,"['Hash Table', 'String', 'Sliding Window']",40.90%,Hard,72.7888%;,981.4K,2.4M,Y
77,77. Combinations,['Backtracking'],66.90%,Medium,45.6491%;,649.4K,970.8K,Y
78,78. Subsets,"['Array', 'Backtracking', 'Bit Manipulation']",74.80%,Medium,68.4793%;,1.4M,1.9M,Y
79,79. Word Search,"['Array', 'Backtracking', 'Matrix']",40.20%,Medium,78.2503%;,1.2M,3.1M,Y
80,80. Remove Duplicates from Sorted Array II,"['Array', 'Two Pointers']",52.20%,Medium,36.9734%;,492.9K,944K,Y
81,81. Search in Rotated Sorted Array II,"['Array', 'Binary Search']",35.70%,Medium,49.1455%;,499K,1.4M,Y
82,82. Remove Duplicates from Sorted List II,"['Linked List', 'Two Pointers']",45.90%,Medium,51.2185%;,586.2K,1.3M,Y
83,83. Remove Duplicates from Sorted List,['Linked List'],50.50%,Easy,51.7889%;,1.1M,2.2M,Y
84,84. Largest Rectangle in Histogram,"['Array', 'Stack', 'Monotonic Stack']",42.50%,Hard,72.9375%;,647.3K,1.5M,Y
85,85. Maximal Rectangle,"['Array', 'Dynamic Programming', 'Stack', '2+']",44.70%,Hard,55.7607%;,338.2K,757.1K,Y
86,86. Partition List,"['Linked List', 'Two Pointers']",51.90%,Medium,31.6844%;,441.5K,850.3K,Y
87,87. Scramble String,"['String', 'Dynamic Programming']",36.10%,Hard,28.9747%;,162.6K,450K,Y
88,88. Merge Sorted Array,"['Array', 'Two Pointers', 'Sorting']",46.50%,Easy,71.9566%;,1.9M,4.1M,Y
89,89. Gray Code,"['Math', 'Backtracking', 'Bit Manipulation']",57.10%,Medium,37.9704%;,258.3K,452.6K,Y
90,90. Subsets II,"['Array', 'Backtracking', 'Bit Manipulation']",55.80%,Medium,50.7348%;,676.3K,1.2M,Y
91,91. Decode Ways,"['String', 'Dynamic Programming']",32.70%,Medium,79.6318%;,990.7K,3M,Y
92,92. Reverse Linked List II,['Linked List'],45.40%,Medium,54.6227%;,618.8K,1.4M,Y
93,93. Restore IP Addresses,"['String', 'Backtracking']",47.30%,Medium,82.4366%;,394.9K,834.7K,Y
94,94. Binary Tree Inorder Traversal,"['Stack', 'Tree', 'Depth-First Search', '1+']",73.70%,Easy,53.4561%;,1.9M,2.6M,Y
95,95. Unique Binary Search Trees II,"['Dynamic Programming', 'Backtracking', '3+']",52.30%,Medium,49.3177%;,348.1K,665.7K,Y
96,96. Unique Binary Search Trees,"['Math', 'Dynamic Programming', 'Tree', '2+']",59.60%,Medium,59.7872%;,560K,939.2K,Y
97,97. Interleaving String,"['String', 'Dynamic Programming']",37.30%,Medium,52.6964%;,369.2K,989.4K,Y
98,98. Validate Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",32.00%,Medium,66.3285%;,1.9M,5.8M,Y
99,99. Recover Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",50.90%,Medium,52.6068%;,385.8K,757.9K,Y
100,100. Same Tree,"['Tree', 'Depth-First Search', '2+']",58.10%,Easy,52.4755%;,1.5M,2.5M,Y
101,101. Symmetric Tree,"['Tree', 'Depth-First Search', '2+']",54.20%,Easy,54.2297%;,1.6M,2.9M,Y
102,102. Binary Tree Level Order Traversal,"['Tree', 'Breadth-First Search', 'Binary Tree']",64.20%,Medium,55.8733%;,1.7M,2.7M,Y
103,103. Binary Tree Zigzag Level Order Traversal,"['Tree', 'Breadth-First Search', 'Binary Tree']",56.80%,Medium,65.3332%;,935.2K,1.6M,Y
104,104. Maximum Depth of Binary Tree,"['Tree', 'Depth-First Search', '2+']",73.90%,Easy,59.8061%;,2.3M,3.1M,Y
105,105. Construct Binary Tree from Preorder and Inorder Traversal,"['Array', 'Hash Table', 'Divide and Conquer', '2+']",61.50%,Medium,43.9476%;,939.4K,1.5M,Y
106,106. Construct Binary Tree from Inorder and Postorder Traversal,"['Array', 'Hash Table', 'Divide and Conquer', '2+']",59.90%,Medium,0.851971%;,514.5K,859.5K,Y
107,107. Binary Tree Level Order Traversal II,"['Tree', 'Breadth-First Search', 'Binary Tree']",61.10%,Medium,7.54358%;,568.4K,930.8K,Y
108,108. Convert Sorted Array to Binary Search Tree,"['Array', 'Divide and Conquer', 'Tree', '2+']",69.80%,Easy,44.1726%;,965.2K,1.4M,Y
109,109. Convert Sorted List to Binary Search Tree,"['Linked List', 'Divide and Conquer', 'Tree', '2+']",60.10%,Medium,46.5962%;,469.1K,780.3K,Y
110,110. Balanced Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",48.90%,Easy,52.6165%;,1.1M,2.2M,Y
111,111. Minimum Depth of Binary Tree,"['Tree', 'Depth-First Search', '2+']",44.30%,Easy,34.7731%;,914.6K,2.1M,Y
112,112. Path Sum,"['Tree', 'Depth-First Search', '2+']",48.20%,Easy,46.5972%;,1.1M,2.4M,Y
113,113. Path Sum II,"['Backtracking', 'Tree', 'Depth-First Search', '1+']",57.00%,Medium,52.0637%;,730.6K,1.3M,Y
114,114. Flatten Binary Tree to Linked List,"['Linked List', 'Stack', 'Tree', '2+']",61.70%,Medium,46.9119%;,758.5K,1.2M,Y
115,115. Distinct Subsequences,"['String', 'Dynamic Programming']",44.40%,Hard,42.2004%;,283.1K,637.6K,Y
116,116. Populating Next Right Pointers in Each Node,"['Linked List', 'Tree', 'Depth-First Search', '2+']",60.30%,Medium,45.6187%;,904.5K,1.5M,Y
117,117. Populating Next Right Pointers in Each Node II,"['Linked List', 'Tree', 'Depth-First Search', '2+']",50.20%,Medium,35.4669%;,539.6K,1.1M,Y
118,118. Pascal's Triangle,"['Array', 'Dynamic Programming']",70.60%,Easy,78.8515%;,1.2M,1.7M,Y
119,119. Pascal's Triangle II,"['Array', 'Dynamic Programming']",60.60%,Easy,28.9468%;,657.4K,1.1M,Y
120,120. Triangle,"['Array', 'Dynamic Programming']",54.40%,Medium,40.5467%;,573.5K,1.1M,Y
121,121. Best Time to Buy and Sell Stock,"['Array', 'Dynamic Programming']",54.30%,Easy,95.7843%;,3.2M,5.9M,Y
122,122. Best Time to Buy and Sell Stock II,"['Array', 'Dynamic Programming', 'Greedy']",63.80%,Medium,66.702%;,1.4M,2.2M,Y
123,123. Best Time to Buy and Sell Stock III,"['Array', 'Dynamic Programming']",45.40%,Hard,57.3577%;,466.9K,1M,Y
124,124. Binary Tree Maximum Path Sum,"['Dynamic Programming', 'Tree', '2+']",39.20%,Hard,76.5555%;,950.7K,2.4M,Y
125,125. Valid Palindrome,"['Two Pointers', 'String']",44.30%,Easy,71.8193%;,1.8M,4.2M,Y
126,126. Word Ladder II,"['Hash Table', 'String', 'Backtracking', '1+']",27.50%,Hard,54.3744%;,339.3K,1.2M,Y
127,127. Word Ladder,"['Hash Table', 'String', 'Breadth-First Search']",37.10%,Hard,74.9023%;,894.4K,2.4M,Y
128,128. Longest Consecutive Sequence,"['Array', 'Hash Table', 'Union Find']",48.60%,Medium,73.6549%;,1.1M,2.2M,Y
129,129. Sum Root to Leaf Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",61.00%,Medium,13.4348%;,599.5K,983.6K,Y
130,130. Surrounded Regions,"['Array', 'Depth-First Search', '3+']",36.70%,Medium,49.7303%;,518.2K,1.4M,Y
131,131. Palindrome Partitioning,"['String', 'Dynamic Programming', 'Backtracking']",64.80%,Medium,76.7156%;,625.2K,965.5K,Y
132,132. Palindrome Partitioning II,"['String', 'Dynamic Programming']",33.80%,Hard,49.3014%;,237.2K,702.6K,Y
133,133. Clone Graph,"['Hash Table', 'Depth-First Search', '2+']",51.80%,Medium,54.171%;,914K,1.8M,Y
134,134. Gas Station,"['Array', 'Greedy']",46.10%,Medium,86.411%;,573.7K,1.2M,Y
135,135. Candy,"['Array', 'Greedy']",41.00%,Hard,58.3473%;,300.6K,733.6K,Y
136,136. Single Number,"['Array', 'Bit Manipulation']",70.60%,Easy,65.8787%;,2.1M,3M,Y
137,137. Single Number II,"['Array', 'Bit Manipulation']",58.40%,Medium,56.1822%;,402.8K,689.8K,Y
138,138. Copy List with Random Pointer,"['Hash Table', 'Linked List']",51.30%,Medium,68.0192%;,929.9K,1.8M,Y
139,139. Word Break,"['Array', 'Hash Table', 'String', '3+']",45.60%,Medium,70.276%;,1.3M,2.9M,Y
140,140. Word Break II,"['Array', 'Hash Table', 'String', '4+']",45.20%,Hard,73.8831%;,507.6K,1.1M,Y
141,141. Linked List Cycle,"['Hash Table', 'Linked List', 'Two Pointers']",47.40%,Easy,58.8479%;,2M,4.2M,Y
142,142. Linked List Cycle II,"['Hash Table', 'Linked List', 'Two Pointers']",48.60%,Medium,55.7328%;,1M,2.1M,Y
143,143. Reorder List,"['Linked List', 'Two Pointers', 'Stack', '1+']",52.40%,Medium,62.7687%;,645.9K,1.2M,Y
144,144. Binary Tree Preorder Traversal,"['Stack', 'Tree', 'Depth-First Search', '1+']",66.70%,Easy,36.5629%;,1.3M,1.9M,Y
145,145. Binary Tree Postorder Traversal,"['Stack', 'Tree', 'Depth-First Search', '1+']",67.80%,Easy,15.7783%;,926.1K,1.4M,Y
146,146. LRU Cache,"['Hash Table', 'Linked List', 'Design', '1+']",40.60%,Medium,98.2428%;,1.3M,3.1M,Y
147,147. Insertion Sort List,"['Linked List', 'Sorting']",50.90%,Medium,35.7221%;,317.9K,624.2K,Y
148,148. Sort List,"['Linked List', 'Two Pointers', '3+']",55.00%,Medium,52.5814%;,612K,1.1M,Y
149,149. Max Points on a Line,"['Array', 'Hash Table', 'Math', '1+']",25.10%,Hard,90.2802%;,333.2K,1.3M,Y
150,150. Evaluate Reverse Polish Notation,"['Array', 'Math', 'Stack']",45.70%,Medium,71.2785%;,633.5K,1.4M,Y
151,151. Reverse Words in a String,"['Two Pointers', 'String']",32.60%,Medium,74.9804%;,898.1K,2.8M,Y
152,152. Maximum Product Subarray,"['Array', 'Dynamic Programming']",34.90%,Medium,67.4765%;,968K,2.8M,Y
153,153. Find Minimum in Rotated Sorted Array,"['Array', 'Binary Search']",48.80%,Medium,45.3231%;,1.2M,2.5M,Y
154,154. Find Minimum in Rotated Sorted Array II,"['Array', 'Binary Search']",43.50%,Hard,27.986%;,378K,869.3K,Y
155,155. Min Stack,"['Stack', 'Design']",52.30%,Medium,65.0855%;,1.2M,2.3M,Y
156,156. Binary Tree Upside Down,"['Tree', 'Depth-First Search', 'Binary Tree']",61.90%,Medium,41.9109%;,96.3K,155.5K,Y
157,157. Read N Characters Given Read4,"['String', 'Simulation', 'Interactive']",40.90%,Easy,30.7903%;,179.7K,438.9K,Y
158,158. Read N Characters Given read4 II - Call Multiple Times,"['String', 'Simulation', 'Interactive']",41.60%,Hard,61.7976%;,175.1K,420.7K,Y
159,159. Longest Substring with At Most Two Distinct Characters,"['Hash Table', 'String', 'Sliding Window']",53.80%,Medium,44.7105%;,224.6K,417.6K,Y
160,160. Intersection of Two Linked Lists,"['Hash Table', 'Linked List', 'Two Pointers']",54.20%,Easy,53.7507%;,1.2M,2.3M,Y
161,161. One Edit Distance,"['Two Pointers', 'String']",34.10%,Medium,46.2424%;,187K,548K,Y
162,162. Find Peak Element,"['Array', 'Binary Search']",46.00%,Medium,70.0188%;,984.3K,2.1M,Y
163,163. Missing Ranges,['Array'],32.20%,Easy,38.9364%;,197.5K,613.5K,Y
164,164. Maximum Gap,"['Array', 'Sorting', 'Bucket Sort', '1+']",43.30%,Hard,20.1162%;,164.1K,379.4K,Y
165,165. Compare Version Numbers,"['Two Pointers', 'String']",35.70%,Medium,42.3985%;,345.8K,969.2K,Y
166,166. Fraction to Recurring Decimal,"['Hash Table', 'Math', 'String']",24.30%,Medium,51.3095%;,204.4K,841.4K,Y
167,167. Two Sum II - Input Array Is Sorted,"['Array', 'Two Pointers', 'Binary Search']",60.00%,Medium,53.9877%;,1.4M,2.3M,Y
168,168. Excel Sheet Column Title,"['Math', 'String']",35.40%,Easy,53.6772%;,368.4K,1M,Y
169,169. Majority Element,"['Array', 'Hash Table', 'Divide and Conquer', '2+']",63.90%,Easy,68.9349%;,1.6M,2.6M,Y
170,170. Two Sum III - Data structure design,"['Array', 'Hash Table', 'Two Pointers', '2+']",37.40%,Easy,21.7694%;,140K,374.3K,Y
171,171. Excel Sheet Column Number,"['Math', 'String']",62.00%,Easy,52.0924%;,584.6K,943.3K,Y
172,172. Factorial Trailing Zeroes,['Math'],42.10%,Medium,32.6667%;,361.2K,857K,Y
173,173. Binary Search Tree Iterator,"['Stack', 'Tree', 'Design', '3+']",69.70%,Medium,38.6387%;,660.2K,947.7K,Y
174,174. Dungeon Game,"['Array', 'Dynamic Programming', 'Matrix']",37.50%,Hard,39.0655%;,195.5K,521.7K,Y
175,175. Combine Two Tables,['Database'],74.00%,Easy,57.8088%;,734.2K,991.8K,Y
176,176. Second Highest Salary,['Database'],37.50%,Medium,78.1806%;,625.4K,1.7M,Y
177,177. Nth Highest Salary,['Database'],37.60%,Medium,63.2457%;,296.7K,789.6K,Y
178,178. Rank Scores,['Database'],60.40%,Medium,36.6312%;,289.1K,478.9K,Y
179,179. Largest Number,"['Array', 'String', 'Greedy', '1+']",34.50%,Medium,68.1119%;,383.7K,1.1M,Y
180,180. Consecutive Numbers,['Database'],46.60%,Medium,50.8766%;,242.5K,520.9K,Y
181,181. Employees Earning More Than Their Managers,['Database'],69.00%,Easy,58.3027%;,470.8K,682.7K,Y
182,182. Duplicate Emails,['Database'],70.80%,Easy,45.5483%;,482.7K,681.8K,Y
183,183. Customers Who Never Order,['Database'],68.50%,Easy,52.4881%;,595.6K,869.3K,Y
184,184. Department Highest Salary,['Database'],50.00%,Medium,52.6629%;,289.4K,579.4K,Y
185,185. Department Top Three Salaries,['Database'],50.30%,Hard,38.2593%;,211.3K,419.8K,Y
186,186. Reverse Words in a String II,"['Two Pointers', 'String']",52.80%,Medium,28.4803%;,146.4K,277.2K,Y
187,187. Repeated DNA Sequences,"['Hash Table', 'String', 'Bit Manipulation', '3+']",46.90%,Medium,50.0215%;,317.6K,677.2K,Y
188,188. Best Time to Buy and Sell Stock IV,"['Array', 'Dynamic Programming']",38.80%,Hard,48.5174%;,349.1K,899.4K,Y
189,189. Rotate Array,"['Array', 'Math', 'Two Pointers']",39.40%,Medium,76.0783%;,1.4M,3.7M,Y
190,190. Reverse Bits,"['Divide and Conquer', 'Bit Manipulation']",53.80%,Easy,46.4941%;,608.1K,1.1M,Y
191,191. Number of 1 Bits,"['Divide and Conquer', 'Bit Manipulation']",66.40%,Easy,51.0157%;,1.1M,1.6M,Y
192,192. Word Frequency,['Shell'],25.60%,Medium,33.707%;,42.1K,164.5K,Y
193,193. Valid Phone Numbers,['Shell'],26.00%,Easy,53.4231%;,66.2K,254.8K,Y
194,194. Transpose File,['Shell'],25.40%,Medium,29.1201%;,21K,82.7K,Y
195,195. Tenth Line,['Shell'],32.90%,Easy,18.6941%;,85.4K,259.5K,Y
196,196. Delete Duplicate Emails,['Database'],60.50%,Easy,52.0551%;,361.5K,597.4K,Y
197,197. Rising Temperature,['Database'],44.70%,Easy,42.4837%;,313.7K,702.5K,Y
198,198. House Robber,"['Array', 'Dynamic Programming']",49.40%,Medium,84.4432%;,1.6M,3.2M,Y
199,199. Binary Tree Right Side View,"['Tree', 'Depth-First Search', '2+']",61.60%,Medium,51.4298%;,920.2K,1.5M,Y
200,200. Number of Islands,"['Array', 'Depth-First Search', '3+']",56.90%,Medium,96.6926%;,2.1M,3.7M,Y
201,201. Bitwise AND of Numbers Range,['Bit Manipulation'],42.50%,Medium,23.7613%;,238.1K,560.1K,Y
202,202. Happy Number,"['Hash Table', 'Math', 'Two Pointers']",54.80%,Easy,73.134%;,1.1M,2M,Y
203,203. Remove Linked List Elements,"['Linked List', 'Recursion']",45.80%,Easy,39.9697%;,900.9K,2M,Y
204,204. Count Primes,"['Array', 'Math', 'Enumeration', '1+']",33.10%,Medium,73.5884%;,715.3K,2.2M,Y
205,205. Isomorphic Strings,"['Hash Table', 'String']",42.80%,Easy,68.5506%;,838.8K,2M,Y
206,206. Reverse Linked List,"['Linked List', 'Recursion']",73.40%,Easy,68.5942%;,3M,4M,Y
207,207. Course Schedule,"['Depth-First Search', 'Breadth-First Search', '2+']",45.40%,Medium,73.0747%;,1.1M,2.5M,Y
208,208. Implement Trie (Prefix Tree),"['Hash Table', 'String', 'Design', '1+']",62.50%,Medium,26.1195%;,786.6K,1.3M,Y
209,209. Minimum Size Subarray Sum,"['Array', 'Binary Search', 'Sliding Window', '1+']",44.90%,Medium,50.5056%;,674.2K,1.5M,Y
210,210. Course Schedule II,"['Depth-First Search', 'Breadth-First Search', '2+']",48.40%,Medium,65.8479%;,794.1K,1.6M,Y
211,211. Design Add and Search Words Data Structure,"['String', 'Depth-First Search', 'Design', '1+']",43.00%,Medium,34.7897%;,472K,1.1M,Y
212,212. Word Search II,"['Array', 'String', 'Backtracking', '2+']",36.50%,Hard,83.515%;,548.1K,1.5M,Y
213,213. House Robber II,"['Array', 'Dynamic Programming']",41.00%,Medium,42.8617%;,556.9K,1.4M,Y
214,214. Shortest Palindrome,"['String', 'Rolling Hash', 'String Matching', '1+']",32.30%,Hard,48.0099%;,153.5K,475K,Y
215,215. Kth Largest Element in an Array,"['Array', 'Divide and Conquer', 'Sorting', '2+']",66.10%,Medium,75.6022%;,1.7M,2.6M,Y
216,216. Combination Sum III,"['Array', 'Backtracking']",67.60%,Medium,45.9552%;,391.6K,579.5K,Y
217,217. Contains Duplicate,"['Array', 'Hash Table', 'Sorting']",61.40%,Easy,86.1814%;,2.6M,4.2M,Y
218,218. The Skyline Problem,"['Array', 'Divide and Conquer', '5+']",41.80%,Hard,84.8499%;,261.2K,624.9K,Y
219,219. Contains Duplicate II,"['Array', 'Hash Table', 'Sliding Window']",42.50%,Easy,69.3107%;,649.9K,1.5M,Y
220,220. Contains Duplicate III,"['Array', 'Sliding Window', 'Sorting', '2+']",22.10%,Hard,40.6119%;,226.8K,1M,Y
221,221. Maximal Square,"['Array', 'Dynamic Programming', 'Matrix']",44.90%,Medium,64.2847%;,571K,1.3M,Y
222,222. Count Complete Tree Nodes,"['Binary Search', 'Tree', 'Depth-First Search', '1+']",60.40%,Medium,54.5272%;,534.9K,885.1K,Y
223,223. Rectangle Area,"['Math', 'Geometry']",45.10%,Medium,79.455%;,198.1K,439.3K,Y
224,224. Basic Calculator,"['Math', 'String', 'Stack', '1+']",42.40%,Hard,75.6284%;,374K,881.9K,Y
225,225. Implement Stack using Queues,"['Stack', 'Design', 'Queue']",58.50%,Easy,44.4746%;,434.1K,741.9K,Y
226,226. Invert Binary Tree,"['Tree', 'Depth-First Search', '2+']",74.60%,Easy,59.3813%;,1.5M,2M,Y
227,227. Basic Calculator II,"['Math', 'String', 'Stack']",42.40%,Medium,68.717%;,507.7K,1.2M,Y
228,228. Summary Ranges,['Array'],47.20%,Easy,74.902%;,339.4K,719.8K,Y
229,229. Majority Element II,"['Array', 'Hash Table', 'Sorting', '1+']",45.00%,Medium,50.72%;,385.9K,858.3K,Y
230,230. Kth Smallest Element in a BST,"['Tree', 'Depth-First Search', '2+']",70.10%,Medium,54.3127%;,1.1M,1.5M,Y
231,231. Power of Two,"['Math', 'Bit Manipulation', 'Recursion']",46.00%,Easy,71.0683%;,855.7K,1.9M,Y
232,232. Implement Queue using Stacks,"['Stack', 'Design', 'Queue']",63.10%,Easy,59.6488%;,633.2K,1M,Y
233,233. Number of Digit One,"['Math', 'Dynamic Programming', 'Recursion']",34.00%,Hard,58.364%;,75.1K,221.2K,Y
234,234. Palindrome Linked List,"['Linked List', 'Two Pointers', 'Stack', '1+']",50.10%,Easy,88.1958%;,1.4M,2.8M,Y
235,235. Lowest Common Ancestor of a Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",61.40%,Medium,47.4298%;,1.1M,1.8M,Y
236,236. Lowest Common Ancestor of a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",58.70%,Medium,69.9737%;,1.3M,2.2M,Y
237,237. Delete Node in a Linked List,['Linked List'],75.90%,Medium,65.6653%;,1M,1.4M,Y
238,238. Product of Array Except Self,"['Array', 'Prefix Sum']",65.00%,Medium,77.2652%;,1.6M,2.4M,Y
239,239. Sliding Window Maximum,"['Array', 'Queue', 'Sliding Window', '2+']",46.30%,Hard,82.4741%;,735.1K,1.6M,Y
240,240. Search a 2D Matrix II,"['Array', 'Binary Search', '2+']",51.00%,Medium,62.3271%;,771.7K,1.5M,Y
241,241. Different Ways to Add Parentheses,"['Math', 'String', 'Dynamic Programming', '2+']",63.80%,Medium,58.6391%;,190.9K,299.1K,Y
242,242. Valid Anagram,"['Hash Table', 'String', 'Sorting']",63.00%,Easy,71.0715%;,2M,3.2M,Y
243,243. Shortest Word Distance,"['Array', 'String']",65.00%,Easy,34.7241%;,199.2K,306.5K,Y
244,244. Shortest Word Distance II,"['Array', 'Hash Table', 'Two Pointers', '2+']",60.80%,Medium,32.353%;,146.2K,240.3K,Y
245,245. Shortest Word Distance III,"['Array', 'String']",57.60%,Medium,22.8064%;,74K,128.5K,Y
246,246. Strobogrammatic Number,"['Hash Table', 'Two Pointers', 'String']",47.70%,Easy,40.8403%;,158.4K,331.8K,Y
247,247. Strobogrammatic Number II,"['Array', 'String', 'Recursion']",51.50%,Medium,41.9109%;,128.3K,248.9K,Y
248,248. Strobogrammatic Number III,"['Array', 'String', 'Recursion']",41.90%,Hard,25.795%;,35.3K,84.3K,Y
249,249. Group Shifted Strings,"['Array', 'Hash Table', 'String']",64.30%,Medium,45.7869%;,189.5K,294.6K,Y
250,250. Count Univalue Subtrees,"['Tree', 'Depth-First Search', 'Binary Tree']",55.40%,Medium,27.4362%;,137.1K,247.4K,Y
251,251. Flatten 2D Vector,"['Array', 'Two Pointers', 'Design', '1+']",49.10%,Medium,41.1983%;,118.5K,241.3K,Y
252,252. Meeting Rooms,"['Array', 'Sorting']",57.20%,Easy,44.4959%;,334.7K,584.8K,Y
253,253. Meeting Rooms II,"['Array', 'Two Pointers', 'Greedy', '3+']",50.60%,Medium,90.5815%;,767.4K,1.5M,Y
254,254. Factor Combinations,"['Array', 'Backtracking']",49.10%,Medium,46.8304%;,119.5K,243.5K,Y
255,255. Verify Preorder Sequence in Binary Search Tree,"['Stack', 'Tree', 'Binary Search Tree', '3+']",48.20%,Medium,15.2639%;,70.1K,145.4K,Y
256,256. Paint House,"['Array', 'Dynamic Programming']",61.00%,Medium,40.8999%;,184.2K,301.9K,Y
257,257. Binary Tree Paths,"['String', 'Backtracking', 'Tree', '2+']",61.30%,Easy,40.9746%;,604.2K,985.5K,Y
258,258. Add Digits,"['Math', 'Simulation', 'Number Theory']",63.90%,Easy,51.3058%;,551.4K,862.8K,Y
259,259. 3Sum Smaller,"['Array', 'Two Pointers', 'Binary Search', '1+']",50.70%,Medium,27.0797%;,133.4K,263.3K,Y
260,260. Single Number III,"['Array', 'Bit Manipulation']",67.60%,Medium,34.2263%;,292.1K,431.8K,Y
261,261. Graph Valid Tree,"['Depth-First Search', 'Breadth-First Search', '2+']",47.10%,Medium,47.7118%;,333.1K,707.4K,Y
262,262. Trips and Users,['Database'],37.50%,Hard,30.4185%;,143.1K,381.5K,Y
263,263. Ugly Number,['Math'],42.30%,Easy,63.8564%;,415.7K,982.4K,Y
264,264. Ugly Number II,"['Hash Table', 'Math', '2+']",46.20%,Medium,59.6048%;,301.5K,652.9K,Y
265,265. Paint House II,"['Array', 'Dynamic Programming']",52.90%,Hard,16.4607%;,108.4K,205K,Y
266,266. Palindrome Permutation,"['Hash Table', 'String', 'Bit Manipulation']",66.00%,Easy,30.7804%;,179.8K,272.4K,Y
267,267. Palindrome Permutation II,"['Hash Table', 'String', 'Backtracking']",40.70%,Medium,39.6173%;,60.9K,149.7K,Y
268,268. Missing Number,"['Array', 'Hash Table', 'Math', '3+']",62.40%,Easy,66.4305%;,1.4M,2.3M,Y
269,269. Alien Dictionary,"['Array', 'String', 'Depth-First Search', '3+']",35.30%,Hard,81.4249%;,332.6K,941.7K,Y
270,270. Closest Binary Search Tree Value,"['Binary Search', 'Tree', 'Depth-First Search', '2+']",54.70%,Easy,13.344%;,282K,515.3K,Y
271,271. Encode and Decode Strings,"['Array', 'String', 'Design']",42.70%,Medium,33.5189%;,138.5K,324.3K,Y
272,272. Closest Binary Search Tree Value II,"['Two Pointers', 'Stack', 'Tree', '4+']",58.40%,Hard,20.2551%;,110K,188.4K,Y
273,273. Integer to English Words,"['Math', 'String', 'Recursion']",30.00%,Hard,86.7616%;,339.4K,1.1M,Y
274,274. H-Index,"['Array', 'Sorting', 'Counting Sort']",38.30%,Medium,59.8155%;,257.9K,673.1K,Y
275,275. H-Index II,"['Array', 'Binary Search']",37.50%,Medium,15.4217%;,173.7K,463K,Y
276,276. Paint Fence,['Dynamic Programming'],44.50%,Medium,20.5392%;,96.9K,218K,Y
277,277. Find the Celebrity,"['Two Pointers', 'Greedy', 'Graph', '1+']",46.60%,Medium,42.1061%;,245.8K,527.2K,Y
278,278. First Bad Version,"['Binary Search', 'Interactive']",43.30%,Easy,66.1972%;,1.4M,3.3M,Y
279,279. Perfect Squares,"['Math', 'Dynamic Programming', '1+']",52.60%,Medium,77.8884%;,650.8K,1.2M,Y
280,280. Wiggle Sort,"['Array', 'Greedy', 'Sorting']",67.00%,Medium,35.9968%;,128.3K,191.4K,Y
281,281. Zigzag Iterator,"['Array', 'Design', 'Queue', '1+']",62.70%,Medium,22.1788%;,86.4K,137.7K,Y
282,282. Expression Add Operators,"['Math', 'String', 'Backtracking']",39.20%,Hard,49.0336%;,197.6K,504.1K,Y
283,283. Move Zeroes,"['Array', 'Two Pointers']",61.40%,Easy,74.2405%;,2.1M,3.5M,Y
284,284. Peeking Iterator,"['Array', 'Design', 'Iterator']",58.60%,Medium,32.0943%;,205.4K,350.4K,Y
285,285. Inorder Successor in BST,"['Tree', 'Depth-First Search', '2+']",48.70%,Medium,35.8925%;,300.2K,616.3K,Y
286,286. Walls and Gates,"['Array', 'Breadth-First Search', 'Matrix']",60.40%,Medium,55.097%;,266.1K,440.4K,Y
287,287. Find the Duplicate Number,"['Array', 'Two Pointers', 'Binary Search', '1+']",59.10%,Medium,69.0891%;,1.1M,1.9M,Y
288,288. Unique Word Abbreviation,"['Array', 'Hash Table', 'String', '1+']",25.60%,Medium,0%;,69.1K,270.3K,Y
289,289. Game of Life,"['Array', 'Matrix', 'Simulation']",67.10%,Medium,67.4649%;,386.5K,575.8K,Y
290,290. Word Pattern,"['Hash Table', 'String']",41.70%,Easy,67.6138%;,510.5K,1.2M,Y
291,291. Word Pattern II,"['Hash Table', 'String', 'Backtracking']",47.10%,Medium,26.6969%;,67K,142.3K,Y
292,292. Nim Game,"['Math', 'Brainteaser', 'Game Theory']",56.10%,Easy,27.2155%;,316.2K,564K,Y
293,293. Flip Game,['String'],63.20%,Easy,0%;,63.5K,100.5K,Y
294,294. Flip Game II,"['Math', 'Dynamic Programming', '3+']",51.90%,Medium,21.4467%;,67.4K,129.9K,Y
295,295. Find Median from Data Stream,"['Two Pointers', 'Design', 'Sorting', '2+']",51.40%,Hard,79.0773%;,617K,1.2M,Y
296,296. Best Meeting Point,"['Array', 'Math', 'Sorting', '1+']",60.10%,Hard,56.8247%;,67K,111.5K,Y
297,297. Serialize and Deserialize Binary Tree,"['String', 'Tree', 'Depth-First Search', '3+']",55.40%,Hard,60.628%;,728.4K,1.3M,Y
298,298. Binary Tree Longest Consecutive Sequence,"['Tree', 'Depth-First Search', 'Binary Tree']",52.70%,Medium,10.1499%;,137.1K,260K,Y
299,299. Bulls and Cows,"['Hash Table', 'String', 'Counting']",49.40%,Medium,41.109%;,337.1K,683.1K,Y
300,300. Longest Increasing Subsequence,"['Array', 'Binary Search', 'Dynamic Programming']",52.10%,Medium,66.9241%;,1.2M,2.2M,Y
301,301. Remove Invalid Parentheses,"['String', 'Backtracking', 'Breadth-First Search']",47.20%,Hard,47.4235%;,379K,803.3K,Y
302,302. Smallest Rectangle Enclosing Black Pixels,"['Array', 'Binary Search', '3+']",58.40%,Hard,15.9149%;,47.3K,80.8K,Y
303,303. Range Sum Query - Immutable,"['Array', 'Design', 'Prefix Sum']",59.40%,Easy,34.5242%;,426K,717.7K,Y
304,304. Range Sum Query 2D - Immutable,"['Array', 'Design', 'Matrix', '1+']",52.70%,Medium,39.7511%;,316.7K,600.4K,Y
305,305. Number of Islands II,"['Array', 'Union Find']",39.60%,Hard,38.4091%;,129.8K,327.6K,Y
306,306. Additive Number,"['String', 'Backtracking']",31.10%,Medium,41.7032%;,78.1K,251.6K,Y
307,307. Range Sum Query - Mutable,"['Array', 'Design', 'Binary Indexed Tree', '1+']",40.70%,Medium,29.3059%;,243.6K,598.7K,Y
308,308. Range Sum Query 2D - Mutable,"['Array', 'Design', 'Binary Indexed Tree', '2+']",42.80%,Hard,53.9226%;,71.7K,167.6K,Y
309,309. Best Time to Buy and Sell Stock with Cooldown,"['Array', 'Dynamic Programming']",56.20%,Medium,60.8479%;,394.1K,701.6K,Y
310,310. Minimum Height Trees,"['Depth-First Search', 'Breadth-First Search', '2+']",38.50%,Medium,45.4235%;,242.5K,629.3K,Y
311,311. Sparse Matrix Multiplication,"['Array', 'Hash Table', 'Matrix']",67.30%,Medium,64.6158%;,170.3K,253K,Y
312,312. Burst Balloons,"['Array', 'Dynamic Programming']",57.00%,Hard,65.6197%;,222.9K,391.3K,Y
313,313. Super Ugly Number,"['Array', 'Math', 'Dynamic Programming']",45.50%,Medium,27.9407%;,115.8K,254.5K,Y
314,314. Binary Tree Vertical Order Traversal,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",52.30%,Medium,70.4668%;,318.3K,608.8K,Y
315,315. Count of Smaller Numbers After Self,"['Array', 'Binary Search', '5+']",42.60%,Hard,45.9279%;,289K,678.6K,Y
316,316. Remove Duplicate Letters,"['String', 'Stack', 'Greedy', '1+']",44.90%,Medium,63.665%;,224.8K,500.2K,Y
317,317. Shortest Distance from All Buildings,"['Array', 'Breadth-First Search', 'Matrix']",42.60%,Hard,54.8355%;,152.8K,358.4K,Y
318,318. Maximum Product of Word Lengths,"['Array', 'String', 'Bit Manipulation']",59.90%,Medium,50.3551%;,200.3K,334.5K,Y
319,319. Bulb Switcher,"['Math', 'Brainteaser']",48.30%,Medium,44.9373%;,129.5K,268.1K,Y
320,320. Generalized Abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",57.60%,Medium,19.1985%;,65.1K,112.9K,Y
321,321. Create Maximum Number,"['Stack', 'Greedy', 'Monotonic Stack']",29.00%,Hard,25.2112%;,54K,186K,Y
322,322. Coin Change,"['Array', 'Dynamic Programming', '1+']",42.00%,Medium,81.6819%;,1.3M,3.2M,Y
323,323. Number of Connected Components in an Undirected Graph,"['Depth-First Search', 'Breadth-First Search', '2+']",62.20%,Medium,45.9724%;,327.1K,525.7K,Y
324,324. Wiggle Sort II,"['Array', 'Divide and Conquer', 'Sorting', '1+']",33.30%,Medium,35.7071%;,139.5K,419.6K,Y
325,325. Maximum Size Subarray Sum Equals k,"['Array', 'Hash Table', 'Prefix Sum']",49.20%,Medium,20.2551%;,171.2K,347.7K,Y
326,326. Power of Three,"['Math', 'Recursion']",45.50%,Easy,38.4002%;,663.7K,1.5M,Y
327,327. Count of Range Sum,"['Array', 'Binary Search', '5+']",35.90%,Hard,51.6036%;,67.8K,188.8K,Y
328,328. Odd Even Linked List,['Linked List'],61.20%,Medium,77.1444%;,704.4K,1.2M,Y
329,329. Longest Increasing Path in a Matrix,"['Array', 'Dynamic Programming', '6+']",52.40%,Hard,64.0845%;,436.1K,831.9K,Y
330,330. Patching Array,"['Array', 'Greedy']",40.30%,Hard,47.3288%;,61K,151.7K,Y
331,331. Verify Preorder Serialization of a Binary Tree,"['String', 'Stack', 'Tree', '1+']",44.60%,Medium,26.0135%;,127.5K,286.1K,Y
332,332. Reconstruct Itinerary,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",41.20%,Hard,66.4546%;,324.2K,786.3K,Y
333,333. Largest BST Subtree,"['Dynamic Programming', 'Tree', '3+']",42.80%,Medium,30.9402%;,95.5K,223.3K,Y
334,334. Increasing Triplet Subsequence,"['Array', 'Greedy']",42.70%,Medium,77.6392%;,379.4K,888.2K,Y
335,335. Self Crossing,"['Array', 'Math', 'Geometry']",29.40%,Hard,44.7044%;,30K,102K,Y
336,336. Palindrome Pairs,"['Array', 'Hash Table', 'String', '1+']",35.00%,Hard,74.1221%;,191.3K,546.3K,Y
337,337. House Robber III,"['Dynamic Programming', 'Tree', '2+']",53.90%,Medium,43.488%;,329.8K,611.6K,Y
338,338. Counting Bits,"['Dynamic Programming', 'Bit Manipulation']",75.70%,Easy,39.0655%;,745K,984.2K,Y
339,339. Nested List Weight Sum,"['Depth-First Search', 'Breadth-First Search']",82.30%,Medium,65.5205%;,223K,271.1K,Y
340,340. Longest Substring with At Most K Distinct Characters,"['Hash Table', 'String', 'Sliding Window']",48.00%,Medium,57.139%;,307.9K,641.7K,Y
341,341. Flatten Nested List Iterator,"['Stack', 'Tree', 'Depth-First Search', '3+']",61.80%,Medium,61.1221%;,358.9K,580.8K,Y
342,342. Power of Four,"['Math', 'Bit Manipulation', 'Recursion']",46.10%,Easy,25.57%;,446.2K,968.1K,Y
343,343. Integer Break,"['Math', 'Dynamic Programming']",56.00%,Medium,29.9963%;,226.2K,404.2K,Y
344,344. Reverse String,"['Two Pointers', 'String']",76.70%,Easy,62.4022%;,2M,2.6M,Y
345,345. Reverse Vowels of a String,"['Two Pointers', 'String']",50.10%,Easy,73.7278%;,487K,972.7K,Y
346,346. Moving Average from Data Stream,"['Array', 'Design', 'Queue', '1+']",77.10%,Easy,61.0741%;,305.3K,395.9K,Y
347,347. Top K Frequent Elements,"['Array', 'Hash Table', 'Divide and Conquer', '5+']",64.30%,Medium,70.216%;,1.3M,2.1M,Y
348,348. Design Tic-Tac-Toe,"['Array', 'Hash Table', 'Design', '1+']",57.60%,Medium,53.1781%;,208.7K,362.6K,Y
349,349. Intersection of Two Arrays,"['Array', 'Hash Table', 'Two Pointers', '2+']",70.90%,Easy,66.6635%;,825.8K,1.2M,Y
350,350. Intersection of Two Arrays II,"['Array', 'Hash Table', 'Two Pointers', '2+']",55.90%,Easy,51.6213%;,1M,1.8M,Y
351,351. Android Unlock Patterns,"['Dynamic Programming', 'Backtracking']",51.50%,Medium,15.9149%;,68.8K,133.6K,Y
352,352. Data Stream as Disjoint Intervals,"['Binary Search', 'Design', 'Ordered Set']",59.80%,Hard,67.6876%;,97.8K,163.6K,Y
353,353. Design Snake Game,"['Array', 'Design', 'Queue', '1+']",39.20%,Medium,74.1436%;,72.2K,184.2K,Y
354,354. Russian Doll Envelopes,"['Array', 'Binary Search', '2+']",38.00%,Hard,52.1571%;,185.8K,489.1K,Y
355,355. Design Twitter,"['Hash Table', 'Linked List', 'Design', '1+']",37.20%,Medium,54.2908%;,117.8K,316.4K,Y
356,356. Line Reflection,"['Array', 'Hash Table', 'Math']",34.80%,Medium,70.6067%;,34.4K,99K,Y
357,357. Count Numbers with Unique Digits,"['Math', 'Dynamic Programming', 'Backtracking']",51.80%,Medium,40.8815%;,115.9K,223.7K,Y
358,358. Rearrange String k Distance Apart,"['Hash Table', 'String', 'Greedy', '3+']",37.70%,Hard,28.7601%;,57.4K,152.1K,Y
359,359. Logger Rate Limiter,"['Hash Table', 'Design']",75.60%,Easy,74.5683%;,273K,361K,Y
360,360. Sort Transformed Array,"['Array', 'Math', 'Two Pointers', '1+']",55.00%,Medium,49.6993%;,61.6K,112.1K,Y
361,361. Bomb Enemy,"['Array', 'Dynamic Programming', 'Matrix']",51.30%,Medium,20.2551%;,73.5K,143.4K,Y
362,362. Design Hit Counter,"['Array', 'Hash Table', 'Binary Search', '2+']",68.40%,Medium,77.9034%;,202.2K,295.8K,Y
363,363. Max Sum of Rectangle No Larger Than K,"['Array', 'Binary Search', 'Matrix', '2+']",44.00%,Hard,54.3914%;,118.1K,268.2K,Y
364,364. Nested List Weight Sum II,"['Stack', 'Depth-First Search', '1+']",66.60%,Medium,32.997%;,128.9K,193.6K,Y
365,365. Water and Jug Problem,"['Math', 'Depth-First Search', '1+']",37.40%,Medium,74.2341%;,78.5K,209.9K,Y
366,366. Find Leaves of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",80.30%,Medium,64.9256%;,234.7K,292.3K,Y
367,367. Valid Perfect Square,"['Math', 'Binary Search']",43.30%,Easy,50.5134%;,468.8K,1.1M,Y
368,368. Largest Divisible Subset,"['Array', 'Math', 'Dynamic Programming', '1+']",41.50%,Medium,60.6986%;,175.6K,423.3K,Y
369,369. Plus One Linked List,"['Linked List', 'Math']",61.00%,Medium,17.3991%;,74K,121.3K,Y
370,370. Range Addition,"['Array', 'Prefix Sum']",71.10%,Medium,51.8888%;,85.9K,120.8K,Y
371,371. Sum of Two Integers,"['Math', 'Bit Manipulation']",50.70%,Medium,56.641%;,372.7K,735.2K,Y
372,372. Super Pow,"['Math', 'Divide and Conquer']",36.40%,Medium,35.1004%;,58K,159.2K,Y
373,373. Find K Pairs with Smallest Sums,"['Array', 'Heap (Priority Queue)']",38.30%,Medium,40.8685%;,195.3K,510.6K,Y
374,374. Guess Number Higher or Lower,"['Binary Search', 'Interactive']",51.80%,Easy,65.1467%;,478.7K,924.6K,Y
375,375. Guess Number Higher or Lower II,"['Math', 'Dynamic Programming', 'Game Theory']",46.80%,Medium,32.9595%;,104.2K,222.5K,Y
376,376. Wiggle Subsequence,"['Array', 'Dynamic Programming', 'Greedy']",48.30%,Medium,20.2095%;,217.1K,449.3K,Y
377,377. Combination Sum IV,"['Array', 'Dynamic Programming']",52.20%,Medium,28.14%;,351.3K,673.3K,Y
378,378. Kth Smallest Element in a Sorted Matrix,"['Array', 'Binary Search', 'Sorting', '2+']",61.80%,Medium,32.3564%;,526.7K,852.8K,Y
379,379. Design Phone Directory,"['Array', 'Hash Table', 'Linked List', '2+']",51.20%,Medium,31.2883%;,61.2K,119.7K,Y
380,380. Insert Delete GetRandom O(1),"['Array', 'Hash Table', 'Math', '2+']",52.80%,Medium,93.2644%;,611.9K,1.2M,Y
381,381. Insert Delete GetRandom O(1) - Duplicates allowed,"['Array', 'Hash Table', 'Math', '2+']",35.50%,Hard,49.4591%;,125.4K,353K,Y
382,382. Linked List Random Node,"['Linked List', 'Math', 'Reservoir Sampling', '1+']",62.80%,Medium,45.6466%;,222.2K,354.1K,Y
383,383. Ransom Note,"['Hash Table', 'String', 'Counting']",58.20%,Easy,60.225%;,721.3K,1.2M,Y
384,384. Shuffle an Array,"['Array', 'Math', 'Randomized']",57.80%,Medium,47.2348%;,300.5K,519.7K,Y
385,385. Mini Parser,"['String', 'Stack', 'Depth-First Search']",36.90%,Medium,13.1068%;,51.9K,140.7K,Y
386,386. Lexicographical Numbers,"['Depth-First Search', 'Trie']",61.50%,Medium,52.0145%;,99.7K,162.1K,Y
387,387. First Unique Character in a String,"['Hash Table', 'String', 'Queue', '1+']",59.50%,Easy,70.7727%;,1.4M,2.3M,Y
388,388. Longest Absolute File Path,"['String', 'Stack', 'Depth-First Search']",46.60%,Medium,15.5467%;,141.1K,302.4K,Y
389,389. Find the Difference,"['Hash Table', 'String', 'Bit Manipulation', '1+']",60.00%,Easy,38.1402%;,483.1K,805.7K,Y
390,390. Elimination Game,"['Math', 'Recursion']",46.20%,Medium,61.8318%;,56.6K,122.6K,Y
391,391. Perfect Rectangle,"['Array', 'Line Sweep']",32.80%,Hard,21.4467%;,38.8K,118.4K,Y
392,392. Is Subsequence,"['Two Pointers', 'String', 'Dynamic Programming']",47.70%,Easy,56.3711%;,793.5K,1.7M,Y
393,393. UTF-8 Validation,"['Array', 'Bit Manipulation']",45.10%,Medium,59.2271%;,116.2K,257.8K,Y
394,394. Decode String,"['String', 'Stack', 'Recursion']",57.90%,Medium,86.1733%;,625.6K,1.1M,Y
395,395. Longest Substring with At Least K Repeating Characters,"['Hash Table', 'String', 'Divide and Conquer', '1+']",44.80%,Medium,58.9003%;,185K,413.2K,Y
396,396. Rotate Function,"['Array', 'Math', 'Dynamic Programming']",41.10%,Medium,68.8623%;,72.5K,176.5K,Y
397,397. Integer Replacement,"['Dynamic Programming', 'Greedy', '2+']",35.20%,Medium,32.6173%;,96.6K,274.7K,Y
398,398. Random Pick Index,"['Hash Table', 'Math', 'Reservoir Sampling', '1+']",62.50%,Medium,9.53115%;,187.7K,300.1K,Y
399,399. Evaluate Division,"['Array', 'Depth-First Search', '4+']",59.60%,Medium,71.2624%;,329.1K,551.8K,Y
400,400. Nth Digit,"['Math', 'Binary Search']",34.10%,Medium,48.8189%;,84K,246.3K,Y
401,401. Binary Watch,"['Backtracking', 'Bit Manipulation']",52.20%,Easy,34.9923%;,123K,235.7K,Y
402,402. Remove K Digits,"['String', 'Stack', 'Greedy', '1+']",30.60%,Medium,57.6132%;,303.1K,992K,Y
403,403. Frog Jump,"['Array', 'Dynamic Programming']",43.10%,Hard,54.4084%;,177.6K,411.6K,Y
404,404. Sum of Left Leaves,"['Tree', 'Depth-First Search', '2+']",56.70%,Easy,32.4075%;,425.8K,751.5K,Y
405,405. Convert a Number to Hexadecimal,"['Math', 'Bit Manipulation']",46.70%,Easy,38.5046%;,117.7K,252.1K,Y
406,406. Queue Reconstruction by Height,"['Array', 'Greedy', 'Binary Indexed Tree', '2+']",72.90%,Medium,43.1598%;,280.1K,384.1K,Y
407,407. Trapping Rain Water II,"['Array', 'Breadth-First Search', '2+']",47.60%,Hard,52.4763%;,78.1K,164.2K,Y
408,408. Valid Word Abbreviation,"['Two Pointers', 'String']",34.80%,Easy,38.7718%;,117.8K,338.1K,Y
409,409. Longest Palindrome,"['Hash Table', 'String', 'Greedy']",54.20%,Easy,42.4855%;,488.5K,900.5K,Y
410,410. Split Array Largest Sum,"['Array', 'Binary Search', '2+']",53.50%,Hard,69.0023%;,257K,480.3K,Y
411,411. Minimum Unique Word Abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",39.40%,Hard,40.3369%;,14.2K,36K,Y
412,412. Fizz Buzz,"['Math', 'String', 'Simulation']",69.80%,Easy,94.3133%;,918.9K,1.3M,Y
413,413. Arithmetic Slices,"['Array', 'Dynamic Programming']",65.10%,Medium,53.3137%;,269.9K,414.7K,Y
414,414. Third Maximum Number,"['Array', 'Sorting']",33.10%,Easy,37.6517%;,416.7K,1.3M,Y
415,415. Add Strings,"['Math', 'String', 'Simulation']",52.50%,Easy,54.2003%;,556.3K,1.1M,Y
416,416. Partition Equal Subset Sum,"['Array', 'Dynamic Programming']",46.30%,Medium,60.5605%;,602.7K,1.3M,Y
417,417. Pacific Atlantic Water Flow,"['Array', 'Depth-First Search', '2+']",54.40%,Medium,50.0053%;,346.6K,637.1K,Y
418,418. Sentence Screen Fitting,"['String', 'Dynamic Programming', 'Simulation']",35.60%,Medium,36.1283%;,92.5K,259.6K,Y
419,419. Battleships in a Board,"['Array', 'Depth-First Search', 'Matrix']",74.80%,Medium,64.2528%;,179K,239.2K,Y
420,420. Strong Password Checker,"['String', 'Greedy', 'Heap (Priority Queue)']",13.80%,Hard,50.332%;,31.4K,227.9K,Y
421,421. Maximum XOR of Two Numbers in an Array,"['Array', 'Hash Table', 'Bit Manipulation', '1+']",54.10%,Medium,54.2759%;,138.7K,256.4K,Y
422,422. Valid Word Square,"['Array', 'Matrix']",39.90%,Easy,3.84757%;,49K,122.8K,Y
423,423. Reconstruct Original Digits from English,"['Hash Table', 'Math', 'String']",51.30%,Medium,57.8198%;,71.5K,139.5K,Y
424,424. Longest Repeating Character Replacement,"['Hash Table', 'String', 'Sliding Window']",51.90%,Medium,65.4677%;,424.2K,818K,Y
425,425. Word Squares,"['Array', 'String', 'Backtracking', '1+']",52.80%,Hard,20.0096%;,69.2K,131.2K,Y
426,426. Convert Binary Search Tree to Sorted Doubly Linked List,"['Linked List', 'Stack', 'Tree', '4+']",64.60%,Medium,38.4091%;,233.7K,361.6K,Y
427,427. Construct Quad Tree,"['Array', 'Divide and Conquer', 'Tree', '1+']",74.50%,Medium,73.9266%;,92.7K,124.4K,Y
428,428. Serialize and Deserialize N-ary Tree,"['String', 'Tree', 'Depth-First Search', '1+']",65.90%,Hard,63.9684%;,77.9K,118.1K,Y
429,429. N-ary Tree Level Order Traversal,"['Tree', 'Breadth-First Search']",70.70%,Medium,20.2095%;,274.1K,387.9K,Y
430,430. Flatten a Multilevel Doubly Linked List,"['Linked List', 'Depth-First Search', '1+']",59.60%,Medium,74.5214%;,283.3K,474.9K,Y
431,431. Encode N-ary Tree to Binary Tree,"['Tree', 'Depth-First Search', '3+']",78.90%,Hard,0%;,19.4K,24.5K,Y
432,432. All O`one Data Structure,"['Hash Table', 'Linked List', 'Design', '1+']",36.60%,Hard,62.0352%;,140.8K,378.4K,Y
433,433. Minimum Genetic Mutation,"['Hash Table', 'String', 'Breadth-First Search']",52.30%,Medium,76.0537%;,114.7K,219.2K,Y
434,434. Number of Segments in a String,['String'],37.20%,Easy,23.5533%;,140.7K,378.3K,Y
435,435. Non-overlapping Intervals,"['Array', 'Dynamic Programming', 'Greedy', '1+']",50.20%,Medium,47.2474%;,349.2K,695.4K,Y
436,436. Find Right Interval,"['Array', 'Binary Search', 'Sorting']",50.80%,Medium,19.8177%;,91.9K,181K,Y
437,437. Path Sum III,"['Tree', 'Depth-First Search', 'Binary Tree']",48.10%,Medium,50.8437%;,444.1K,924.3K,Y
438,438. Find All Anagrams in a String,"['Hash Table', 'String', 'Sliding Window']",50.20%,Medium,66.822%;,742.9K,1.5M,Y
439,439. Ternary Expression Parser,"['String', 'Stack', 'Recursion']",58.40%,Medium,20.2551%;,26.3K,45.1K,Y
440,440. K-th Smallest in Lexicographical Order,['Trie'],31.10%,Hard,46.9417%;,19.7K,63.4K,Y
441,441. Arranging Coins,"['Math', 'Binary Search']",46.20%,Easy,48.1408%;,346.6K,749.9K,Y
442,442. Find All Duplicates in an Array,"['Array', 'Hash Table']",73.40%,Medium,65.4717%;,502.8K,684.6K,Y
443,443. String Compression,"['Two Pointers', 'String']",52.10%,Medium,79.6173%;,368.9K,707.4K,Y
444,444. Sequence Reconstruction,"['Array', 'Graph', 'Topological Sort']",26.70%,Medium,0%;,49.8K,186.5K,Y
445,445. Add Two Numbers II,"['Linked List', 'Math', 'Stack']",59.60%,Medium,56.6293%;,362K,607.1K,Y
446,446. Arithmetic Slices II - Subsequence,"['Array', 'Dynamic Programming']",46.60%,Hard,49.8897%;,73.5K,157.7K,Y
447,447. Number of Boomerangs,"['Array', 'Hash Table', 'Math']",54.90%,Medium,36.5316%;,92.7K,168.8K,Y
448,448. Find All Numbers Disappeared in an Array,"['Array', 'Hash Table']",59.90%,Easy,43.337%;,707.4K,1.2M,Y
449,449. Serialize and Deserialize BST,"['String', 'Tree', 'Depth-First Search', '4+']",57.00%,Medium,46.3268%;,215.9K,378.8K,Y
450,450. Delete Node in a BST,"['Tree', 'Binary Search Tree', 'Binary Tree']",50.30%,Medium,43.0642%;,347.4K,690.8K,Y
451,451. Sort Characters By Frequency,"['Hash Table', 'String', 'Sorting', '3+']",70.10%,Medium,61.8814%;,494.6K,706.1K,Y
452,452. Minimum Number of Arrows to Burst Balloons,"['Array', 'Greedy', 'Sorting']",55.30%,Medium,79.539%;,297.2K,537.7K,Y
453,453. Minimum Moves to Equal Array Elements,"['Array', 'Math']",56.00%,Medium,61.5253%;,149.7K,267.5K,Y
454,454. 4Sum II,"['Array', 'Hash Table']",57.20%,Medium,47.216%;,288.7K,504.6K,Y
455,455. Assign Cookies,"['Array', 'Two Pointers', 'Greedy', '1+']",50.00%,Easy,55.7639%;,214.1K,428.3K,Y
456,456. 132 Pattern,"['Array', 'Binary Search', 'Stack', '2+']",32.40%,Medium,38.4988%;,166.5K,513.6K,Y
457,457. Circular Array Loop,"['Array', 'Hash Table', 'Two Pointers']",32.60%,Medium,34.2204%;,68.6K,210.6K,Y
458,458. Poor Pigs,"['Math', 'Dynamic Programming', 'Combinatorics']",62.90%,Hard,31.2883%;,73.5K,116.8K,Y
459,459. Repeated Substring Pattern,"['String', 'String Matching']",43.70%,Easy,33.0327%;,288.9K,660.7K,Y
460,460. LFU Cache,"['Hash Table', 'Linked List', 'Design', '1+']",43.00%,Hard,77.0194%;,213.7K,497.2K,Y
461,461. Hamming Distance,['Bit Manipulation'],75.00%,Easy,29.7549%;,517.5K,690.1K,Y
462,462. Minimum Moves to Equal Array Elements II,"['Array', 'Math', 'Sorting']",60.00%,Medium,41.1322%;,159K,264.9K,Y
463,463. Island Perimeter,"['Array', 'Depth-First Search', '2+']",69.60%,Easy,48.0575%;,425.2K,610.5K,Y
464,464. Can I Win,"['Math', 'Dynamic Programming', '4+']",29.70%,Medium,44.9208%;,83.7K,281.9K,Y
465,465. Optimal Account Balancing,"['Array', 'Dynamic Programming', '3+']",49.20%,Hard,46.8304%;,78.1K,158.6K,Y
466,466. Count The Repetitions,"['String', 'Dynamic Programming']",29.40%,Hard,36.5316%;,15.7K,53.4K,Y
467,467. Unique Substrings in Wraparound String,"['String', 'Dynamic Programming']",38.50%,Medium,27.6804%;,39.3K,101.9K,Y
468,468. Validate IP Address,['String'],26.60%,Medium,64.5577%;,141.3K,531.1K,Y
469,469. Convex Polygon,"['Math', 'Geometry']",38.80%,Medium,51.3095%;,10.1K,26K,Y
470,470. Implement Rand10() Using Rand7(),"['Math', 'Rejection Sampling', 'Randomized', '1+']",46.40%,Medium,38.3662%;,70.6K,152.1K,Y
471,471. Encode String with Shortest Length,"['String', 'Dynamic Programming']",50.60%,Hard,59.2271%;,29.8K,58.8K,Y
472,472. Concatenated Words,"['Array', 'String', 'Dynamic Programming', '2+']",50.00%,Hard,72.4113%;,206.1K,411.8K,Y
473,473. Matchsticks to Square,"['Array', 'Dynamic Programming', '3+']",40.20%,Medium,32.6173%;,139.1K,346K,Y
474,474. Ones and Zeroes,"['Array', 'String', 'Dynamic Programming']",46.70%,Medium,35.1004%;,167K,357.2K,Y
475,475. Heaters,"['Array', 'Two Pointers', 'Binary Search', '1+']",36.40%,Medium,48.6076%;,100.1K,274.9K,Y
476,476. Number Complement,['Bit Manipulation'],67.30%,Easy,29.0938%;,292.2K,433.9K,Y
477,477. Total Hamming Distance,"['Array', 'Math', 'Bit Manipulation']",52.20%,Medium,15.2639%;,96.8K,185.5K,Y
478,478. Generate Random Point in a Circle,"['Math', 'Geometry', 'Rejection Sampling', '1+']",39.60%,Medium,26.6969%;,36.8K,92.9K,Y
479,479. Largest Palindrome Product,['Math'],32.00%,Hard,44.195%;,21.9K,68.6K,Y
480,480. Sliding Window Median,"['Array', 'Hash Table', 'Sliding Window', '1+']",41.30%,Hard,46.1607%;,125.3K,303.5K,Y
481,481. Magical String,"['Two Pointers', 'String']",50.70%,Medium,28.7601%;,31.5K,62.1K,Y
482,482. License Key Formatting,['String'],43.30%,Easy,29.0149%;,245.8K,567.9K,Y
483,483. Smallest Good Base,"['Math', 'Binary Search']",38.70%,Hard,36.5316%;,18.8K,48.6K,Y
484,484. Find Permutation,"['Array', 'String', 'Stack', '1+']",66.90%,Medium,0%;,35.8K,53.5K,Y
485,485. Max Consecutive Ones,['Array'],56.50%,Easy,40.0624%;,835.4K,1.5M,Y
486,486. Predict the Winner,"['Array', 'Math', 'Dynamic Programming', '2+']",51.10%,Medium,54.6498%;,135.8K,265.8K,Y
487,487. Max Consecutive Ones II,"['Array', 'Dynamic Programming', 'Sliding Window']",49.60%,Medium,48.4772%;,119.3K,240.3K,Y
488,488. Zuma Game,"['String', 'Dynamic Programming', '2+']",34.00%,Hard,50.2568%;,21.3K,62.9K,Y
489,489. Robot Room Cleaner,"['Backtracking', 'Interactive']",76.60%,Hard,56.2091%;,142.8K,186.4K,Y
490,490. The Maze,"['Depth-First Search', 'Breadth-First Search', '1+']",55.80%,Medium,60.8561%;,140.1K,251.3K,Y
491,491. Non-decreasing Subsequences,"['Array', 'Hash Table', 'Backtracking', '1+']",60.10%,Medium,79.2817%;,146.7K,243.9K,Y
492,492. Construct the Rectangle,['Math'],54.60%,Easy,23.4761%;,94.3K,172.6K,Y
493,493. Reverse Pairs,"['Array', 'Binary Search', '5+']",30.90%,Hard,57.565%;,118.5K,383.6K,Y
494,494. Target Sum,"['Array', 'Dynamic Programming', 'Backtracking']",45.70%,Medium,48.0867%;,445.8K,976.4K,Y
495,495. Teemo Attacking,"['Array', 'Simulation']",56.80%,Easy,16.9252%;,120.3K,211.5K,Y
496,496. Next Greater Element I,"['Array', 'Hash Table', 'Stack', '1+']",71.40%,Easy,59.1366%;,504.2K,705.8K,Y
497,497. Random Point in Non-overlapping Rectangles,"['Array', 'Math', 'Binary Search', '4+']",39.40%,Medium,0%;,36.7K,93.2K,Y
498,498. Diagonal Traverse,"['Array', 'Matrix', 'Simulation']",58.30%,Medium,46.4293%;,239.5K,411.1K,Y
499,499. The Maze III,"['Depth-First Search', 'Breadth-First Search', '3+']",47.30%,Hard,36.5316%;,27K,57.1K,Y
500,500. Keyboard Row,"['Array', 'Hash Table', 'String']",69.50%,Easy,33.7027%;,181.2K,260.7K,Y
501,501. Find Mode in Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",49.20%,Easy,31.2883%;,186.2K,378.2K,Y
502,502. IPO,"['Array', 'Greedy', 'Sorting', '1+']",49.70%,Hard,79.9428%;,90.4K,181.7K,Y
503,503. Next Greater Element II,"['Array', 'Stack', 'Monotonic Stack']",63.20%,Medium,60.5903%;,294.2K,465.6K,Y
504,504. Base 7,['Math'],48.40%,Easy,20.2551%;,104K,214.9K,Y
505,505. The Maze II,"['Depth-First Search', 'Breadth-First Search', '3+']",52.50%,Medium,18.2526%;,94.4K,180K,Y
506,506. Relative Ranks,"['Array', 'Sorting', 'Heap (Priority Queue)']",60.40%,Easy,50.0391%;,119.5K,197.9K,Y
507,507. Perfect Number,['Math'],37.70%,Easy,28.6895%;,130.4K,346.3K,Y
508,508. Most Frequent Subtree Sum,"['Hash Table', 'Tree', 'Depth-First Search', '1+']",64.80%,Medium,19.9793%;,124.9K,192.6K,Y
509,509. Fibonacci Number,"['Math', 'Dynamic Programming', '2+']",69.80%,Easy,71.1647%;,1.3M,1.8M,Y
510,510. Inorder Successor in BST II,"['Tree', 'Binary Search Tree', 'Binary Tree']",61.00%,Medium,52.4763%;,60.2K,98.7K,Y
511,511. Game Play Analysis I,['Database'],76.10%,Easy,53.5736%;,163.8K,215.3K,Y
512,512. Game Play Analysis II,['Database'],52.80%,Easy,16.4478%;,72.1K,136.5K,Y
513,513. Find Bottom Left Tree Value,"['Tree', 'Depth-First Search', '2+']",66.80%,Medium,28.7508%;,208.1K,311.4K,Y
514,514. Freedom Trail,"['String', 'Dynamic Programming', '2+']",47.00%,Hard,32.997%;,31.6K,67.3K,Y
515,515. Find Largest Value in Each Tree Row,"['Tree', 'Depth-First Search', '2+']",64.60%,Medium,8.34538%;,223.6K,346.1K,Y
516,516. Longest Palindromic Subsequence,"['String', 'Dynamic Programming']",61.00%,Medium,55.6457%;,325.1K,533K,Y
517,517. Super Washing Machines,"['Array', 'Greedy']",40.20%,Hard,29.1201%;,25.2K,62.6K,Y
518,518. Coin Change II,"['Array', 'Dynamic Programming']",60.50%,Medium,49.5297%;,397.6K,657.4K,Y
519,519. Random Flip Matrix,"['Hash Table', 'Math', 'Reservoir Sampling', '1+']",40.00%,Medium,0%;,16.1K,40.2K,Y
520,520. Detect Capital,['String'],57.00%,Easy,60.8662%;,384.8K,674.7K,Y
521,521. Longest Uncommon Subsequence I,['String'],60.30%,Easy,21.9148%;,95.2K,157.9K,Y
522,522. Longest Uncommon Subsequence II,"['Array', 'Hash Table', 'Two Pointers', '2+']",40.50%,Medium,30.5193%;,46.9K,115.7K,Y
523,523. Continuous Subarray Sum,"['Array', 'Hash Table', 'Math', '1+']",28.50%,Medium,83.7168%;,387.1K,1.4M,Y
524,524. Longest Word in Dictionary through Deleting,"['Array', 'Two Pointers', 'String', '1+']",51.00%,Medium,37.6517%;,140.1K,274.5K,Y
525,525. Contiguous Array,"['Array', 'Hash Table', 'Prefix Sum']",46.80%,Medium,49.7251%;,292.3K,624.2K,Y
526,526. Beautiful Arrangement,"['Array', 'Dynamic Programming', '3+']",64.50%,Medium,58.236%;,149.7K,232.2K,Y
527,527. Word Abbreviation,"['Array', 'String', 'Greedy', '2+']",60.60%,Hard,52.7534%;,25.9K,42.7K,Y
528,528. Random Pick with Weight,"['Array', 'Math', 'Binary Search', '2+']",46.10%,Medium,78.7103%;,357.2K,775.1K,Y
529,529. Minesweeper,"['Array', 'Depth-First Search', '2+']",65.70%,Medium,74.4036%;,134.5K,204.7K,Y
530,530. Minimum Absolute Difference in BST,"['Tree', 'Depth-First Search', '3+']",57.30%,Easy,17.6857%;,200.1K,349.2K,Y
531,531. Lonely Pixel I,"['Array', 'Hash Table', 'Matrix']",62.20%,Medium,27.3012%;,38.9K,62.5K,Y
532,532. K-diff Pairs in an Array,"['Array', 'Hash Table', 'Two Pointers', '2+']",41.10%,Medium,58.5464%;,287.9K,700.3K,Y
533,533. Lonely Pixel II,"['Array', 'Hash Table', 'Matrix']",48.50%,Medium,0%;,12.7K,26.2K,Y
534,534. Game Play Analysis III,['Database'],81.50%,Medium,4.69991%;,63.2K,77.5K,Y
535,535. Encode and Decode TinyURL,"['Hash Table', 'String', 'Design', '1+']",85.90%,Medium,37.3148%;,225.7K,262.7K,Y
536,536. Construct Binary Tree from String,"['String', 'Tree', 'Depth-First Search', '1+']",56.20%,Medium,18.2526%;,82.8K,147.3K,Y
537,537. Complex Number Multiplication,"['Math', 'String', 'Simulation']",71.40%,Medium,50.581%;,87.2K,122.2K,Y
538,538. Convert BST to Greater Tree,"['Tree', 'Depth-First Search', '2+']",67.80%,Medium,23.1699%;,264.2K,390K,Y
539,539. Minimum Time Difference,"['Array', 'Math', 'String', '1+']",56.40%,Medium,53.5273%;,121.6K,215.6K,Y
540,540. Single Element in a Sorted Array,"['Array', 'Binary Search']",59.10%,Medium,88.471%;,458.3K,775K,Y
541,541. Reverse String II,"['Two Pointers', 'String']",50.50%,Easy,55.4757%;,191.3K,379K,Y
542,542. 01 Matrix,"['Array', 'Dynamic Programming', '2+']",44.70%,Medium,59.3144%;,365.3K,818.1K,Y
543,543. Diameter of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",56.70%,Easy,58.9512%;,1M,1.8M,Y
544,544. Output Contest Matches,"['String', 'Recursion', 'Simulation']",76.90%,Medium,0%;,25.9K,33.7K,Y
545,545. Boundary of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",44.50%,Medium,38.9364%;,118.8K,266.9K,Y
546,546. Remove Boxes,"['Array', 'Dynamic Programming', 'Memoization']",47.70%,Hard,58.4801%;,39.1K,82.1K,Y
547,547. Number of Provinces,"['Depth-First Search', 'Breadth-First Search', '2+']",63.70%,Medium,48.487%;,602.1K,945.4K,Y
548,548. Split Array with Equal Sum,"['Array', 'Prefix Sum']",50.10%,Hard,0%;,23.2K,46.3K,Y
549,549. Binary Tree Longest Consecutive Sequence II,"['Tree', 'Depth-First Search', 'Binary Tree']",49.50%,Medium,0%;,49.8K,100.7K,Y
550,550. Game Play Analysis IV,['Database'],43.00%,Medium,20.3451%;,53.8K,125.1K,Y
551,551. Student Attendance Record I,['String'],48.20%,Easy,12.7433%;,173.9K,360.8K,Y
552,552. Student Attendance Record II,['Dynamic Programming'],41.40%,Hard,29.2756%;,58.6K,141.8K,Y
553,553. Optimal Division,"['Array', 'Math', 'Dynamic Programming']",59.90%,Medium,38.8308%;,35.1K,58.6K,Y
554,554. Brick Wall,"['Array', 'Hash Table']",53.50%,Medium,47.3171%;,114.4K,213.8K,Y
555,555. Split Concatenated Strings,"['Array', 'String', 'Greedy']",43.60%,Medium,0%;,6.3K,14.5K,Y
556,556. Next Greater Element III,"['Math', 'Two Pointers', 'String']",34.00%,Medium,65.4725%;,124.3K,365.4K,Y
557,557. Reverse Words in a String III,"['Two Pointers', 'String']",81.90%,Easy,65.553%;,669.8K,818.2K,Y
558,558. Logical OR of Two Binary Grids Represented as Quad-Trees,"['Divide and Conquer', 'Tree']",48.60%,Medium,49.6993%;,12.8K,26.4K,Y
559,559. Maximum Depth of N-ary Tree,"['Tree', 'Depth-First Search', '1+']",71.70%,Easy,21.0658%;,245K,341.9K,Y
560,560. Subarray Sum Equals K,"['Array', 'Hash Table', 'Prefix Sum']",43.70%,Medium,89.4621%;,945.1K,2.2M,Y
561,561. Array Partition,"['Array', 'Greedy', 'Sorting', '1+']",77.20%,Easy,39.0219%;,389.7K,505.1K,Y
562,562. Longest Line of Consecutive One in Matrix,"['Array', 'Dynamic Programming', 'Matrix']",50.20%,Medium,36.272%;,71.7K,142.8K,Y
563,563. Binary Tree Tilt,"['Tree', 'Depth-First Search', 'Binary Tree']",60.00%,Easy,17.8323%;,186.8K,311.6K,Y
564,564. Find the Closest Palindrome,"['Math', 'String']",21.90%,Hard,64.9585%;,37.5K,171.4K,Y
565,565. Array Nesting,"['Array', 'Depth-First Search']",56.40%,Medium,0%;,121.5K,215.5K,Y
566,566. Reshape the Matrix,"['Array', 'Matrix', 'Simulation']",62.90%,Easy,37.2097%;,334.2K,531.6K,Y
567,567. Permutation in String,"['Hash Table', 'Two Pointers', 'String', '1+']",44.40%,Medium,72.6879%;,625.6K,1.4M,Y
568,568. Maximum Vacation Days,"['Array', 'Dynamic Programming', 'Matrix']",45.00%,Hard,28.4803%;,35.8K,79.5K,Y
569,569. Median Employee Salary,['Database'],67.40%,Hard,12.232%;,34.1K,50.6K,Y
570,570. Managers with at Least 5 Direct Reports,['Database'],66.60%,Medium,9.64962%;,77.1K,115.7K,Y
571,571. Find Median Given Frequency of Numbers,['Database'],43.80%,Hard,0%;,24.3K,55.5K,Y
572,572. Subtree of Another Tree,"['Tree', 'Depth-First Search', '3+']",46.30%,Easy,37.9484%;,633.5K,1.4M,Y
573,573. Squirrel Simulation,"['Array', 'Math']",55.10%,Medium,0%;,17.9K,32.6K,Y
574,574. Winning Candidate,['Database'],59.80%,Medium,7.43296%;,55.8K,93.3K,Y
575,575. Distribute Candies,"['Array', 'Hash Table']",66.40%,Easy,20.6756%;,237.4K,357.3K,Y
576,576. Out of Boundary Paths,['Dynamic Programming'],44.30%,Medium,24.868%;,115.2K,260.3K,Y
577,577. Employee Bonus,['Database'],75.10%,Easy,0%;,70.9K,94.4K,Y
578,578. Get Highest Answer Rate Question,['Database'],41.00%,Medium,9.32972%;,47.9K,116.8K,Y
579,579. Find Cumulative Salary of an Employee,['Database'],45.50%,Hard,0%;,30.2K,66.4K,Y
580,580. Count Student Number in Departments,['Database'],58.60%,Medium,5.49016%;,58.9K,100.6K,Y
581,581. Shortest Unsorted Continuous Subarray,"['Array', 'Two Pointers', 'Stack', '3+']",36.40%,Medium,38.6452%;,298.9K,820.7K,Y
582,582. Kill Process,"['Array', 'Hash Table', 'Tree', '2+']",68.70%,Medium,33.5231%;,78.4K,114.1K,Y
583,583. Delete Operation for Two Strings,"['String', 'Dynamic Programming']",59.70%,Medium,34.4648%;,199.9K,334.7K,Y
584,584. Find Customer Referee,['Database'],69.40%,Easy,31.2554%;,287.3K,414.1K,Y
585,585. Investments in 2016,['Database'],52.20%,Medium,22.1031%;,39.1K,74.8K,Y
586,586. Customer Placing the Largest Number of Orders,['Database'],69.40%,Easy,24.3538%;,159.3K,229.7K,Y
587,587. Erect the Fence,"['Array', 'Math', 'Geometry']",52.20%,Hard,93.7538%;,53.6K,102.7K,Y
588,588. Design In-Memory File System,"['Hash Table', 'String', 'Design', '1+']",48.60%,Hard,81.7243%;,84K,172.8K,Y
589,589. N-ary Tree Preorder Traversal,"['Stack', 'Tree', 'Depth-First Search']",75.90%,Easy,14.0275%;,374.7K,493.6K,Y
590,590. N-ary Tree Postorder Traversal,"['Stack', 'Tree', 'Depth-First Search']",77.40%,Easy,7.61123%;,220.8K,285.2K,Y
591,591. Tag Validator,"['String', 'Stack']",37.20%,Hard,28.4803%;,12.9K,34.7K,Y
592,592. Fraction Addition and Subtraction,"['Math', 'String', 'Simulation']",52.40%,Medium,45.7869%;,32.1K,61.3K,Y
593,593. Valid Square,"['Math', 'Geometry']",44.00%,Medium,54.0316%;,96.5K,219.6K,Y
594,594. Longest Harmonious Subsequence,"['Array', 'Hash Table', 'Sorting']",53.50%,Easy,29.2859%;,132.6K,248K,Y
595,595. Big Countries,['Database'],70.70%,Easy,83.1005%;,583K,825.1K,Y
596,596. Classes More Than 5 Students,['Database'],47.90%,Easy,34.7103%;,235.4K,491.4K,Y
597,597. Friend Requests I: Overall Acceptance Rate,['Database'],42.50%,Easy,7.98907%;,67.6K,159.1K,Y
598,598. Range Addition II,"['Array', 'Math']",55.30%,Easy,37.055%;,88K,159.1K,Y
599,599. Minimum Index Sum of Two Lists,"['Array', 'Hash Table', 'String']",53.30%,Easy,27.1231%;,185.3K,347.8K,Y
600,600. Non-negative Integers without Consecutive Ones,['Dynamic Programming'],39.20%,Hard,49.8689%;,34K,86.9K,Y
601,601. Human Traffic of Stadium,['Database'],49.90%,Hard,36.6635%;,77.4K,155K,
602,602. Friend Requests II: Who Has the Most Friends,['Database'],61.10%,Medium,23.9635%;,56.7K,92.7K,Y
603,603. Consecutive Available Seats,['Database'],67.50%,Easy,9.64962%;,73.2K,108.4K,Y
604,604. Design Compressed String Iterator,"['Array', 'Hash Table', 'String', '2+']",39.50%,Easy,20.2551%;,29.3K,74.2K,Y
605,605. Can Place Flowers,"['Array', 'Greedy']",32.50%,Easy,43.1381%;,348.4K,1.1M,
606,606. Construct String from Binary Tree,"['String', 'Tree', 'Depth-First Search', '1+']",64.00%,Easy,30.9784%;,213.7K,334.1K,
607,607. Sales Person,['Database'],69.60%,Easy,32.4931%;,134.8K,193.7K,
608,608. Tree Node,['Database'],71.60%,Medium,39.4868%;,115.7K,161.6K,
609,609. Find Duplicate File in System,"['Array', 'Hash Table', 'String']",67.80%,Medium,75.203%;,143.6K,212K,
610,610. Triangle Judgement,['Database'],70.90%,Easy,0%;,60.1K,84.8K,Y
611,611. Valid Triangle Number,"['Array', 'Two Pointers', 'Binary Search', '2+']",50.50%,Medium,61.5307%;,166K,328.6K,
612,612. Shortest Distance in a Plane,['Database'],62.70%,Medium,11.4586%;,36K,57.4K,Y
613,613. Shortest Distance in a Line,['Database'],81.00%,Easy,0%;,61.9K,76.5K,Y
614,614. Second Degree Follower,['Database'],37.50%,Medium,21.5888%;,47K,125.4K,Y
615,615. Average Salary: Departments VS Company,['Database'],56.60%,Hard,0%;,31.6K,55.9K,Y
616,616. Add Bold Tag in String,"['Array', 'Hash Table', 'String', '2+']",48.80%,Medium,66.4786%;,82.1K,168.2K,Y
617,617. Merge Two Binary Trees,"['Tree', 'Depth-First Search', '2+']",78.60%,Easy,28.9632%;,670K,852K,
618,618. Students Report By Geography,['Database'],64.20%,Hard,12.6554%;,20.4K,31.8K,Y
619,619. Biggest Single Number,['Database'],49.80%,Easy,6.78199%;,59.9K,120.4K,Y
620,620. Not Boring Movies,['Database'],72.30%,Easy,16.0432%;,225.9K,312.4K,
621,621. Task Scheduler,"['Array', 'Hash Table', 'Greedy', '3+']",56.30%,Medium,66.7477%;,419.1K,744.7K,
622,622. Design Circular Queue,"['Array', 'Linked List', 'Design', '1+']",51.60%,Medium,64.9051%;,259.3K,502.6K,
623,623. Add One Row to Tree,"['Tree', 'Depth-First Search', '2+']",59.50%,Medium,61.7718%;,148.8K,250.2K,
624,624. Maximum Distance in Arrays,"['Array', 'Greedy']",41.80%,Medium,28.4803%;,36.9K,88.1K,Y
625,625. Minimum Factorization,"['Math', 'Greedy']",33.50%,Medium,34.9923%;,10.7K,31.8K,Y
626,626. Exchange Seats,['Database'],70.00%,Medium,38.4988%;,130.8K,187K,
627,627. Swap Salary,['Database'],83.10%,Easy,35.7438%;,329.2K,396.2K,
628,628. Maximum Product of Three Numbers,"['Array', 'Math', 'Sorting']",46.00%,Easy,58.1302%;,256.9K,558.8K,
629,629. K Inverse Pairs Array,['Dynamic Programming'],42.70%,Hard,55.2589%;,58K,136K,
630,630. Course Schedule III,"['Array', 'Greedy', 'Heap (Priority Queue)']",40.20%,Hard,28.511%;,101.2K,251.8K,
631,631. Design Excel Sum Formula,"['Graph', 'Design', 'Topological Sort']",43.50%,Hard,59.5121%;,13.6K,31.2K,Y
632,632. Smallest Range Covering Elements from K Lists,"['Array', 'Hash Table', 'Greedy', '3+']",61.00%,Hard,56.046%;,83.2K,136.5K,
633,633. Sum of Square Numbers,"['Math', 'Two Pointers', 'Binary Search']",34.40%,Medium,31.2003%;,166.8K,484.8K,
634,634. Find the Derangement of An Array,"['Math', 'Dynamic Programming']",42.00%,Medium,0%;,10.3K,24.6K,Y
635,635. Design Log Storage System,"['Hash Table', 'String', 'Design', '1+']",62.80%,Medium,50.2568%;,33.1K,52.7K,Y
636,636. Exclusive Time of Functions,"['Array', 'Stack']",61.20%,Medium,52.1936%;,187.9K,307.2K,
637,637. Average of Levels in Binary Tree,"['Tree', 'Depth-First Search', '2+']",71.80%,Easy,11.8575%;,383.9K,535.1K,
638,638. Shopping Offers,"['Array', 'Dynamic Programming', '4+']",53.30%,Medium,30.7903%;,52.1K,97.7K,
639,639. Decode Ways II,"['String', 'Dynamic Programming']",30.40%,Hard,21.7694%;,66.6K,219K,
640,640. Solve the Equation,"['Math', 'String', 'Simulation']",43.40%,Medium,19.1985%;,35.5K,81.9K,
641,641. Design Circular Deque,"['Array', 'Linked List', 'Design', '1+']",57.40%,Medium,10.6971%;,54.6K,95.2K,
642,642. Design Search Autocomplete System,"['String', 'Design', 'Trie', '1+']",48.60%,Hard,54.7192%;,128.6K,264.3K,Y
643,643. Maximum Average Subarray I,"['Array', 'Sliding Window']",43.70%,Easy,25.744%;,198.1K,453.1K,
644,644. Maximum Average Subarray II,"['Array', 'Binary Search', 'Prefix Sum']",35.90%,Hard,0%;,18.6K,51.9K,Y
645,645. Set Mismatch,"['Array', 'Hash Table', 'Bit Manipulation', '1+']",42.70%,Easy,63.0818%;,263.1K,615.4K,
646,646. Maximum Length of Pair Chain,"['Array', 'Dynamic Programming', 'Greedy', '1+']",56.50%,Medium,38.5906%;,132.1K,233.7K,
647,647. Palindromic Substrings,"['String', 'Dynamic Programming']",66.80%,Medium,55.4586%;,556K,832K,
648,648. Replace Words,"['Array', 'Hash Table', 'String', '1+']",62.70%,Medium,21.4467%;,116.8K,186.3K,
649,649. Dota2 Senate,"['String', 'Greedy', 'Queue']",40.60%,Medium,10.4515%;,23K,56.6K,
650,650. 2 Keys Keyboard,"['Math', 'Dynamic Programming']",53.40%,Medium,21.0977%;,114.6K,214.7K,
651,651. 4 Keys Keyboard,"['Math', 'Dynamic Programming']",54.60%,Medium,0%;,23.8K,43.5K,Y
652,652. Find Duplicate Subtrees,"['Hash Table', 'Tree', 'Depth-First Search', '1+']",59.00%,Medium,65.2281%;,228.2K,387.1K,
653,653. Two Sum IV - Input is a BST,"['Hash Table', 'Two Pointers', 'Tree', '4+']",61.00%,Easy,54.2192%;,445.5K,730K,
654,654. Maximum Binary Tree,"['Array', 'Divide and Conquer', 'Stack', '3+']",84.70%,Medium,15.1263%;,250.2K,295.3K,
655,655. Print Binary Tree,"['Tree', 'Depth-First Search', '2+']",61.90%,Medium,42.6099%;,58.9K,95.1K,
656,656. Coin Path,"['Array', 'Dynamic Programming']",31.80%,Hard,0%;,13.3K,41.9K,Y
657,657. Robot Return to Origin,"['String', 'Simulation']",75.30%,Easy,28.8353%;,364.7K,484.2K,
658,658. Find K Closest Elements,"['Array', 'Two Pointers', 'Binary Search', '3+']",46.80%,Medium,78.2345%;,421.9K,901.3K,
659,659. Split Array into Consecutive Subsequences,"['Array', 'Hash Table', 'Greedy', '1+']",50.80%,Medium,43.3256%;,122.2K,240.6K,
660,660. Remove 9,['Math'],57.30%,Hard,0%;,10.2K,17.8K,Y
661,661. Image Smoother,"['Array', 'Matrix']",55.40%,Easy,30.9402%;,71.6K,129.3K,
662,662. Maximum Width of Binary Tree,"['Tree', 'Depth-First Search', '2+']",40.70%,Medium,54.168%;,242K,594.2K,
663,663. Equal Tree Partition,"['Tree', 'Depth-First Search', 'Binary Tree']",41.40%,Medium,0%;,29.2K,70.6K,Y
664,664. Strange Printer,"['String', 'Dynamic Programming']",46.90%,Hard,39.8147%;,31.5K,67.3K,
665,665. Non-decreasing Array,['Array'],24.30%,Medium,32.7415%;,238K,980.7K,
666,666. Path Sum IV,"['Array', 'Tree', 'Depth-First Search', '1+']",59.50%,Medium,53.6394%;,21.4K,36K,Y
667,667. Beautiful Arrangement II,"['Array', 'Math']",59.80%,Medium,19.1985%;,50.3K,84K,
668,668. Kth Smallest Number in Multiplication Table,"['Math', 'Binary Search']",51.50%,Hard,23.294%;,55.3K,107.6K,
669,669. Trim a Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",66.40%,Medium,37.4581%;,262.2K,395K,
670,670. Maximum Swap,"['Math', 'Greedy']",47.90%,Medium,38.4002%;,192.4K,401.9K,
671,671. Second Minimum Node In a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",44.10%,Easy,28.4803%;,166K,376.5K,
672,672. Bulb Switcher II,"['Math', 'Bit Manipulation', '2+']",50.70%,Medium,26.6969%;,19.2K,37.9K,
673,673. Number of Longest Increasing Subsequence,"['Array', 'Dynamic Programming', '2+']",42.80%,Medium,33.2498%;,140.6K,328.7K,
674,674. Longest Continuous Increasing Subsequence,['Array'],49.30%,Easy,34.2617%;,222.3K,451.2K,
675,675. Cut Off Trees for Golf Event,"['Array', 'Breadth-First Search', '2+']",34.10%,Hard,33.203%;,61.6K,180.9K,
676,676. Implement Magic Dictionary,"['Hash Table', 'String', 'Design', '1+']",57.00%,Medium,0%;,71.1K,124.9K,
677,677. Map Sum Pairs,"['Hash Table', 'String', 'Design', '1+']",56.80%,Medium,12.9025%;,101.8K,179.1K,
678,678. Valid Parenthesis String,"['String', 'Dynamic Programming', 'Stack', '1+']",34.10%,Medium,55.6699%;,201.6K,591.7K,
679,679. 24 Game,"['Array', 'Math', 'Backtracking']",49.20%,Hard,57.4651%;,70.5K,143.5K,
680,680. Valid Palindrome II,"['Two Pointers', 'String', 'Greedy']",39.30%,Easy,58.3097%;,582.9K,1.5M,
681,681. Next Closest Time,"['String', 'Enumeration']",46.40%,Medium,42.0456%;,101.5K,218.9K,Y
682,682. Baseball Game,"['Array', 'Stack', 'Simulation']",74.20%,Easy,54.074%;,241.1K,324.9K,
683,683. K Empty Slots,"['Array', 'Binary Indexed Tree', '2+']",37.00%,Hard,17.3991%;,58.9K,159.4K,Y
684,684. Redundant Connection,"['Depth-First Search', 'Breadth-First Search', '2+']",62.20%,Medium,44.0707%;,265.1K,426.2K,
685,685. Redundant Connection II,"['Depth-First Search', 'Breadth-First Search', '2+']",34.10%,Hard,19.8892%;,60.2K,176.5K,
686,686. Repeated String Match,"['String', 'String Matching']",34.20%,Medium,35.5963%;,137.3K,401.8K,
687,687. Longest Univalue Path,"['Tree', 'Depth-First Search', 'Binary Tree']",40.40%,Medium,37.9182%;,161.3K,399K,
688,688. Knight Probability in Chessboard,['Dynamic Programming'],52.10%,Medium,33.5734%;,93.6K,179.6K,
689,689. Maximum Sum of 3 Non-Overlapping Subarrays,"['Array', 'Dynamic Programming']",48.90%,Hard,17.6967%;,66.9K,136.7K,
690,690. Employee Importance,"['Hash Table', 'Depth-First Search', '1+']",65.50%,Medium,48.6076%;,191.9K,292.8K,
691,691. Stickers to Spell Word,"['Array', 'String', 'Dynamic Programming', '3+']",46.30%,Hard,29.1201%;,37.2K,80.5K,
692,692. Top K Frequent Words,"['Hash Table', 'String', 'Trie', '4+']",57.10%,Medium,69.0138%;,533K,933K,
693,693. Binary Number with Alternating Bits,['Bit Manipulation'],61.60%,Easy,43.223%;,110.8K,180K,
694,694. Number of Distinct Islands,"['Hash Table', 'Depth-First Search', '3+']",60.70%,Medium,56.5051%;,147.1K,242.3K,Y
695,695. Max Area of Island,"['Array', 'Depth-First Search', '3+']",71.80%,Medium,57.7264%;,689.9K,961.2K,
696,696. Count Binary Substrings,"['Two Pointers', 'String']",65.50%,Easy,56.1603%;,182.2K,278.1K,
697,697. Degree of an Array,"['Array', 'Hash Table']",55.90%,Easy,71.6205%;,177.6K,317.5K,
698,698. Partition to K Equal Sum Subsets,"['Array', 'Dynamic Programming', '4+']",40.10%,Medium,52.424%;,232.2K,579.5K,
699,699. Falling Squares,"['Array', 'Segment Tree', 'Ordered Set']",44.50%,Hard,16.6236%;,22.7K,51K,
700,700. Search in a Binary Search Tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",77.60%,Easy,20.3853%;,620.3K,799.2K,
701,701. Insert into a Binary Search Tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",74.30%,Medium,21.8846%;,397K,534K,
702,702. Search in a Sorted Array of Unknown Size,"['Array', 'Binary Search', 'Interactive']",71.50%,Medium,30.3128%;,85.8K,120K,Y
703,703. Kth Largest Element in a Stream,"['Tree', 'Design', 'Binary Search Tree', '3+']",55.50%,Easy,36.1579%;,341K,614.7K,
704,704. Binary Search,"['Array', 'Binary Search']",55.50%,Easy,82.6064%;,1.6M,2.9M,
705,705. Design HashSet,"['Array', 'Hash Table', 'Linked List', '2+']",65.60%,Easy,42.0321%;,278.5K,424.3K,
706,706. Design HashMap,"['Array', 'Hash Table', 'Linked List', '2+']",64.70%,Easy,63.9862%;,402.2K,621.4K,
707,707. Design Linked List,"['Linked List', 'Design']",27.60%,Medium,38.3061%;,250.3K,906.3K,
708,708. Insert into a Sorted Circular Linked List,['Linked List'],34.50%,Medium,47.3848%;,129.3K,374.5K,Y
709,709. To Lower Case,['String'],82.30%,Easy,24.8418%;,409.8K,497.9K,
710,710. Random Pick with Blacklist,"['Array', 'Hash Table', 'Math', '3+']",33.50%,Hard,20.2551%;,35.8K,106.7K,
711,711. Number of Distinct Islands II,"['Hash Table', 'Depth-First Search', '3+']",51.90%,Hard,44.195%;,9.3K,17.8K,Y
712,712. Minimum ASCII Delete Sum for Two Strings,"['String', 'Dynamic Programming']",62.50%,Medium,18.7129%;,74.9K,119.8K,
713,713. Subarray Product Less Than K,"['Array', 'Sliding Window']",45.70%,Medium,57.0715%;,221.3K,484.5K,
714,714. Best Time to Buy and Sell Stock with Transaction Fee,"['Array', 'Dynamic Programming', 'Greedy']",65.10%,Medium,38.4311%;,220.1K,338.3K,
715,715. Range Module,"['Design', 'Segment Tree', 'Ordered Set']",44.60%,Hard,62.9272%;,57.4K,128.5K,
716,716. Max Stack,"['Linked List', 'Stack', 'Design', '2+']",45.20%,Hard,71.6224%;,140.6K,310.9K,Y
717,717. 1-bit and 2-bit Characters,['Array'],45.70%,Easy,28.329%;,115.9K,253.4K,
718,718. Maximum Length of Repeated Subarray,"['Array', 'Binary Search', '4+']",51.30%,Medium,85.6565%;,259K,505K,
719,719. Find K-th Smallest Pair Distance,"['Array', 'Two Pointers', 'Binary Search', '1+']",36.70%,Hard,40.2778%;,74.1K,202.1K,
720,720. Longest Word in Dictionary,"['Array', 'Hash Table', 'String', '2+']",51.90%,Medium,29.0472%;,134.5K,258.9K,
721,721. Accounts Merge,"['Array', 'String', 'Depth-First Search', '2+']",56.30%,Medium,66.533%;,302.7K,537.2K,
722,722. Remove Comments,"['Array', 'String']",38.20%,Medium,80.345%;,64K,167.4K,
723,723. Candy Crush,"['Array', 'Two Pointers', 'Matrix', '1+']",76.60%,Medium,63.2576%;,63.2K,82.5K,Y
724,724. Find Pivot Index,"['Array', 'Prefix Sum']",54.50%,Easy,62.9341%;,774.9K,1.4M,
725,725. Split Linked List in Parts,['Linked List'],57.20%,Medium,49.6993%;,111.6K,195.2K,
726,726. Number of Atoms,"['Hash Table', 'String', 'Stack', '1+']",52.10%,Hard,64.3249%;,52.4K,100.6K,
727,727. Minimum Window Subsequence,"['String', 'Dynamic Programming', '1+']",42.90%,Hard,41.9109%;,82.8K,193.3K,Y
728,728. Self Dividing Numbers,['Math'],77.80%,Easy,24.614%;,201.6K,258.9K,
729,729. My Calendar I,"['Binary Search', 'Design', 'Segment Tree', '1+']",56.90%,Medium,61.4212%;,252.9K,444.6K,
730,730. Count Different Palindromic Subsequences,"['String', 'Dynamic Programming']",44.70%,Hard,60.8039%;,32.4K,72.4K,
731,731. My Calendar II,"['Binary Search', 'Design', 'Segment Tree', '1+']",55.00%,Medium,46.2424%;,89.1K,161.9K,
732,732. My Calendar III,"['Binary Search', 'Design', 'Segment Tree', '1+']",71.50%,Hard,64.5685%;,83K,116K,
733,733. Flood Fill,"['Array', 'Depth-First Search', '2+']",61.80%,Easy,65.2716%;,684.2K,1.1M,
734,734. Sentence Similarity,"['Array', 'Hash Table', 'String']",44.00%,Easy,15.2639%;,60K,136.4K,Y
735,735. Asteroid Collision,"['Array', 'Stack']",44.40%,Medium,70.0342%;,260.8K,587.2K,
736,736. Parse Lisp Expression,"['Hash Table', 'String', 'Stack', '1+']",51.60%,Hard,60.8561%;,20.1K,39K,
737,737. Sentence Similarity II,"['Array', 'Hash Table', 'String', '3+']",49.00%,Medium,44.195%;,65.1K,132.8K,Y
738,738. Monotone Increasing Digits,"['Math', 'Greedy']",47.20%,Medium,33.203%;,44.4K,93.9K,
739,739. Daily Temperatures,"['Array', 'Stack', 'Monotonic Stack']",66.30%,Medium,72.687%;,587.8K,886.5K,
740,740. Delete and Earn,"['Array', 'Hash Table', 'Dynamic Programming']",57.10%,Medium,47.6707%;,259.2K,454.1K,
741,741. Cherry Pickup,"['Array', 'Dynamic Programming', 'Matrix']",36.30%,Hard,37.8734%;,64.1K,176.7K,
742,742. Closest Leaf in a Binary Tree,"['Tree', 'Depth-First Search', '2+']",45.90%,Medium,26.6969%;,41.9K,91.2K,Y
743,743. Network Delay Time,"['Depth-First Search', 'Breadth-First Search', '3+']",51.80%,Medium,34.6487%;,364.8K,704.1K,
744,744. Find Smallest Letter Greater Than Target,"['Array', 'Binary Search']",45.70%,Easy,25.0387%;,283K,619.7K,
745,745. Prefix and Suffix Search,"['Hash Table', 'String', 'Design', '1+']",41.30%,Hard,42.3985%;,89.4K,216.6K,
746,746. Min Cost Climbing Stairs,"['Array', 'Dynamic Programming']",63.10%,Easy,43.8458%;,775.1K,1.2M,
747,747. Largest Number At Least Twice of Others,"['Array', 'Sorting']",47.00%,Easy,10.6401%;,198.1K,420.9K,
748,748. Shortest Completing Word,"['Array', 'Hash Table', 'String']",59.20%,Easy,6.9361%;,60K,101.3K,
749,749. Contain Virus,"['Array', 'Depth-First Search', '3+']",51.10%,Hard,42.122%;,10.2K,20.1K,
750,750. Number Of Corner Rectangles,"['Array', 'Math', 'Dynamic Programming', '1+']",67.50%,Medium,21.4467%;,37.1K,55K,Y
751,751. IP to CIDR,"['String', 'Bit Manipulation']",54.50%,Medium,80.1276%;,17.7K,32.5K,Y
752,752. Open the Lock,"['Array', 'Hash Table', 'String', '1+']",55.60%,Medium,46.7599%;,197.8K,355.6K,
753,753. Cracking the Safe,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",55.80%,Hard,53.6394%;,52.3K,93.8K,
754,754. Reach a Number,"['Math', 'Binary Search']",42.70%,Medium,41.544%;,45.3K,105.9K,
755,755. Pour Water,"['Array', 'Simulation']",46.40%,Medium,76.1149%;,34.7K,74.9K,Y
756,756. Pyramid Transition Matrix,"['Bit Manipulation', 'Depth-First Search', '1+']",52.70%,Medium,18.2526%;,30K,57K,
757,757. Set Intersection Size At Least Two,"['Array', 'Greedy', 'Sorting']",43.80%,Hard,77.3023%;,19K,43.3K,
758,758. Bold Words in String,"['Array', 'Hash Table', 'String', '2+']",50.80%,Medium,0%;,17.8K,35K,Y
759,759. Employee Free Time,"['Array', 'Sorting', 'Heap (Priority Queue)']",71.80%,Hard,57.4686%;,130.5K,181.8K,Y
760,760. Find Anagram Mappings,"['Array', 'Hash Table']",82.90%,Easy,0%;,88K,106.1K,Y
761,761. Special Binary String,"['String', 'Recursion']",60.20%,Hard,40.3369%;,14.9K,24.7K,
762,762. Prime Number of Set Bits in Binary Representation,"['Math', 'Bit Manipulation']",68.00%,Easy,17.3991%;,80.9K,119K,
763,763. Partition Labels,"['Hash Table', 'Two Pointers', 'String', '1+']",79.70%,Medium,45.4307%;,457.3K,573.5K,
764,764. Largest Plus Sign,"['Array', 'Dynamic Programming']",48.30%,Medium,24.8146%;,52.5K,108.6K,
765,765. Couples Holding Hands,"['Greedy', 'Depth-First Search', '3+']",56.70%,Hard,20.6359%;,51.9K,91.5K,
766,766. Toeplitz Matrix,"['Array', 'Matrix']",68.60%,Easy,62.3151%;,273.1K,397.8K,
767,767. Reorganize String,"['Hash Table', 'String', 'Greedy', '3+']",52.90%,Medium,73.9747%;,258.6K,489.1K,
768,768. Max Chunks To Make Sorted II,"['Array', 'Stack', 'Greedy', '2+']",52.80%,Hard,69.2943%;,52.4K,99.1K,
769,769. Max Chunks To Make Sorted,"['Array', 'Stack', 'Greedy', '2+']",58.20%,Medium,60.6415%;,88.3K,151.7K,
770,770. Basic Calculator IV,"['Hash Table', 'Math', 'String', '2+']",55.90%,Hard,38.7718%;,9.2K,16.5K,
771,771. Jewels and Stones,"['Hash Table', 'String']",88.20%,Easy,49.0303%;,853.6K,968K,
772,772. Basic Calculator III,"['Math', 'String', 'Stack', '1+']",48.80%,Hard,66.8732%;,102.4K,209.7K,Y
773,773. Sliding Puzzle,"['Array', 'Breadth-First Search', 'Matrix']",64.10%,Hard,48.1408%;,83.7K,130.6K,
774,774. Minimize Max Distance to Gas Station,"['Array', 'Binary Search']",51.70%,Hard,20.2551%;,28.1K,54.3K,Y
775,775. Global and Local Inversions,"['Array', 'Math']",43.30%,Medium,25.4545%;,63.6K,146.8K,
776,776. Split BST,"['Tree', 'Binary Search Tree', 'Recursion', '1+']",73.30%,Medium,0%;,55.8K,76.2K,Y
777,777. Swap Adjacent in LR String,"['Two Pointers', 'String']",36.80%,Medium,40.8815%;,69K,187.2K,
778,778. Swim in Rising Water,"['Array', 'Binary Search', '5+']",59.80%,Hard,19.9117%;,114.2K,191K,
779,779. K-th Symbol in Grammar,"['Math', 'Bit Manipulation', 'Recursion']",41.30%,Medium,47.3624%;,111.1K,269.4K,
780,780. Reaching Points,['Math'],32.60%,Hard,90.6388%;,52.9K,162.2K,
781,781. Rabbits in Forest,"['Array', 'Hash Table', 'Math', '1+']",54.80%,Medium,31.5509%;,45K,82.1K,
782,782. Transform to Chessboard,"['Array', 'Math', 'Bit Manipulation', '1+']",51.70%,Hard,36.5316%;,15.8K,30.6K,
783,783. Minimum Distance Between BST Nodes,"['Tree', 'Depth-First Search', '3+']",59.30%,Easy,56.7648%;,209.7K,353.7K,
784,784. Letter Case Permutation,"['String', 'Backtracking', 'Bit Manipulation']",73.80%,Medium,34.6432%;,266.6K,361.4K,
785,785. Is Graph Bipartite?,"['Depth-First Search', 'Breadth-First Search', '2+']",53.10%,Medium,44.4732%;,390.9K,736.7K,
786,786. K-th Smallest Prime Fraction,"['Array', 'Binary Search', 'Sorting', '1+']",51.60%,Medium,7.09575%;,34.1K,66K,
787,787. Cheapest Flights Within K Stops,"['Dynamic Programming', '5+']",37.00%,Medium,62.0459%;,358.9K,969.8K,
788,788. Rotated Digits,"['Math', 'Dynamic Programming']",56.70%,Medium,25.1572%;,95.2K,167.9K,
789,789. Escape The Ghosts,"['Array', 'Math']",60.80%,Medium,16.6236%;,24.7K,40.6K,
790,790. Domino and Tromino Tiling,['Dynamic Programming'],52.90%,Medium,87.9369%;,93.2K,176.2K,
791,791. Custom Sort String,"['Hash Table', 'String', 'Sorting']",69.10%,Medium,39.6745%;,211K,305.2K,
792,792. Number of Matching Subsequences,"['Hash Table', 'String', 'Trie', '1+']",51.70%,Medium,29.2859%;,208K,402.8K,
793,793. Preimage Size of Factorial Zeroes Function,"['Math', 'Binary Search']",43.20%,Hard,22.8064%;,15.1K,35K,
794,794. Valid Tic-Tac-Toe State,"['Array', 'String']",35.10%,Medium,39.6173%;,53.7K,153.1K,
795,795. Number of Subarrays with Bounded Maximum,"['Array', 'Two Pointers']",52.80%,Medium,51.3095%;,60.3K,114.2K,
796,796. Rotate String,"['String', 'String Matching']",55.10%,Easy,54.8856%;,200.3K,363.4K,
797,797. All Paths From Source to Target,"['Backtracking', 'Depth-First Search', '2+']",82.30%,Medium,71.2359%;,425.7K,517.5K,
798,798. Smallest Rotation with Highest Score,"['Array', 'Prefix Sum']",50.20%,Hard,28.7601%;,11.7K,23.3K,
799,799. Champagne Tower,['Dynamic Programming'],51.30%,Medium,36.1283%;,83.5K,162.8K,
800,800. Similar RGB Color,"['Math', 'String', 'Enumeration']",67.00%,Easy,34.9923%;,16.2K,24.2K,Y
801,801. Minimum Swaps To Make Sequences Increasing,"['Array', 'Dynamic Programming']",39.30%,Hard,30.3128%;,62.1K,157.8K,
802,802. Find Eventual Safe States,"['Depth-First Search', 'Breadth-First Search', '2+']",56.40%,Medium,40.0731%;,118.8K,210.6K,
803,803. Bricks Falling When Hit,"['Array', 'Union Find', 'Matrix']",34.30%,Hard,0%;,27.6K,80.4K,
804,804. Unique Morse Code Words,"['Array', 'Hash Table', 'String']",82.60%,Easy,23.1625%;,310.8K,376.1K,
805,805. Split Array With Same Average,"['Array', 'Math', 'Dynamic Programming', '2+']",25.70%,Hard,30.7903%;,29.9K,116.6K,
806,806. Number of Lines To Write String,"['Array', 'String']",66.60%,Easy,5.9586%;,63.7K,95.7K,
807,807. Max Increase to Keep City Skyline,"['Array', 'Greedy', 'Matrix']",85.90%,Medium,39.3825%;,143.5K,167K,
808,808. Soup Servings,"['Math', 'Dynamic Programming', '1+']",43.40%,Medium,71.0556%;,17.4K,40.2K,
809,809. Expressive Words,"['Array', 'Two Pointers', 'String']",46.20%,Medium,40.6119%;,106.8K,231.2K,
810,810. Chalkboard XOR Game,"['Array', 'Math', 'Bit Manipulation', '2+']",56.30%,Hard,0%;,8K,14.3K,
811,811. Subdomain Visit Count,"['Array', 'Hash Table', 'String', '1+']",75.50%,Medium,84.0053%;,206.9K,274.1K,
812,812. Largest Triangle Area,"['Array', 'Math', 'Geometry']",59.90%,Easy,35.2609%;,40.4K,67.4K,
813,813. Largest Sum of Averages,"['Array', 'Dynamic Programming', 'Prefix Sum']",53.00%,Medium,11.1044%;,45.8K,86.5K,
814,814. Binary Tree Pruning,"['Tree', 'Depth-First Search', 'Binary Tree']",72.40%,Medium,31.4888%;,223.2K,308.3K,
815,815. Bus Routes,"['Array', 'Hash Table', 'Breadth-First Search']",45.60%,Hard,61.7579%;,121K,265.4K,
816,816. Ambiguous Coordinates,"['String', 'Backtracking']",56.30%,Medium,28.4803%;,27.5K,48.8K,
817,817. Linked List Components,"['Array', 'Hash Table', 'Linked List']",57.70%,Medium,37.38%;,79.3K,137.4K,
818,818. Race Car,['Dynamic Programming'],43.30%,Hard,88.5189%;,74.6K,172.1K,
819,819. Most Common Word,"['Hash Table', 'String', 'Counting']",44.80%,Easy,37.0093%;,322.1K,719.6K,
820,820. Short Encoding of Words,"['Array', 'Hash Table', 'String', '1+']",60.60%,Medium,0%;,91.4K,150.8K,
821,821. Shortest Distance to a Character,"['Array', 'Two Pointers', 'String']",71.30%,Easy,25.7411%;,155.3K,217.7K,
822,822. Card Flipping Game,"['Array', 'Hash Table']",45.90%,Medium,0%;,15.2K,33.1K,
823,823. Binary Trees With Factors,"['Array', 'Hash Table', 'Dynamic Programming']",49.70%,Medium,49.6993%;,89.5K,180.1K,
824,824. Goat Latin,['String'],67.90%,Easy,14.6633%;,155.7K,229.2K,
825,825. Friends Of Appropriate Ages,"['Array', 'Two Pointers', 'Binary Search', '1+']",46.30%,Medium,13.1068%;,70.7K,152.6K,
826,826. Most Profit Assigning Work,"['Array', 'Two Pointers', 'Binary Search', '2+']",44.80%,Medium,18.9524%;,52.9K,117.9K,
827,827. Making A Large Island,"['Array', 'Depth-First Search', '3+']",44.90%,Hard,57.2308%;,127.7K,284.7K,
828,828. Count Unique Characters of All Substrings of a Given String,"['Hash Table', 'String', 'Dynamic Programming']",51.70%,Hard,8.09945%;,63.4K,122.7K,
829,829. Consecutive Numbers Sum,"['Math', 'Enumeration']",41.60%,Hard,52.3074%;,77.7K,186.9K,
830,830. Positions of Large Groups,['String'],51.80%,Easy,14.4731%;,81.7K,157.6K,
831,831. Masking Personal Information,['String'],47.30%,Medium,22.8064%;,16.4K,34.8K,
832,832. Flipping an Image,"['Array', 'Two Pointers', 'Matrix', '1+']",80.80%,Easy,45.5112%;,352.8K,436.9K,
833,833. Find And Replace in String,"['Array', 'String', 'Sorting']",54.00%,Medium,38.8308%;,133.3K,246.9K,
834,834. Sum of Distances in Tree,"['Dynamic Programming', 'Tree', '2+']",59.20%,Hard,70.6695%;,80.5K,136K,
835,835. Image Overlap,"['Array', 'Matrix']",63.90%,Medium,87.0534%;,88.3K,138.3K,
836,836. Rectangle Overlap,"['Math', 'Geometry']",43.90%,Easy,46.4106%;,121.8K,277.8K,
837,837. New 21 Game,"['Math', 'Dynamic Programming', '2+']",36.20%,Medium,52.5407%;,34.5K,95.4K,
838,838. Push Dominoes,"['Two Pointers', 'String', 'Dynamic Programming']",57.00%,Medium,76.6219%;,111.7K,196.1K,
839,839. Similar String Groups,"['Array', 'String', 'Depth-First Search', '2+']",48.00%,Hard,51.4471%;,63.9K,133.3K,
840,840. Magic Squares In Grid,"['Array', 'Math', 'Matrix']",38.60%,Medium,43.3256%;,35K,90.6K,
841,841. Keys and Rooms,"['Depth-First Search', 'Breadth-First Search', '1+']",71.50%,Medium,64.3284%;,311.5K,435.8K,
842,842. Split Array into Fibonacci Sequence,"['String', 'Backtracking']",38.40%,Medium,46.0662%;,35K,91.1K,
843,843. Guess the Word,"['Array', 'Math', 'String', '2+']",41.40%,Hard,67.4235%;,130.2K,314.3K,
844,844. Backspace String Compare,"['Two Pointers', 'String', 'Stack', '1+']",48.00%,Easy,39.8617%;,614.9K,1.3M,
845,845. Longest Mountain in Array,"['Array', 'Two Pointers', '2+']",40.20%,Medium,64.9256%;,108.5K,269.8K,
846,846. Hand of Straights,"['Array', 'Hash Table', 'Greedy', '1+']",56.20%,Medium,28.7601%;,113.6K,202K,
847,847. Shortest Path Visiting All Nodes,"['Dynamic Programming', 'Bit Manipulation', '3+']",61.00%,Hard,43.117%;,68.7K,112.6K,
848,848. Shifting Letters,"['Array', 'String']",45.20%,Medium,50.7931%;,84.5K,186.8K,
849,849. Maximize Distance to Closest Person,['Array'],47.60%,Medium,73.2924%;,197K,413.7K,
850,850. Rectangle Area II,"['Array', 'Segment Tree', 'Line Sweep', '1+']",53.90%,Hard,57.3832%;,32.3K,60K,
851,851. Loud and Rich,"['Array', 'Depth-First Search', 'Graph', '1+']",58.40%,Medium,12.6554%;,32.4K,55.5K,
852,852. Peak Index in a Mountain Array,"['Array', 'Binary Search']",69.10%,Medium,73.1003%;,531.8K,769.6K,
853,853. Car Fleet,"['Array', 'Stack', 'Sorting', '1+']",50.30%,Medium,34.4617%;,129.3K,257.4K,
854,854. K-Similar Strings,"['String', 'Breadth-First Search']",40.10%,Hard,32.1117%;,40.6K,101.2K,
855,855. Exam Room,"['Design', 'Heap (Priority Queue)', 'Ordered Set']",43.40%,Medium,46.2983%;,54K,124.3K,
856,856. Score of Parentheses,"['String', 'Stack']",64.80%,Medium,39.4978%;,155.7K,240.4K,
857,857. Minimum Cost to Hire K Workers,"['Array', 'Greedy', 'Sorting', '1+']",52.20%,Hard,35.8463%;,58.3K,111.6K,
858,858. Mirror Reflection,"['Math', 'Geometry', 'Number Theory']",63.10%,Medium,28.4803%;,75.6K,119.8K,
859,859. Buddy Strings,"['Hash Table', 'String']",29.20%,Easy,51.5918%;,144.2K,494.6K,
860,860. Lemonade Change,"['Array', 'Greedy']",52.90%,Easy,32.8953%;,124.5K,235.4K,
861,861. Score After Flipping Matrix,"['Array', 'Greedy', 'Bit Manipulation', '1+']",74.90%,Medium,30.5193%;,40.7K,54.3K,
862,862. Shortest Subarray with Sum at Least K,"['Array', 'Binary Search', 'Queue', '4+']",26.00%,Hard,47.6207%;,84.1K,323.1K,
863,863. All Nodes Distance K in Binary Tree,"['Tree', 'Depth-First Search', '2+']",62.20%,Medium,60.4303%;,296.8K,476.9K,
864,864. Shortest Path to Get All Keys,"['Array', 'Bit Manipulation', '2+']",45.50%,Hard,73.1194%;,30.5K,67K,
865,865. Smallest Subtree with all the Deepest Nodes,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",68.90%,Medium,5.49016%;,115.4K,167.4K,
866,866. Prime Palindrome,['Math'],25.80%,Medium,33.203%;,28.1K,109.1K,
867,867. Transpose Matrix,"['Array', 'Matrix', 'Simulation']",64.10%,Easy,57.5418%;,238K,371K,
868,868. Binary Gap,['Bit Manipulation'],62.20%,Easy,26.0755%;,68.2K,109.6K,
869,869. Reordered Power of 2,"['Math', 'Sorting', 'Counting', '1+']",63.60%,Medium,38.0992%;,106.6K,167.6K,
870,870. Advantage Shuffle,"['Array', 'Two Pointers', 'Greedy', '1+']",51.80%,Medium,35.9968%;,59.8K,115.4K,
871,871. Minimum Number of Refueling Stops,"['Array', 'Dynamic Programming', 'Greedy', '1+']",39.80%,Hard,53.4515%;,121.8K,306K,
872,872. Leaf-Similar Trees,"['Tree', 'Depth-First Search', 'Binary Tree']",67.60%,Easy,59.0131%;,250.6K,370.7K,
873,873. Length of Longest Fibonacci Subsequence,"['Array', 'Hash Table', 'Dynamic Programming']",48.30%,Medium,52.5407%;,55.4K,114.7K,
874,874. Walking Robot Simulation,"['Array', 'Simulation']",38.90%,Medium,32.997%;,36.1K,92.9K,
875,875. Koko Eating Bananas,"['Array', 'Binary Search']",52.30%,Medium,70.2505%;,341.6K,653.7K,
876,876. Middle of the Linked List,"['Linked List', 'Two Pointers']",75.50%,Easy,70.0355%;,1.3M,1.7M,
877,877. Stone Game,"['Array', 'Math', 'Dynamic Programming', '1+']",69.70%,Medium,41.0481%;,182.7K,261.9K,
878,878. Nth Magical Number,"['Math', 'Binary Search']",35.30%,Hard,54.8355%;,32.9K,93K,
879,879. Profitable Schemes,"['Array', 'Dynamic Programming']",40.60%,Hard,24.3803%;,17.8K,43.8K,
880,880. Decoded String at Index,"['String', 'Stack']",28.30%,Medium,12.232%;,36.1K,127.4K,
881,881. Boats to Save People,"['Array', 'Two Pointers', 'Greedy', '1+']",53.10%,Medium,43.9204%;,173.6K,327.1K,
882,882. Reachable Nodes In Subdivided Graph,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",50.20%,Hard,21.4467%;,23.4K,46.5K,
883,883. Projection Area of 3D Shapes,"['Array', 'Math', 'Geometry', '1+']",71.20%,Easy,17.1325%;,46.8K,65.8K,
884,884. Uncommon Words from Two Sentences,"['Hash Table', 'String']",66.30%,Easy,14.5202%;,115.7K,174.4K,
885,885. Spiral Matrix III,"['Array', 'Matrix', 'Simulation']",73.40%,Medium,41.9109%;,40.9K,55.8K,
886,886. Possible Bipartition,"['Depth-First Search', 'Breadth-First Search', '2+']",50.00%,Medium,76.546%;,178.9K,357.8K,
887,887. Super Egg Drop,"['Math', 'Binary Search', 'Dynamic Programming']",27.20%,Hard,40.6703%;,58.6K,215.8K,
888,888. Fair Candy Swap,"['Array', 'Hash Table', 'Binary Search', '1+']",60.70%,Easy,52.4147%;,99.5K,164K,
889,889. Construct Binary Tree from Preorder and Postorder Traversal,"['Array', 'Hash Table', 'Divide and Conquer', '2+']",71.00%,Medium,28.3812%;,86.9K,122.4K,
890,890. Find and Replace Pattern,"['Array', 'Hash Table', 'String']",77.60%,Medium,37.0678%;,168K,216.5K,
891,891. Sum of Subsequence Widths,"['Array', 'Math', 'Sorting']",36.60%,Hard,32.7945%;,18.3K,50.1K,
892,892. Surface Area of 3D Shapes,"['Array', 'Math', 'Geometry', '1+']",64.00%,Easy,25.795%;,33.6K,52.5K,
893,893. Groups of Special-Equivalent Strings,"['Array', 'Hash Table', 'String']",71.10%,Medium,44.746%;,44.6K,62.7K,
894,894. All Possible Full Binary Trees,"['Dynamic Programming', 'Tree', 'Recursion', '2+']",80.00%,Medium,57.1778%;,105.7K,132.2K,
895,895. Maximum Frequency Stack,"['Hash Table', 'Stack', 'Design', '1+']",66.60%,Hard,60.799%;,150.1K,225.2K,
896,896. Monotonic Array,['Array'],58.40%,Easy,32.0585%;,254K,435.2K,
897,897. Increasing Order Search Tree,"['Stack', 'Tree', 'Depth-First Search', '2+']",78.40%,Easy,20.1725%;,244.7K,312K,
898,898. Bitwise ORs of Subarrays,"['Array', 'Dynamic Programming', '1+']",37.20%,Medium,33.5231%;,30.5K,82K,
899,899. Orderly Queue,"['Math', 'String', 'Sorting']",66.30%,Hard,88.9715%;,64.3K,97K,
900,900. RLE Iterator,"['Array', 'Design', 'Counting', '1+']",59.40%,Medium,48.8886%;,63.1K,106.2K,
901,901. Online Stock Span,"['Stack', 'Design', 'Monotonic Stack', '1+']",65.20%,Medium,70.9124%;,216.6K,332.2K,
902,902. Numbers At Most N Given Digit Set,"['Array', 'Math', 'String', '2+']",41.40%,Hard,40.8815%;,39.6K,95.6K,
903,903. Valid Permutations for DI Sequence,['Dynamic Programming'],57.80%,Hard,0%;,13.6K,23.5K,
904,904. Fruit Into Baskets,"['Array', 'Hash Table', 'Sliding Window']",43.70%,Medium,80.7316%;,327.2K,748.4K,
905,905. Sort Array By Parity,"['Array', 'Two Pointers', 'Sorting']",75.60%,Easy,29.3169%;,589.3K,779.5K,
906,906. Super Palindromes,"['Math', 'Enumeration']",38.80%,Hard,26.6969%;,22.5K,57.8K,
907,907. Sum of Subarray Minimums,"['Array', 'Dynamic Programming', 'Stack', '1+']",35.80%,Medium,84.4108%;,142.6K,398.2K,
908,908. Smallest Range I,"['Array', 'Math']",68.20%,Easy,35.5471%;,71K,104.1K,
909,909. Snakes and Ladders,"['Array', 'Breadth-First Search', 'Matrix']",45.10%,Medium,74.241%;,135.8K,301.1K,
910,910. Smallest Range II,"['Array', 'Math', 'Greedy', '1+']",35.10%,Medium,54.0107%;,45.9K,130.7K,
911,911. Online Election,"['Array', 'Hash Table', 'Binary Search', '1+']",52.20%,Medium,13.3173%;,48.4K,92.8K,
912,912. Sort an Array,"['Array', 'Divide and Conquer', 'Sorting', '5+']",59.70%,Medium,76.4583%;,439.2K,735.9K,
913,913. Cat and Mouse,"['Math', 'Dynamic Programming', 'Graph', '3+']",34.90%,Hard,22.1788%;,17K,48.7K,
914,914. X of a Kind in a Deck of Cards,"['Array', 'Hash Table', 'Math', '2+']",31.30%,Easy,23.4197%;,102.8K,328.8K,
915,915. Partition Array into Disjoint Intervals,['Array'],48.50%,Medium,41.544%;,73.6K,151.6K,
916,916. Word Subsets,"['Array', 'Hash Table', 'String']",53.70%,Medium,19.0883%;,107.7K,200.4K,
917,917. Reverse Only Letters,"['Two Pointers', 'String']",62.00%,Easy,25.0631%;,159.4K,257.3K,
918,918. Maximum Sum Circular Subarray,"['Array', 'Divide and Conquer', '3+']",42.90%,Medium,78.2283%;,204K,475.6K,
919,919. Complete Binary Tree Inserter,"['Tree', 'Breadth-First Search', 'Design', '1+']",65.10%,Medium,17.1325%;,45K,69K,
920,920. Number of Music Playlists,"['Math', 'Dynamic Programming', 'Combinatorics']",50.80%,Hard,32.997%;,22.3K,44K,
921,921. Minimum Add to Make Parentheses Valid,"['String', 'Stack', 'Greedy']",75.80%,Medium,39.0509%;,251.1K,331.2K,
922,922. Sort Array By Parity II,"['Array', 'Two Pointers', 'Sorting']",70.70%,Easy,23.6311%;,214.1K,302.9K,
923,923. 3Sum With Multiplicity,"['Array', 'Hash Table', 'Two Pointers', '2+']",45.30%,Medium,30.5193%;,95.4K,210.6K,
924,924. Minimize Malware Spread,"['Array', 'Depth-First Search', '3+']",42.10%,Hard,29.7983%;,42.9K,101.9K,
925,925. Long Pressed Name,"['Two Pointers', 'String']",33.20%,Easy,28.283%;,114.9K,346.7K,
926,926. Flip String to Monotone Increasing,"['String', 'Dynamic Programming']",61.50%,Medium,85.6364%;,173.9K,282.7K,
927,927. Three Equal Parts,"['Array', 'Math']",39.50%,Hard,46.6618%;,27.7K,70.2K,
928,928. Minimize Malware Spread II,"['Array', 'Depth-First Search', '3+']",42.70%,Hard,19.1985%;,18.2K,42.6K,
929,929. Unique Email Addresses,"['Array', 'Hash Table', 'String']",67.10%,Easy,62.2237%;,415.5K,618.9K,
930,930. Binary Subarrays With Sum,"['Array', 'Hash Table', 'Sliding Window', '1+']",52.00%,Medium,34.9923%;,64.9K,124.7K,
931,931. Minimum Falling Path Sum,"['Array', 'Dynamic Programming', 'Matrix']",69.10%,Medium,60.7953%;,235.5K,340.8K,
932,932. Beautiful Array,"['Array', 'Math', 'Divide and Conquer']",65.20%,Medium,57.0988%;,39.4K,60.5K,
933,933. Number of Recent Calls,"['Design', 'Queue', 'Data Stream']",73.20%,Easy,39.1798%;,139.6K,190.8K,
934,934. Shortest Bridge,"['Array', 'Depth-First Search', '2+']",54.30%,Medium,53.1008%;,124.3K,228.7K,
935,935. Knight Dialer,['Dynamic Programming'],50.40%,Medium,63.4687%;,98.3K,194.9K,
936,936. Stamping The Sequence,"['String', 'Stack', 'Greedy', '1+']",63.00%,Hard,59.7914%;,56.2K,89.1K,
937,937. Reorder Data in Log Files,"['Array', 'String', 'Sorting']",56.40%,Medium,62.681%;,340.4K,603.7K,
938,938. Range Sum of BST,"['Tree', 'Depth-First Search', '2+']",85.90%,Easy,66.1568%;,771.6K,898.5K,
939,939. Minimum Area Rectangle,"['Array', 'Hash Table', 'Math', '2+']",52.90%,Medium,43.4928%;,121.2K,229K,
940,940. Distinct Subsequences II,"['String', 'Dynamic Programming']",44.00%,Hard,51.5251%;,32.5K,73.9K,
941,941. Valid Mountain Array,['Array'],33.40%,Easy,26.2605%;,354.4K,1.1M,
942,942. DI String Match,"['Array', 'Two Pointers', 'String', '1+']",77.30%,Easy,29.8155%;,128.7K,166.6K,
943,943. Find the Shortest Superstring,"['Array', 'String', 'Dynamic Programming', '2+']",44.50%,Hard,72.8322%;,25.8K,58K,
944,944. Delete Columns to Make Sorted,"['Array', 'String']",74.80%,Easy,73.42%;,168.7K,225.5K,
945,945. Minimum Increment to Make Array Unique,"['Array', 'Greedy', 'Sorting', '1+']",51.10%,Medium,70.0868%;,73.3K,143.5K,
946,946. Validate Stack Sequences,"['Array', 'Stack', 'Simulation']",67.70%,Medium,46.1191%;,198K,292.5K,
947,947. Most Stones Removed with Same Row or Column,"['Depth-First Search', 'Union Find', 'Graph']",58.90%,Medium,77.3536%;,172.3K,292.7K,
948,948. Bag of Tokens,"['Array', 'Two Pointers', 'Greedy', '1+']",52.10%,Medium,37.6517%;,100.3K,192.5K,
949,949. Largest Time for Given Digits,"['String', 'Enumeration']",35.20%,Medium,36.8023%;,78.1K,222K,
950,950. Reveal Cards In Increasing Order,"['Array', 'Queue', 'Sorting', '1+']",77.80%,Medium,30.0579%;,66.2K,85.1K,
951,951. Flip Equivalent Binary Trees,"['Tree', 'Depth-First Search', 'Binary Tree']",66.80%,Medium,33.4656%;,127.8K,191.3K,
952,952. Largest Component Size by Common Factor,"['Array', 'Math', 'Union Find']",40.10%,Hard,19.1586%;,48.5K,120.9K,
953,953. Verifying an Alien Dictionary,"['Array', 'Hash Table', 'String']",54.50%,Easy,65.1757%;,454K,833.6K,
954,954. Array of Doubled Pairs,"['Array', 'Hash Table', 'Greedy', '1+']",39.10%,Medium,8.18955%;,80.4K,205.9K,
955,955. Delete Columns to Make Sorted II,"['Array', 'String', 'Greedy']",34.70%,Medium,46.3401%;,17.7K,51K,
956,956. Tallest Billboard,"['Array', 'Dynamic Programming']",39.90%,Hard,18.2526%;,15.8K,39.5K,
957,957. Prison Cells After N Days,"['Array', 'Hash Table', 'Math', '1+']",39.10%,Medium,34.9923%;,151.5K,387.9K,
958,958. Check Completeness of a Binary Tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",56.10%,Medium,0.516723%;,192.6K,343.2K,
959,959. Regions Cut By Slashes,"['Depth-First Search', 'Breadth-First Search', '2+']",69.20%,Medium,37.4581%;,44.8K,64.8K,
960,960. Delete Columns to Make Sorted III,"['Array', 'String', 'Dynamic Programming']",57.20%,Hard,21.7694%;,12K,21K,
961,961. N-Repeated Element in Size 2N Array,"['Array', 'Hash Table']",76.00%,Easy,6.82001%;,202.3K,266K,
962,962. Maximum Width Ramp,"['Array', 'Stack', 'Monotonic Stack']",48.90%,Medium,31.9004%;,39.4K,80.5K,
963,963. Minimum Area Rectangle II,"['Array', 'Math', 'Geometry']",54.70%,Medium,21.4467%;,25K,45.8K,
964,964. Least Operators to Express Number,"['Math', 'Dynamic Programming']",47.90%,Hard,0%;,8.8K,18.3K,
965,965. Univalued Binary Tree,"['Tree', 'Depth-First Search', '2+']",69.60%,Easy,4.64141%;,188.2K,270.2K,
966,966. Vowel Spellchecker,"['Array', 'Hash Table', 'String']",51.40%,Medium,0%;,38.2K,74.2K,
967,967. Numbers With Same Consecutive Differences,"['Backtracking', 'Breadth-First Search']",57.40%,Medium,59.7488%;,119.2K,207.7K,
968,968. Binary Tree Cameras,"['Dynamic Programming', 'Tree', '2+']",46.60%,Hard,50.7203%;,119.2K,255.4K,
969,969. Pancake Sorting,"['Array', 'Two Pointers', 'Greedy', '1+']",70.10%,Medium,41.7445%;,82.8K,118.1K,
970,970. Powerful Integers,"['Hash Table', 'Math']",43.60%,Medium,20.5072%;,49.9K,114.5K,
971,971. Flip Binary Tree To Match Preorder Traversal,"['Tree', 'Depth-First Search', 'Binary Tree']",50.10%,Medium,16.6236%;,38.3K,76.6K,
972,972. Equal Rational Numbers,"['Math', 'String']",43.40%,Hard,0%;,6.1K,14.2K,
973,973. K Closest Points to Origin,"['Array', 'Math', 'Divide and Conquer', '4+']",65.70%,Medium,49.6561%;,956.5K,1.5M,
974,974. Subarray Sums Divisible by K,"['Array', 'Hash Table', 'Prefix Sum']",54.40%,Medium,92.231%;,193.5K,355.6K,
975,975. Odd Even Jump,"['Array', 'Dynamic Programming', 'Stack', '2+']",38.90%,Hard,35.6104%;,72.1K,185K,
976,976. Largest Perimeter Triangle,"['Array', 'Math', 'Greedy', '1+']",54.60%,Easy,68.0997%;,198.5K,363.4K,
977,977. Squares of a Sorted Array,"['Array', 'Two Pointers', 'Sorting']",71.90%,Easy,53.9364%;,1.4M,1.9M,
978,978. Longest Turbulent Subarray,"['Array', 'Dynamic Programming', 'Sliding Window']",47.20%,Medium,34.1142%;,82.4K,174.6K,
979,979. Distribute Coins in Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",72.20%,Medium,46.2797%;,100.5K,139.3K,
980,980. Unique Paths III,"['Array', 'Backtracking', 'Bit Manipulation', '1+']",81.80%,Hard,49.4755%;,172.3K,210.6K,
981,981. Time Based Key-Value Store,"['Hash Table', 'String', 'Binary Search', '1+']",52.40%,Medium,70.7544%;,307K,586.2K,
982,982. Triples with Bitwise AND Equal To Zero,"['Array', 'Hash Table', 'Bit Manipulation']",57.60%,Hard,0%;,14.7K,25.5K,
983,983. Minimum Cost For Tickets,"['Array', 'Dynamic Programming']",64.30%,Medium,44.8462%;,188.1K,292.5K,
984,984. String Without AAA or BBB,"['String', 'Greedy']",43.10%,Medium,15.8399%;,40K,92.9K,
985,985. Sum of Even Numbers After Queries,"['Array', 'Simulation']",68.20%,Medium,72.7378%;,130.9K,192K,
986,986. Interval List Intersections,"['Array', 'Two Pointers']",71.30%,Medium,55.6218%;,349.4K,489.8K,
987,987. Vertical Order Traversal of a Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",45.00%,Hard,61.3933%;,325.1K,721.9K,
988,988. Smallest String Starting From Leaf,"['String', 'Tree', 'Depth-First Search', '1+']",50.20%,Medium,2.36322%;,65.7K,130.9K,
989,989. Add to Array-Form of Integer,"['Array', 'Math']",47.10%,Easy,48.0957%;,221.1K,469.3K,
990,990. Satisfiability of Equality Equations,"['Array', 'String', 'Union Find', '1+']",50.50%,Medium,67.4892%;,109.2K,216.1K,
991,991. Broken Calculator,"['Math', 'Greedy']",54.10%,Medium,27.4362%;,92.9K,171.8K,
992,992. Subarrays with K Different Integers,"['Array', 'Hash Table', 'Sliding Window', '1+']",54.60%,Hard,59.3988%;,90.4K,165.4K,
993,993. Cousins in Binary Tree,"['Tree', 'Depth-First Search', '2+']",54.60%,Easy,32.3102%;,238.7K,437.4K,
994,994. Rotting Oranges,"['Array', 'Breadth-First Search', 'Matrix']",52.90%,Medium,72.2208%;,574.9K,1.1M,
995,995. Minimum Number of K Consecutive Bit Flips,"['Array', 'Bit Manipulation', 'Queue', '2+']",51.20%,Hard,47.3848%;,30.1K,58.7K,
996,996. Number of Squareful Arrays,"['Array', 'Math', 'Dynamic Programming', '3+']",49.20%,Hard,21.5888%;,30.6K,62.2K,
997,997. Find the Town Judge,"['Array', 'Hash Table', 'Graph']",49.60%,Easy,61.6446%;,401.6K,810.2K,
998,998. Maximum Binary Tree II,"['Tree', 'Binary Tree']",67.20%,Medium,0%;,31.1K,46.3K,
999,999. Available Captures for Rook,"['Array', 'Matrix', 'Simulation']",68.10%,Easy,23.563%;,57.2K,83.9K,
1000,1000. Minimum Cost to Merge Stones,"['Array', 'Dynamic Programming']",42.20%,Hard,32.353%;,33.4K,79K,
1001,1001. Grid Illumination,"['Array', 'Hash Table']",36.20%,Hard,15.2639%;,17.6K,48.7K,
1002,1002. Find Common Characters,"['Array', 'Hash Table', 'String']",68.50%,Easy,66.7138%;,174.4K,254.7K,
1003,1003. Check If Word Is Valid After Substitutions,"['String', 'Stack']",58.20%,Medium,19.5373%;,48.6K,83.5K,
1004,1004. Max Consecutive Ones III,"['Array', 'Binary Search', 'Sliding Window', '1+']",63.20%,Medium,64.8952%;,285K,450.7K,
1005,1005. Maximize Sum Of Array After K Negations,"['Array', 'Greedy', 'Sorting']",50.90%,Easy,22.8064%;,69.6K,136.8K,
1006,1006. Clumsy Factorial,"['Math', 'Stack', 'Simulation']",55.40%,Medium,39.8147%;,24.3K,43.9K,
1007,1007. Minimum Domino Rotations For Equal Row,"['Array', 'Greedy']",52.30%,Medium,36.3985%;,190.7K,364.8K,
1008,1008. Construct Binary Search Tree from Preorder Traversal,"['Array', 'Stack', 'Tree', '3+']",81.10%,Medium,47.1355%;,286K,352.6K,
1009,1009. Complement of Base 10 Integer,['Bit Manipulation'],61.60%,Easy,76.3849%;,173K,281K,
1010,1010. Pairs of Songs With Total Durations Divisible by 60,"['Array', 'Hash Table', 'Counting']",52.80%,Medium,96.0806%;,236.7K,448.4K,
1011,1011. Capacity To Ship Packages Within D Days,"['Array', 'Binary Search']",67.70%,Medium,82.9962%;,261.3K,386K,
1012,1012. Numbers With Repeated Digits,"['Math', 'Dynamic Programming']",39.80%,Hard,60.0174%;,11.9K,29.9K,
1013,1013. Partition Array Into Three Parts With Equal Sum,"['Array', 'Greedy']",42.80%,Easy,25.3711%;,77.5K,181.3K,
1014,1014. Best Sightseeing Pair,"['Array', 'Dynamic Programming']",59.40%,Medium,20.3803%;,82.4K,138.6K,
1015,1015. Smallest Integer Divisible by K,"['Hash Table', 'Math']",46.80%,Medium,25.795%;,58.7K,125.3K,
1016,1016. Binary String With Substrings Representing 1 To N,['String'],57.30%,Medium,19.5373%;,32.9K,57.4K,
1017,1017. Convert to Base -2,['Math'],60.80%,Medium,7.79645%;,22.4K,36.8K,
1018,1018. Binary Prefix Divisible By 5,['Array'],46.90%,Easy,11.1427%;,45.7K,97.4K,
1019,1019. Next Greater Node In Linked List,"['Array', 'Linked List', 'Stack', '1+']",59.90%,Medium,32.2145%;,124.6K,208.1K,
1020,1020. Number of Enclaves,"['Array', 'Depth-First Search', '3+']",65.50%,Medium,25.874%;,96.5K,147.4K,
1021,1021. Remove Outermost Parentheses,"['String', 'Stack']",80.60%,Easy,25.306%;,211.3K,262.1K,
1022,1022. Sum of Root To Leaf Binary Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",73.60%,Easy,17.8628%;,186.1K,253K,
1023,1023. Camelcase Matching,"['Two Pointers', 'String', 'Trie', '1+']",60.60%,Medium,27.4362%;,38.7K,63.8K,
1024,1024. Video Stitching,"['Array', 'Dynamic Programming', 'Greedy']",50.40%,Medium,29.9546%;,56.2K,111.4K,
1025,1025. Divisor Game,"['Math', 'Dynamic Programming', '2+']",67.60%,Easy,40.0731%;,196.5K,290.9K,
1026,1026. Maximum Difference Between Node and Ancestor,"['Tree', 'Depth-First Search', 'Binary Tree']",75.80%,Medium,68.6681%;,200.9K,265.2K,
1027,1027. Longest Arithmetic Subsequence,"['Array', 'Hash Table', 'Binary Search', '1+']",46.80%,Medium,42.6222%;,99.9K,213.4K,
1028,1028. Recover a Tree From Preorder Traversal,"['String', 'Tree', 'Depth-First Search', '1+']",73.30%,Hard,38.4091%;,41.8K,57.1K,
1029,1029. Two City Scheduling,"['Array', 'Greedy', 'Sorting']",65.20%,Medium,80.8765%;,209.4K,321.1K,
1030,1030. Matrix Cells in Distance Order,"['Array', 'Math', 'Geometry', '2+']",69.60%,Easy,11.8338%;,49.3K,70.7K,
1031,1031. Maximum Sum of Two Non-Overlapping Subarrays,"['Array', 'Dynamic Programming', 'Sliding Window']",59.60%,Medium,40.6119%;,61.3K,102.9K,
1032,1032. Stream of Characters,"['Array', 'String', 'Design', '2+']",51.60%,Hard,17.4898%;,81.5K,157.9K,
1033,1033. Moving Stones Until Consecutive,"['Math', 'Brainteaser']",46.20%,Medium,15.9149%;,21.8K,47.2K,
1034,1034. Coloring A Border,"['Array', 'Depth-First Search', '2+']",49.20%,Medium,23.1776%;,28.9K,58.9K,
1035,1035. Uncrossed Lines,"['Array', 'Dynamic Programming']",59.10%,Medium,10.4515%;,77.7K,131.4K,
1036,1036. Escape a Large Maze,"['Array', 'Hash Table', 'Depth-First Search', '1+']",34.10%,Hard,57.3832%;,17.9K,52.6K,
1037,1037. Valid Boomerang,"['Array', 'Math', 'Geometry']",37.10%,Easy,21.0977%;,40.4K,109.1K,
1038,1038. Binary Search Tree to Greater Sum Tree,"['Tree', 'Depth-First Search', '2+']",85.50%,Medium,13.3709%;,147.5K,172.6K,
1039,1039. Minimum Score Triangulation of Polygon,"['Array', 'Dynamic Programming']",55.30%,Medium,52.4763%;,32.7K,59.1K,
1040,1040. Moving Stones Until Consecutive II,"['Array', 'Math', 'Two Pointers', '1+']",55.90%,Medium,48.1543%;,8.6K,15.4K,
1041,1041. Robot Bounded In Circle,"['Math', 'String', 'Simulation']",55.30%,Medium,64.5577%;,208.1K,376.3K,
1042,1042. Flower Planting With No Adjacent,"['Depth-First Search', 'Breadth-First Search', '1+']",50.60%,Medium,32.0173%;,65.5K,129.5K,
1043,1043. Partition Array for Maximum Sum,"['Array', 'Dynamic Programming']",71.50%,Medium,47.8089%;,68.6K,95.9K,
1044,1044. Longest Duplicate Substring,"['String', 'Binary Search', 'Sliding Window', '3+']",30.50%,Hard,33.7332%;,61.2K,200.4K,
1045,1045. Customers Who Bought All Products,['Database'],66.80%,Medium,6.78199%;,49.1K,73.5K,Y
1046,1046. Last Stone Weight,"['Array', 'Heap (Priority Queue)']",64.80%,Easy,54.0015%;,398K,614.1K,
1047,1047. Remove All Adjacent Duplicates In String,"['String', 'Stack']",69.70%,Easy,69.457%;,431.4K,618.8K,
1048,1048. Longest String Chain,"['Array', 'Hash Table', 'Two Pointers', '2+']",59.20%,Medium,64.9585%;,302.2K,510.2K,
1049,1049. Last Stone Weight II,"['Array', 'Dynamic Programming']",53.10%,Medium,29.1605%;,67.7K,127.6K,
1050,1050. Actors and Directors Who Cooperated At Least Three Times,['Database'],70.70%,Easy,8.69091%;,108.1K,152.9K,
1051,1051. Height Checker,"['Array', 'Sorting', 'Counting Sort']",75.50%,Easy,3.76393%;,262.5K,347.5K,
1052,1052. Grumpy Bookstore Owner,"['Array', 'Sliding Window']",57.10%,Medium,44.8203%;,62.2K,108.9K,
1053,1053. Previous Permutation With One Swap,"['Array', 'Greedy']",50.50%,Medium,28.5802%;,35.3K,70K,
1054,1054. Distant Barcodes,"['Array', 'Hash Table', 'Greedy', '3+']",45.80%,Medium,37.38%;,36.1K,78.8K,
1055,1055. Shortest Way to Form String,"['Two Pointers', 'String', 'Greedy']",59.70%,Medium,19.0011%;,78.3K,131.2K,Y
1056,1056. Confusing Number,['Math'],48.30%,Easy,0%;,35.8K,74.1K,Y
1057,1057. Campus Bikes,"['Array', 'Greedy', 'Sorting']",57.60%,Medium,32.7945%;,64.1K,111.2K,Y
1058,1058. Minimize Rounding Error to Meet Target,"['Array', 'Math', 'String', '1+']",44.90%,Medium,0%;,8.4K,18.7K,Y
1059,1059. All Paths from Source Lead to Destination,"['Depth-First Search', 'Graph']",39.30%,Medium,10.7692%;,50.6K,128.8K,Y
1060,1060. Missing Element in Sorted Array,"['Array', 'Binary Search']",54.70%,Medium,9.86312%;,112.3K,205.3K,Y
1061,1061. Lexicographically Smallest Equivalent String,"['String', 'Union Find']",76.50%,Medium,72.8322%;,68.1K,88.9K,
1062,1062. Longest Repeating Substring,"['String', 'Binary Search', '4+']",59.20%,Medium,22.1788%;,32.4K,54.8K,Y
1063,1063. Number of Valid Subarrays,"['Array', 'Stack', 'Monotonic Stack']",74.40%,Hard,0%;,7.4K,9.9K,Y
1064,1064. Fixed Point,"['Array', 'Binary Search']",64.20%,Easy,18.2526%;,40.4K,62.9K,Y
1065,1065. Index Pairs of a String,"['Array', 'String', 'Trie', '1+']",63.80%,Easy,0%;,20.8K,32.6K,Y
1066,1066. Campus Bikes II,"['Array', 'Dynamic Programming', '3+']",54.90%,Medium,17.3991%;,44.5K,81K,Y
1067,1067. Digit Count in Range,"['Math', 'Dynamic Programming']",45.10%,Hard,24.3803%;,3.4K,7.5K,Y
1068,1068. Product Sales Analysis I,['Database'],80.30%,Easy,0%;,59.1K,73.5K,Y
1069,1069. Product Sales Analysis II,['Database'],81.90%,Easy,0%;,47.2K,57.7K,Y
1070,1070. Product Sales Analysis III,['Database'],48.70%,Medium,0%;,37.5K,77K,Y
1071,1071. Greatest Common Divisor of Strings,"['Math', 'String']",56.60%,Easy,80.4955%;,161.5K,285.2K,
1072,1072. Flip Columns For Maximum Number of Equal Rows,"['Array', 'Hash Table', 'Matrix']",63.30%,Medium,38.7718%;,19.7K,31.1K,
1073,1073. Adding Two Negabinary Numbers,"['Array', 'Math']",36.50%,Medium,57.6005%;,15.1K,41.4K,
1074,1074. Number of Submatrices That Sum to Target,"['Array', 'Hash Table', 'Matrix', '1+']",69.70%,Hard,24.3457%;,86.3K,123.8K,
1075,1075. Project Employees I,['Database'],66.50%,Easy,0%;,46.6K,70.1K,Y
1076,1076. Project Employees II,['Database'],50.30%,Easy,0%;,49.9K,99.1K,Y
1077,1077. Project Employees III,['Database'],77.50%,Medium,0%;,46.7K,60.3K,Y
1078,1078. Occurrences After Bigram,['String'],63.60%,Easy,19.7116%;,60.9K,95.7K,
1079,1079. Letter Tile Possibilities,"['Hash Table', 'String', 'Backtracking', '1+']",76.00%,Medium,30.7804%;,83.1K,109.4K,
1080,1080. Insufficient Nodes in Root to Leaf Paths,"['Tree', 'Depth-First Search', 'Binary Tree']",53.50%,Medium,0%;,31K,58K,
1081,1081. Smallest Subsequence of Distinct Characters,"['String', 'Stack', 'Greedy', '1+']",57.80%,Medium,42.8882%;,49K,84.8K,
1082,1082. Sales Analysis I,['Database'],74.90%,Easy,0%;,51.2K,68.3K,Y
1083,1083. Sales Analysis II,['Database'],50.00%,Easy,0%;,51.2K,102.5K,Y
1084,1084. Sales Analysis III,['Database'],49.10%,Easy,19.0795%;,93.7K,190.9K,
1085,1085. Sum of Digits in the Minimum Number,"['Array', 'Math']",76.30%,Easy,0%;,22.2K,29.1K,Y
1086,1086. High Five,"['Array', 'Hash Table', 'Sorting']",75.10%,Easy,38.7718%;,93.2K,124.2K,Y
1087,1087. Brace Expansion,"['String', 'Backtracking', 'Breadth-First Search']",66.20%,Medium,31.2883%;,47.4K,71.6K,Y
1088,1088. Confusing Number II,"['Math', 'Backtracking']",47.30%,Hard,31.2883%;,35.6K,75.3K,Y
1089,1089. Duplicate Zeros,"['Array', 'Two Pointers']",51.50%,Easy,26.6585%;,340.1K,660.3K,
1090,1090. Largest Values From Labels,"['Array', 'Hash Table', 'Greedy', '2+']",61.10%,Medium,27.6804%;,32.6K,53.4K,
1091,1091. Shortest Path in Binary Matrix,"['Array', 'Breadth-First Search', 'Matrix']",44.60%,Medium,55.5742%;,295.2K,661.3K,
1092,1092. Shortest Common Supersequence,"['String', 'Dynamic Programming']",58.00%,Hard,28.4803%;,71.6K,123.6K,
1093,1093. Statistics from a Large Sample,"['Array', 'Math', 'Probability and Statistics']",43.60%,Medium,0%;,15.8K,36.3K,
1094,1094. Car Pooling,"['Array', 'Sorting', 'Heap (Priority Queue)', '2+']",56.90%,Medium,50.084%;,188.2K,330.5K,
1095,1095. Find in Mountain Array,"['Array', 'Binary Search', 'Interactive']",35.50%,Hard,48.6163%;,58.6K,165.1K,
1096,1096. Brace Expansion II,"['String', 'Backtracking', 'Stack', '1+']",63.50%,Hard,31.2883%;,22.1K,34.8K,
1097,1097. Game Play Analysis V,['Database'],53.40%,Hard,17.3991%;,19.5K,36.5K,Y
1098,1098. Unpopular Books,['Database'],44.30%,Medium,17.4898%;,34.2K,77.3K,Y
1099,1099. Two Sum Less Than K,"['Array', 'Two Pointers', 'Binary Search', '1+']",61.00%,Easy,44.0105%;,114.7K,188K,Y
1100,1100. Find K-Length Substrings With No Repeated Characters,"['Hash Table', 'String', 'Sliding Window']",74.70%,Medium,37.38%;,34.3K,45.9K,Y
1101,1101. The Earliest Moment When Everyone Become Friends,"['Array', 'Union Find']",64.70%,Medium,54.9809%;,62.8K,97K,Y
1102,1102. Path With Maximum Minimum Value,"['Array', 'Depth-First Search', '4+']",53.30%,Medium,41.1802%;,56.2K,105.4K,Y
1103,1103. Distribute Candies to People,"['Math', 'Simulation']",64.20%,Easy,15.5467%;,75.1K,116.9K,
1104,1104. Path In Zigzag Labelled Binary Tree,"['Math', 'Tree', 'Binary Tree']",75.10%,Medium,19.5373%;,39K,51.9K,
1105,1105. Filling Bookcase Shelves,"['Array', 'Dynamic Programming']",59.30%,Medium,42.8882%;,44.7K,75.3K,
1106,1106. Parsing A Boolean Expression,"['String', 'Stack', 'Recursion']",58.40%,Hard,55.821%;,22.5K,38.4K,
1107,1107. New Users Daily Count,['Database'],45.20%,Medium,0%;,30.5K,67.5K,Y
1108,1108. Defanging an IP Address,['String'],89.10%,Easy,36.9154%;,502.3K,563.7K,
1109,1109. Corporate Flight Bookings,"['Array', 'Prefix Sum']",60.60%,Medium,16.6236%;,50.8K,83.8K,
1110,1110. Delete Nodes And Return Forest,"['Tree', 'Depth-First Search', 'Binary Tree']",69.30%,Medium,51.3095%;,179.1K,258.6K,
1111,1111. Maximum Nesting Depth of Two Valid Parentheses Strings,"['String', 'Stack']",73.00%,Medium,36.1283%;,22.7K,31.2K,
1112,1112. Highest Grade For Each Student,['Database'],72.30%,Medium,10.8421%;,48.4K,66.9K,Y
1113,1113. Reported Posts,['Database'],65.40%,Easy,7.26126%;,40.7K,62.3K,Y
1114,1114. Print in Order,['Concurrency'],68.40%,Easy,14.5943%;,126.5K,184.9K,
1115,1115. Print FooBar Alternately,['Concurrency'],62.50%,Medium,29.8268%;,64.3K,103K,
1116,1116. Print Zero Even Odd,['Concurrency'],60.50%,Medium,19.5373%;,38.8K,64.2K,
1117,1117. Building H2O,['Concurrency'],55.80%,Medium,10.7692%;,38.7K,69.3K,
1118,1118. Number of Days in a Month,['Math'],57.10%,Easy,0%;,7.4K,13K,Y
1119,1119. Remove Vowels from a String,['String'],90.80%,Easy,0%;,93.6K,103.1K,Y
1120,1120. Maximum Average Subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",65.60%,Medium,32.7945%;,58.9K,89.9K,Y
1121,1121. Divide Array Into Increasing Sequences,"['Array', 'Greedy']",60.60%,Hard,0%;,4.4K,7.2K,Y
1122,1122. Relative Sort Array,"['Array', 'Hash Table', 'Sorting', '1+']",68.60%,Easy,44.195%;,152.7K,222.5K,
1123,1123. Lowest Common Ancestor of Deepest Leaves,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",70.90%,Medium,31.8195%;,89.5K,126.2K,
1124,1124. Longest Well-Performing Interval,"['Array', 'Hash Table', 'Stack', '2+']",34.60%,Medium,32.3995%;,26.3K,75.9K,
1125,1125. Smallest Sufficient Team,"['Array', 'Dynamic Programming', '2+']",46.80%,Hard,36.1283%;,18.7K,39.9K,
1126,1126. Active Businesses,['Database'],67.00%,Medium,13.5342%;,38.9K,58.1K,Y
1127,1127. User Purchase Platform,['Database'],50.10%,Hard,19.1985%;,13.1K,26.1K,Y
1128,1128. Number of Equivalent Domino Pairs,"['Array', 'Hash Table', 'Counting']",47.10%,Easy,13.1068%;,56.8K,120.5K,
1129,1129. Shortest Path with Alternating Colors,"['Breadth-First Search', 'Graph']",48.50%,Medium,76.6508%;,94.3K,194.2K,
1130,1130. Minimum Cost Tree From Leaf Values,"['Dynamic Programming', 'Stack', 'Greedy', '1+']",68.30%,Medium,40.5025%;,83.6K,122.3K,
1131,1131. Maximum of Absolute Value Expression,"['Array', 'Math']",49.10%,Medium,29.1201%;,19.4K,39.4K,
1132,1132. Reported Posts II,['Database'],33.20%,Medium,0%;,32.8K,98.6K,Y
1133,1133. Largest Unique Number,"['Array', 'Hash Table', 'Sorting']",67.60%,Easy,0%;,37.9K,56.1K,Y
1134,1134. Armstrong Number,['Math'],77.70%,Easy,0%;,31.7K,40.8K,Y
1135,1135. Connecting Cities With Minimum Cost,"['Union Find', 'Graph', '2+']",61.30%,Medium,25.795%;,65.5K,106.7K,Y
1136,1136. Parallel Courses,"['Graph', 'Topological Sort']",61.60%,Medium,58.0822%;,56.3K,91.3K,Y
1137,1137. N-th Tribonacci Number,"['Math', 'Dynamic Programming', 'Memoization']",63.80%,Easy,51.3705%;,467.3K,732.8K,
1138,1138. Alphabet Board Path,"['Hash Table', 'String']",52.00%,Medium,46.0002%;,46.4K,89.1K,
1139,1139. Largest 1-Bordered Square,"['Array', 'Dynamic Programming', 'Matrix']",50.20%,Medium,53.6394%;,21.9K,43.6K,
1140,1140. Stone Game II,"['Array', 'Math', 'Dynamic Programming', '1+']",64.80%,Medium,21.5888%;,45.8K,70.7K,
1141,1141. User Activity for the Past 30 Days I,['Database'],48.70%,Easy,26.1172%;,89.9K,184.7K,
1142,1142. User Activity for the Past 30 Days II,['Database'],35.80%,Easy,17.8628%;,37.2K,103.8K,Y
1143,1143. Longest Common Subsequence,"['String', 'Dynamic Programming']",58.40%,Medium,70.1912%;,663.6K,1.1M,
1144,1144. Decrease Elements To Make Array Zigzag,"['Array', 'Greedy']",47.30%,Medium,21.4467%;,17.1K,36.1K,
1145,1145. Binary Tree Coloring Game,"['Tree', 'Depth-First Search', 'Binary Tree']",51.70%,Medium,29.7983%;,40.6K,78.6K,
1146,1146. Snapshot Array,"['Array', 'Hash Table', 'Binary Search', '1+']",37.20%,Medium,63.2918%;,140.6K,378K,
1147,1147. Longest Chunked Palindrome Decomposition,"['Two Pointers', 'String', '4+']",59.40%,Hard,32.7945%;,19.8K,33.4K,
1148,1148. Article Views I,['Database'],76.30%,Easy,12.574%;,105.4K,138.1K,
1149,1149. Article Views II,['Database'],47.30%,Medium,0%;,31.7K,67.1K,Y
1150,1150. Check If a Number Is Majority Element in a Sorted Array,"['Array', 'Binary Search']",57.20%,Easy,13.5894%;,38K,66.5K,Y
1151,1151. Minimum Swaps to Group All 1's Together,"['Array', 'Sliding Window']",60.90%,Medium,28.4803%;,55.1K,90.5K,Y
1152,1152. Analyze User Website Visit Pattern,"['Array', 'Hash Table', 'Sorting']",43.10%,Medium,81.3932%;,86.8K,201.3K,Y
1153,1153. String Transforms Into Another String,"['Hash Table', 'String']",35.30%,Hard,16.6236%;,50.4K,142.9K,Y
1154,1154. Day of the Year,"['Math', 'String']",49.60%,Easy,12.5113%;,42.7K,86K,
1155,1155. Number of Dice Rolls With Target Sum,['Dynamic Programming'],53.80%,Medium,80.8077%;,177.5K,329.6K,
1156,1156. Swap For Longest Repeated Character Substring,"['String', 'Sliding Window']",45.20%,Medium,32.1117%;,26.7K,59.2K,
1157,1157. Online Majority Element In Subarray,"['Array', 'Binary Search', 'Design', '2+']",41.70%,Hard,0%;,14.5K,34.8K,
1158,1158. Market Analysis I,['Database'],60.50%,Medium,2.62657%;,70.6K,116.7K,
1159,1159. Market Analysis II,['Database'],58.10%,Hard,0%;,16K,27.5K,Y
1160,1160. Find Words That Can Be Formed by Characters,"['Array', 'Hash Table', 'String']",67.50%,Easy,43.3256%;,142.3K,210.7K,
1161,1161. Maximum Level Sum of a Binary Tree,"['Tree', 'Depth-First Search', '2+']",66.00%,Medium,38.9229%;,125.2K,189.8K,
1162,1162. As Far from Land as Possible,"['Array', 'Dynamic Programming', '2+']",51.90%,Medium,67.9834%;,135.5K,261.2K,
1163,1163. Last Substring in Lexicographical Order,"['Two Pointers', 'String']",34.80%,Hard,22.8064%;,31.5K,90.7K,
1164,1164. Product Price at a Given Date,['Database'],67.20%,Medium,0%;,41.1K,61.1K,Y
1165,1165. Single-Row Keyboard,"['Hash Table', 'String']",86.50%,Easy,15.9149%;,71.2K,82.3K,Y
1166,1166. Design File System,"['Hash Table', 'String', 'Design', '1+']",62.10%,Medium,72.6129%;,41.6K,67K,Y
1167,1167. Minimum Cost to Connect Sticks,"['Array', 'Greedy', 'Heap (Priority Queue)']",68.40%,Medium,36.8023%;,103.1K,150.7K,Y
1168,1168. Optimize Water Distribution in a Village,"['Union Find', 'Graph', 'Minimum Spanning Tree']",64.50%,Hard,59.3418%;,38.9K,60.3K,Y
1169,1169. Invalid Transactions,"['Array', 'Hash Table', 'String', '1+']",31.20%,Medium,77.0718%;,60.3K,193.2K,
1170,1170. Compare Strings by Frequency of the Smallest Character,"['Array', 'Hash Table', 'String', '2+']",61.50%,Medium,23.563%;,72.2K,117.4K,
1171,1171. Remove Zero Sum Consecutive Nodes from Linked List,"['Hash Table', 'Linked List']",43.20%,Medium,31.9004%;,44.9K,103.9K,
1172,1172. Dinner Plate Stacks,"['Hash Table', 'Stack', 'Design', '1+']",33.10%,Hard,20.2551%;,15.6K,47K,
1173,1173. Immediate Food Delivery I,['Database'],82.60%,Easy,0%;,53K,64.2K,Y
1174,1174. Immediate Food Delivery II,['Database'],62.90%,Medium,0%;,28.7K,45.6K,Y
1175,1175. Prime Arrangements,['Math'],54.50%,Easy,24.8146%;,24.8K,45.5K,
1176,1176. Diet Plan Performance,"['Array', 'Sliding Window']",52.70%,Easy,0%;,28.9K,54.8K,Y
1177,1177. Can Make Palindrome from Substring,"['Hash Table', 'String', 'Bit Manipulation', '1+']",38.00%,Medium,46.0002%;,23.4K,61.6K,
1178,1178. Number of Valid Words for Each Puzzle,"['Array', 'Hash Table', 'String', '2+']",46.30%,Hard,0%;,28.5K,61.5K,
1179,1179. Reformat Department Table,['Database'],80.80%,Easy,24.2746%;,90.4K,112K,
1180,1180. Count Substrings with Only One Distinct Letter,"['Math', 'String']",79.00%,Easy,28.4803%;,23.6K,29.8K,Y
1181,1181. Before and After Puzzle,"['Array', 'Hash Table', 'String', '1+']",45.30%,Medium,0%;,9.2K,20.4K,Y
1182,1182. Shortest Distance to Target Color,"['Array', 'Binary Search', 'Dynamic Programming']",55.40%,Medium,12.232%;,33.2K,60K,Y
1183,1183. Maximum Number of Ones,"['Greedy', 'Heap (Priority Queue)']",61.30%,Hard,0%;,2.5K,4K,Y
1184,1184. Distance Between Bus Stops,['Array'],54.00%,Easy,0%;,49.6K,91.9K,
1185,1185. Day of the Week,['Math'],57.50%,Easy,35.5963%;,52.4K,91.2K,
1186,1186. Maximum Subarray Sum with One Deletion,"['Array', 'Dynamic Programming']",41.40%,Medium,27.875%;,38.5K,92.9K,
1187,1187. Make Array Strictly Increasing,"['Array', 'Binary Search', 'Dynamic Programming']",45.30%,Hard,0%;,13.7K,30.2K,
1188,1188. Design Bounded Blocking Queue,['Concurrency'],72.80%,Medium,62.4301%;,42.7K,58.6K,Y
1189,1189. Maximum Number of Balloons,"['Hash Table', 'String', 'Counting']",61.10%,Easy,27.4892%;,141.8K,232.1K,
1190,1190. Reverse Substrings Between Each Pair of Parentheses,"['String', 'Stack']",65.90%,Medium,39.8147%;,60K,91K,
1191,1191. K-Concatenation Maximum Sum,"['Array', 'Dynamic Programming']",23.80%,Medium,29.3417%;,29.6K,124.5K,
1192,1192. Critical Connections in a Network,"['Depth-First Search', 'Graph', '1+']",54.60%,Hard,34.4723%;,194.6K,356.4K,
1193,1193. Monthly Transactions I,['Database'],66.00%,Medium,6.78199%;,35.3K,53.6K,Y
1194,1194. Tournament Winners,['Database'],50.80%,Hard,33.9534%;,16.9K,33.3K,Y
1195,1195. Fizz Buzz Multithreaded,['Concurrency'],72.90%,Medium,49.8126%;,36.6K,50.2K,
1196,1196. How Many Apples Can You Put into the Basket,"['Array', 'Greedy', 'Sorting']",66.90%,Easy,8.18955%;,25K,37.3K,Y
1197,1197. Minimum Knight Moves,['Breadth-First Search'],39.70%,Medium,70.1857%;,133.8K,337.1K,Y
1198,1198. Find Smallest Common Element in All Rows,"['Array', 'Hash Table', 'Binary Search', '2+']",76.60%,Medium,0%;,38.2K,49.8K,Y
1199,1199. Minimum Time to Build Blocks,"['Math', 'Greedy', 'Heap (Priority Queue)']",40.80%,Hard,0%;,3.7K,9.2K,Y
1200,1200. Minimum Absolute Difference,"['Array', 'Sorting']",69.60%,Easy,64.878%;,152.8K,219.4K,
1201,1201. Ugly Number III,"['Math', 'Binary Search', 'Number Theory']",28.80%,Medium,23.563%;,26.1K,90.8K,
1202,1202. Smallest String With Swaps,"['Hash Table', 'String', 'Depth-First Search', '2+']",57.60%,Medium,47.7118%;,96.9K,168.3K,
1203,1203. Sort Items by Groups Respecting Dependencies,"['Depth-First Search', 'Breadth-First Search', '2+']",51.20%,Hard,38.7718%;,15K,29.4K,
1204,1204. Last Person to Fit in the Bus,['Database'],73.40%,Medium,14.6633%;,35.6K,48.6K,Y
1205,1205. Monthly Transactions II,['Database'],43.00%,Medium,0%;,19.6K,45.6K,Y
1206,1206. Design Skiplist,"['Linked List', 'Design']",60.40%,Hard,28.7601%;,16.6K,27.5K,
1207,1207. Unique Number of Occurrences,"['Array', 'Hash Table']",73.50%,Easy,97.7261%;,258.4K,351.5K,
1208,1208. Get Equal Substrings Within Budget,"['String', 'Binary Search', 'Sliding Window', '1+']",48.50%,Medium,26.7346%;,37K,76.4K,
1209,1209. Remove All Adjacent Duplicates in String II,"['String', 'Stack']",56.20%,Medium,84.1313%;,260.6K,463.9K,
1210,1210. Minimum Moves to Reach Target with Rotations,"['Array', 'Breadth-First Search', 'Matrix']",49.20%,Hard,26.2365%;,8.3K,16.8K,
1211,1211. Queries Quality and Percentage,['Database'],71.40%,Easy,0%;,36.2K,50.7K,Y
1212,1212. Team Scores in Football Tournament,['Database'],57.10%,Medium,0%;,30.5K,53.4K,Y
1213,1213. Intersection of Three Sorted Arrays,"['Array', 'Hash Table', 'Binary Search', '1+']",79.90%,Easy,10.4515%;,76.9K,96.3K,Y
1214,1214. Two Sum BSTs,"['Two Pointers', 'Binary Search', 'Stack', '4+']",66.10%,Medium,0%;,38.9K,58.8K,Y
1215,1215. Stepping Numbers,"['Backtracking', 'Breadth-First Search']",46.20%,Medium,0%;,8.3K,17.9K,Y
1216,1216. Valid Palindrome III,"['String', 'Dynamic Programming']",50.40%,Hard,15.2639%;,43.4K,86K,Y
1217,1217. Minimum Cost to Move Chips to The Same Position,"['Array', 'Math', 'Greedy']",71.90%,Easy,43.4456%;,110.8K,154.1K,
1218,1218. Longest Arithmetic Subsequence of Given Difference,"['Array', 'Hash Table', 'Dynamic Programming']",51.90%,Medium,37.38%;,59.7K,115K,
1219,1219. Path with Maximum Gold,"['Array', 'Backtracking', 'Matrix']",63.70%,Medium,55.8926%;,98.4K,154.4K,
1220,1220. Count Vowels Permutation,['Dynamic Programming'],60.30%,Hard,51.253%;,102.8K,170.4K,
1221,1221. Split a String in Balanced Strings,"['String', 'Greedy', 'Counting']",85.10%,Easy,30.2093%;,240.1K,282.1K,
1222,1222. Queens That Can Attack the King,"['Array', 'Matrix', 'Simulation']",71.80%,Medium,35.5245%;,37.3K,51.9K,
1223,1223. Dice Roll Simulation,"['Array', 'Dynamic Programming']",48.60%,Hard,22.8064%;,25.2K,51.9K,
1224,1224. Maximum Equal Frequency,"['Array', 'Hash Table']",37.00%,Hard,22.8064%;,12.9K,34.7K,
1225,1225. Report Contiguous Dates,['Database'],61.90%,Hard,0%;,17.7K,28.5K,Y
1226,1226. The Dining Philosophers,['Concurrency'],55.90%,Medium,40.3369%;,24.5K,43.9K,
1227,1227. Airplane Seat Assignment Probability,"['Math', 'Dynamic Programming', '2+']",65.60%,Medium,21.4467%;,32.5K,49.6K,
1228,1228. Missing Number In Arithmetic Progression,"['Array', 'Math']",51.40%,Easy,0%;,23.4K,45.4K,Y
1229,1229. Meeting Scheduler,"['Array', 'Two Pointers', 'Sorting']",55.20%,Medium,41.1873%;,70.9K,128.3K,Y
1230,1230. Toss Strange Coins,"['Math', 'Dynamic Programming', '1+']",54.00%,Medium,26.2365%;,12.6K,23.3K,Y
1231,1231. Divide Chocolate,"['Array', 'Binary Search']",57.40%,Hard,22.1788%;,44.4K,77.4K,Y
1232,1232. Check If It Is a Straight Line,"['Array', 'Math', 'Geometry']",40.40%,Easy,31.9561%;,146.1K,361.5K,
1233,1233. Remove Sub-Folders from the Filesystem,"['Array', 'String', 'Trie']",65.60%,Medium,28.4803%;,47.7K,72.8K,
1234,1234. Replace the Substring for Balanced String,"['String', 'Sliding Window']",37.10%,Medium,40.0731%;,27.7K,74.5K,
1235,1235. Maximum Profit in Job Scheduling,"['Array', 'Binary Search', '2+']",53.40%,Hard,77.1505%;,179K,335.1K,
1236,1236. Web Crawler,"['String', 'Depth-First Search', '2+']",66.50%,Medium,68.0581%;,29.9K,44.9K,Y
1237,1237. Find Positive Integer Solution for a Given Equation,"['Math', 'Two Pointers', 'Binary Search', '1+']",69.20%,Medium,22.4485%;,57.3K,82.7K,
1238,1238. Circular Permutation in Binary Representation,"['Math', 'Backtracking', 'Bit Manipulation']",68.80%,Medium,42.122%;,14.6K,21.2K,
1239,1239. Maximum Length of a Concatenated String with Unique Characters,"['Array', 'String', 'Backtracking', '1+']",52.20%,Medium,76.6295%;,170.3K,326.5K,
1240,1240. Tiling a Rectangle with the Fewest Squares,"['Dynamic Programming', 'Backtracking']",54.00%,Hard,44.746%;,21.2K,39.2K,
1241,1241. Number of Comments per Post,['Database'],66.50%,Easy,13.5894%;,30.4K,45.7K,Y
1242,1242. Web Crawler Multithreaded,"['Depth-First Search', 'Breadth-First Search', '1+']",48.90%,Medium,43.7048%;,41K,83.7K,Y
1243,1243. Array Transformation,"['Array', 'Simulation']",51.10%,Easy,36.5316%;,11.6K,22.8K,Y
1244,1244. Design A Leaderboard,"['Hash Table', 'Design', 'Sorting']",68.70%,Medium,78.4843%;,60.2K,87.6K,Y
1245,1245. Tree Diameter,"['Tree', 'Depth-First Search', '3+']",61.50%,Medium,24.3803%;,30.1K,48.9K,Y
1246,1246. Palindrome Removal,"['Array', 'Dynamic Programming']",46.20%,Hard,0%;,9.9K,21.4K,Y
1247,1247. Minimum Swaps to Make Strings Equal,"['Math', 'String', 'Greedy']",64.10%,Medium,18.2526%;,33.1K,51.6K,
1248,1248. Count Number of Nice Subarrays,"['Array', 'Hash Table', 'Math', '1+']",60.80%,Medium,42.7118%;,78.3K,128.6K,
1249,1249. Minimum Remove to Make Valid Parentheses,"['String', 'Stack']",65.80%,Medium,67.4368%;,491.5K,746.7K,
1250,1250. Check If It Is a Good Array,"['Array', 'Math', 'Number Theory']",58.80%,Hard,51.5251%;,17.3K,29.5K,
1251,1251. Average Selling Price,['Database'],81.60%,Easy,13.7153%;,51.7K,63.3K,Y
1252,1252. Cells with Odd Values in a Matrix,"['Array', 'Math', 'Simulation']",78.50%,Easy,13.2244%;,93K,118.4K,
1253,1253. Reconstruct a 2-Row Binary Matrix,"['Array', 'Greedy', 'Matrix']",44.30%,Medium,21.4467%;,22.4K,50.6K,
1254,1254. Number of Closed Islands,"['Array', 'Depth-First Search', '3+']",64.10%,Medium,33.0996%;,128K,199.7K,
1255,1255. Maximum Score Words Formed by Letters,"['Array', 'String', 'Dynamic Programming', '3+']",72.40%,Hard,15.8399%;,29.3K,40.5K,
1256,1256. Encode Number,"['Math', 'String', 'Bit Manipulation']",69.90%,Medium,0%;,7K,10.1K,Y
1257,1257. Smallest Common Region,"['Array', 'Hash Table', 'String', '3+']",64.30%,Medium,53.14%;,19.5K,30.3K,Y
1258,1258. Synonymous Sentences,"['Array', 'Hash Table', 'String', '2+']",56.70%,Medium,43.3256%;,19K,33.5K,Y
1259,1259. Handshakes That Don't Cross,"['Math', 'Dynamic Programming']",60.40%,Hard,0%;,92.K,15.2K,Y
1260,1260. Shift 2D Grid,"['Array', 'Matrix', 'Simulation']",67.80%,Easy,24.0456%;,94.2K,138.9K,
1261,1261. Find Elements in a Contaminated Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', '3+']",76.30%,Medium,29.9546%;,54.4K,71.2K,
1262,1262. Greatest Sum Divisible by Three,"['Array', 'Dynamic Programming', 'Greedy']",50.80%,Medium,16.4406%;,45.3K,89.2K,
1263,1263. Minimum Moves to Move a Box to Their Target Location,"['Array', 'Breadth-First Search', '2+']",49.00%,Hard,44.7044%;,24.7K,50.3K,
1264,1264. Page Recommendations,['Database'],66.60%,Medium,0%;,33.3K,50K,Y
1265,1265. Print Immutable Linked List in Reverse,"['Linked List', 'Two Pointers', 'Stack', '1+']",94.20%,Medium,0%;,48.6K,51.6K,Y
1266,1266. Minimum Time Visiting All Points,"['Array', 'Math', 'Geometry']",79.10%,Easy,22.0065%;,133K,168.2K,
1267,1267. Count Servers that Communicate,"['Array', 'Depth-First Search', '4+']",59.40%,Medium,11.791%;,50.9K,85.6K,
1268,1268. Search Suggestions System,"['Array', 'String', 'Trie']",66.30%,Medium,66.822%;,243.2K,367.1K,
1269,1269. Number of Ways to Stay in the Same Place After Some Steps,['Dynamic Programming'],43.50%,Hard,20.2551%;,31.7K,72.7K,
1270,1270. All People Report to the Given Manager,['Database'],87.00%,Medium,0%;,46.6K,53.6K,Y
1271,1271. Hexspeak,"['Math', 'String']",57.10%,Easy,36.5316%;,9.3K,16.2K,Y
1272,1272. Remove Interval,['Array'],63.60%,Medium,32.7945%;,26.9K,42.3K,Y
1273,1273. Delete Tree Nodes,"['Tree', 'Depth-First Search', '1+']",61.10%,Medium,0%;,9.4K,15.3K,Y
1274,1274. Number of Ships in a Rectangle,"['Array', 'Divide and Conquer', 'Interactive']",69.20%,Hard,72.2464%;,24.4K,35.2K,Y
1275,1275. Find Winner on a Tic Tac Toe Game,"['Array', 'Hash Table', 'Matrix', '1+']",54.20%,Easy,52.583%;,99.9K,184.2K,
1276,1276. Number of Burgers with No Waste of Ingredients,['Math'],50.70%,Medium,25.2677%;,21.3K,42K,
1277,1277. Count Square Submatrices with All Ones,"['Array', 'Dynamic Programming', 'Matrix']",74.50%,Medium,41.2353%;,191K,256.3K,
1278,1278. Palindrome Partitioning III,"['String', 'Dynamic Programming']",60.80%,Hard,23.4761%;,22.8K,37.5K,
1279,1279. Traffic Light Controlled Intersection,['Concurrency'],74.40%,Easy,45.7869%;,10.8K,14.5K,Y
1280,1280. Students and Examinations,['Database'],71.80%,Easy,8.84357%;,34.7K,48.3K,Y
1281,1281. Subtract the Product and Sum of Digits of an Integer,['Math'],86.70%,Easy,42.9526%;,365.5K,421.7K,
1282,1282. Group the People Given the Group Size They Belong To,"['Array', 'Hash Table']",85.60%,Medium,38.134%;,99.5K,116.2K,
1283,1283. Find the Smallest Divisor Given a Threshold,"['Array', 'Binary Search']",56.10%,Medium,26.5929%;,105.7K,188.6K,
1284,1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix,"['Array', 'Bit Manipulation', '2+']",71.90%,Hard,55.7785%;,28.9K,40.3K,
1285,1285. Find the Start and End Number of Continuous Ranges,['Database'],86.10%,Medium,27.4362%;,30.6K,35.6K,Y
1286,1286. Iterator for Combination,"['String', 'Backtracking', 'Design', '1+']",73.30%,Medium,21.0327%;,67.4K,91.9K,
1287,1287. Element Appearing More Than 25% In Sorted Array,['Array'],59.50%,Easy,25.3711%;,75.9K,127.7K,
1288,1288. Remove Covered Intervals,"['Array', 'Sorting']",57.00%,Medium,6.08495%;,106.6K,186.9K,
1289,1289. Minimum Falling Path Sum II,"['Array', 'Dynamic Programming', 'Matrix']",58.50%,Hard,37.055%;,39.9K,68.1K,
1290,1290. Convert Binary Number in a Linked List to Integer,"['Linked List', 'Math']",82.20%,Easy,45.7496%;,371.2K,451.6K,
1291,1291. Sequential Digits,['Enumeration'],61.30%,Medium,46.3401%;,88.9K,145K,
1292,1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold,"['Array', 'Binary Search', 'Matrix', '1+']",53.30%,Medium,37.2197%;,29.6K,55.6K,
1293,1293. Shortest Path in a Grid with Obstacles Elimination,"['Array', 'Breadth-First Search', 'Matrix']",45.40%,Hard,76.7899%;,175.3K,386.3K,
1294,1294. Weather Type in Each Country,['Database'],67.30%,Easy,0%;,34.3K,51K,Y
1295,1295. Find Numbers with Even Number of Digits,['Array'],77.00%,Easy,25.6228%;,539.7K,700.7K,
1296,1296. Divide Array in Sets of K Consecutive Numbers,"['Array', 'Hash Table', 'Greedy', '1+']",56.50%,Medium,18.7129%;,71K,125.7K,
1297,1297. Maximum Number of Occurrences of a Substring,"['Hash Table', 'String', 'Sliding Window']",51.90%,Medium,0%;,40.3K,77.7K,
1298,1298. Maximum Candies You Can Get from Boxes,"['Array', 'Breadth-First Search', 'Graph']",60.20%,Hard,55.2589%;,12.7K,21.2K,
1299,1299. Replace Elements with Greatest Element on Right Side,['Array'],73.50%,Easy,29.781%;,280.5K,381.6K,
1300,1300. Sum of Mutated Array Closest to Target,"['Array', 'Binary Search', 'Sorting']",43.60%,Medium,34.5195%;,32.2K,73.9K,
1301,1301. Number of Paths with Max Score,"['Array', 'Dynamic Programming', 'Matrix']",38.80%,Hard,0%;,11K,28.3K,
1302,1302. Deepest Leaves Sum,"['Tree', 'Depth-First Search', '2+']",86.70%,Medium,30.9053%;,268.1K,309.4K,
1303,1303. Find the Team Size,['Database'],90.10%,Easy,0%;,59.4K,65.9K,Y
1304,1304. Find N Unique Integers Sum up to Zero,"['Array', 'Math']",77.00%,Easy,42.7767%;,180.5K,234.6K,
1305,1305. All Elements in Two Binary Search Trees,"['Tree', 'Depth-First Search', '3+']",79.80%,Medium,19.6531%;,186.4K,233.5K,
1306,1306. Jump Game III,"['Array', 'Depth-First Search', '1+']",63.50%,Medium,45.9757%;,184.8K,291.1K,
1307,1307. Verbal Arithmetic Puzzle,"['Array', 'Math', 'String', '1+']",34.20%,Hard,72.2464%;,10.7K,31.2K,
1308,1308. Running Total for Different Genders,['Database'],87.20%,Medium,0%;,35K,40.1K,Y
1309,1309. Decrypt String from Alphabet to Integer Mapping,['String'],79.70%,Easy,24.0662%;,104.8K,131.5K,
1310,1310. XOR Queries of a Subarray,"['Array', 'Bit Manipulation', 'Prefix Sum']",72.30%,Medium,33.203%;,46.4K,64.2K,
1311,1311. Get Watched Videos by Your Friends,"['Array', 'Hash Table', 'Breadth-First Search', '2+']",45.90%,Medium,22.1788%;,18K,39.2K,
1312,1312. Minimum Insertion Steps to Make a String Palindrome,"['String', 'Dynamic Programming']",66.20%,Hard,31.9862%;,74.7K,112.8K,
1313,1313. Decompress Run-Length Encoded List,['Array'],85.80%,Easy,33.8296%;,221K,257.6K,
1314,1314. Matrix Block Sum,"['Array', 'Matrix', 'Prefix Sum']",75.40%,Medium,47.1699%;,76K,100.7K,
1315,1315. Sum of Nodes with Even-Valued Grandparent,"['Tree', 'Depth-First Search', '2+']",85.50%,Medium,25.6994%;,126.1K,147.5K,
1316,1316. Distinct Echo Substrings,"['String', 'Trie', 'Rolling Hash', '1+']",49.60%,Hard,28.4803%;,13.9K,28K,
1317,1317. Convert Integer to the Sum of Two No-Zero Integers,['Math'],55.50%,Easy,19.1985%;,36.7K,66.2K,
1318,1318. Minimum Flips to Make a OR b Equal to c,['Bit Manipulation'],66.00%,Medium,10.1499%;,29.5K,44.7K,
1319,1319. Number of Operations to Make Network Connected,"['Depth-First Search', 'Breadth-First Search', '2+']",58.90%,Medium,36.1041%;,115.9K,196.8K,
1320,1320. Minimum Distance to Type a Word Using Two Fingers,"['String', 'Dynamic Programming']",59.50%,Hard,0%;,27.5K,46.1K,
1321,1321. Restaurant Growth,['Database'],70.70%,Medium,0%;,29.7K,42K,Y
1322,1322. Ads Performance,['Database'],60.30%,Easy,16.4607%;,35.8K,59.3K,Y
1323,1323. Maximum 69 Number,"['Math', 'Greedy']",82.10%,Easy,71.9334%;,211.3K,257.3K,
1324,1324. Print Words Vertically,"['Array', 'String', 'Simulation']",61.40%,Medium,37.2197%;,32.9K,53.7K,
1325,1325. Delete Leaves With a Given Value,"['Tree', 'Depth-First Search', 'Binary Tree']",74.70%,Medium,13.974%;,85.5K,114.5K,
1326,1326. Minimum Number of Taps to Open to Water a Garden,"['Array', 'Dynamic Programming', 'Greedy']",47.60%,Hard,49.2959%;,67.6K,142K,
1327,1327. List the Products Ordered in a Period,['Database'],76.30%,Easy,0%;,34.9K,45.7K,Y
1328,1328. Break a Palindrome,"['String', 'Greedy']",52.70%,Medium,91.1903%;,144.3K,273.9K,
1329,1329. Sort the Matrix Diagonally,"['Array', 'Sorting', 'Matrix']",83.40%,Medium,50.8109%;,144.5K,173.4K,
1330,1330. Reverse Subarray To Maximize Array Value,"['Array', 'Math', 'Greedy']",40.20%,Hard,20.2551%;,4.6K,11.5K,
1331,1331. Rank Transform of an Array,"['Array', 'Hash Table', 'Sorting']",59.20%,Easy,39.7966%;,81.4K,137.5K,
1332,1332. Remove Palindromic Subsequences,"['Two Pointers', 'String']",76.20%,Easy,14.3799%;,119.4K,156.7K,
1333,"1333. Filter Restaurants by Vegan-Friendly, Price and Distance","['Array', 'Sorting']",60.00%,Medium,33.9534%;,26.1K,43.5K,
1334,1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance,"['Dynamic Programming', 'Graph', 'Shortest Path']",54.40%,Medium,53.9226%;,59.7K,109.8K,
1335,1335. Minimum Difficulty of a Job Schedule,"['Array', 'Dynamic Programming']",58.50%,Hard,75.099%;,119.3K,203.9K,
1336,1336. Number of Transactions per Visit,['Database'],49.90%,Hard,0%;,10.7K,21.5K,Y
1337,1337. The K Weakest Rows in a Matrix,"['Array', 'Binary Search', 'Sorting', '2+']",72.10%,Easy,59.636%;,237K,328.6K,
1338,1338. Reduce Array Size to The Half,"['Array', 'Hash Table', 'Greedy', '2+']",69.40%,Medium,47.3583%;,169.2K,243.7K,
1339,1339. Maximum Product of Splitted Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",47.80%,Medium,78.2164%;,113.1K,236.5K,
1340,1340. Jump Game V,"['Array', 'Dynamic Programming', 'Sorting']",62.50%,Hard,32.9237%;,24.9K,39.8K,
1341,1341. Movie Rating,['Database'],57.30%,Medium,0%;,26.1K,45.6K,Y
1342,1342. Number of Steps to Reduce a Number to Zero,"['Math', 'Bit Manipulation']",85.20%,Easy,50.873%;,483.6K,567.8K,
1343,1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold,"['Array', 'Sliding Window']",67.60%,Medium,24.0662%;,53.3K,78.9K,
1344,1344. Angle Between Hands of a Clock,['Math'],63.30%,Medium,54.7585%;,104.7K,165.4K,
1345,1345. Jump Game IV,"['Array', 'Hash Table', 'Breadth-First Search']",47.00%,Hard,53.5776%;,128.1K,272.6K,
1346,1346. Check If N and Its Double Exist,"['Array', 'Hash Table', 'Two Pointers', '2+']",36.50%,Easy,27.0021%;,273.1K,748.2K,
1347,1347. Minimum Number of Steps to Make Two Strings Anagram,"['Hash Table', 'String', 'Counting']",77.80%,Medium,68.0072%;,125.4K,161.3K,
1348,1348. Tweet Counts Per Frequency,"['Hash Table', 'Binary Search', 'Design', '2+']",43.90%,Medium,40.3369%;,29.9K,68.2K,
1349,1349. Maximum Students Taking Exam,"['Array', 'Dynamic Programming', '3+']",48.90%,Hard,32.1117%;,12.7K,26K,
1350,1350. Students With Invalid Departments,['Database'],90.30%,Easy,0%;,47.2K,52.3K,Y
1351,1351. Count Negative Numbers in a Sorted Matrix,"['Array', 'Binary Search', 'Matrix']",75.50%,Easy,35.4792%;,234.6K,310.9K,
1352,1352. Product of the Last K Numbers,"['Array', 'Math', 'Design', '2+']",50.00%,Medium,54.6258%;,67.9K,135.6K,
1353,1353. Maximum Number of Events That Can Be Attended,"['Array', 'Greedy', 'Sorting', '1+']",32.60%,Medium,73.0879%;,67.8K,208.2K,
1354,1354. Construct Target Array With Multiple Sums,"['Array', 'Heap (Priority Queue)']",36.30%,Hard,0%;,63.9K,176.2K,
1355,1355. Activity Participants,['Database'],73.80%,Medium,0%;,25K,33.8K,Y
1356,1356. Sort Integers by The Number of 1 Bits,"['Array', 'Bit Manipulation', 'Sorting', '1+']",73.00%,Easy,76.0529%;,106.8K,146.4K,
1357,1357. Apply Discount Every n Orders,"['Array', 'Hash Table', 'Design']",69.90%,Medium,0%;,17.6K,25.2K,
1358,1358. Number of Substrings Containing All Three Characters,"['Hash Table', 'String', 'Sliding Window']",63.30%,Medium,37.6761%;,54.3K,85.7K,
1359,1359. Count All Valid Pickup and Delivery Options,"['Math', 'Dynamic Programming', 'Combinatorics']",62.60%,Hard,27.4419%;,58K,92.8K,
1360,1360. Number of Days Between Two Dates,"['Math', 'String']",48.10%,Easy,65.1886%;,38.9K,80.9K,
1361,1361. Validate Binary Tree Nodes,"['Tree', 'Depth-First Search', '4+']",39.90%,Medium,23.1776%;,42.4K,106.2K,
1362,1362. Closest Divisors,['Math'],59.80%,Medium,13.5894%;,18.5K,31K,
1363,1363. Largest Multiple of Three,"['Array', 'Dynamic Programming', 'Greedy']",33.30%,Hard,28.1857%;,17K,51K,
1364,1364. Number of Trusted Contacts of a Customer,['Database'],77.70%,Medium,15.2639%;,16.5K,21.3K,Y
1365,1365. How Many Numbers Are Smaller Than the Current Number,"['Array', 'Hash Table', 'Sorting', '1+']",86.60%,Easy,44.4668%;,415.4K,479.4K,
1366,1366. Rank Teams by Votes,"['Array', 'Hash Table', 'String', '2+']",57.90%,Medium,74.3317%;,51.7K,89.2K,
1367,1367. Linked List in Binary Tree,"['Linked List', 'Tree', 'Depth-First Search', '2+']",43.70%,Medium,8.86945%;,64K,146.5K,
1368,1368. Minimum Cost to Make at Least One Valid Path in a Grid,"['Array', 'Breadth-First Search', 'Graph', '3+']",61.50%,Hard,44.195%;,39.2K,63.7K,
1369,1369. Get the Second Most Recent Activity,['Database'],69.10%,Hard,0%;,18.2K,26.4K,Y
1370,1370. Increasing Decreasing String,"['Hash Table', 'String', 'Counting']",77.20%,Easy,36.4296%;,64.4K,83.4K,
1371,1371. Find the Longest Substring Containing Vowels in Even Counts,"['Hash Table', 'String', 'Bit Manipulation', '1+']",63.20%,Medium,46.9417%;,22.2K,35.1K,
1372,1372. Longest ZigZag Path in a Binary Tree,"['Dynamic Programming', 'Tree', '2+']",60.20%,Medium,12.9025%;,45.7K,76K,
1373,1373. Maximum Sum BST in Binary Tree,"['Dynamic Programming', 'Tree', '3+']",39.40%,Hard,22.8979%;,49K,124.4K,
1374,1374. Generate a String With Characters That Have Odd Counts,['String'],77.60%,Easy,14.9577%;,77.8K,100.3K,
1375,1375. Number of Times Binary String Is Prefix-Aligned,['Array'],65.80%,Medium,37.6761%;,45.7K,69.5K,
1376,1376. Time Needed to Inform All Employees,"['Tree', 'Depth-First Search', '1+']",58.30%,Medium,45.5547%;,128.1K,219.6K,
1377,1377. Frog Position After T Seconds,"['Tree', 'Depth-First Search', '2+']",35.80%,Hard,15.9149%;,24.2K,67.7K,
1378,1378. Replace Employee ID With The Unique Identifier,['Database'],91.10%,Easy,9.32972%;,35.6K,39.1K,Y
1379,1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree,"['Tree', 'Depth-First Search', '2+']",86.70%,Easy,27.2551%;,187.4K,216.1K,
1380,1380. Lucky Numbers in a Matrix,"['Array', 'Matrix']",70.60%,Easy,49.5583%;,81.3K,115.1K,
1381,1381. Design a Stack With Increment Operation,"['Array', 'Stack', 'Design']",77.10%,Medium,39.5884%;,89.9K,116.5K,
1382,1382. Balance a Binary Search Tree,"['Divide and Conquer', 'Greedy', 'Tree', '3+']",80.70%,Medium,17.8323%;,115.1K,142.7K,
1383,1383. Maximum Performance of a Team,"['Array', 'Greedy', 'Sorting', '1+']",48.50%,Hard,60.7156%;,85.8K,176.9K,
1384,1384. Total Sales Amount by Year,['Database'],65.40%,Hard,19.1985%;,14.1K,21.6K,Y
1385,1385. Find the Distance Value Between Two Arrays,"['Array', 'Two Pointers', 'Binary Search', '1+']",66.40%,Easy,37.5331%;,78.6K,118.4K,
1386,1386. Cinema Seat Allocation,"['Array', 'Hash Table', 'Greedy', '1+']",40.90%,Medium,79.2478%;,37.8K,92.4K,
1387,1387. Sort Integers by The Power Value,"['Dynamic Programming', 'Memoization', 'Sorting']",70.10%,Medium,57.4686%;,75.7K,108K,
1388,1388. Pizza With 3n Slices,"['Array', 'Dynamic Programming', 'Greedy', '1+']",50.20%,Hard,13.1068%;,13.8K,27.6K,
1389,1389. Create Target Array in the Given Order,"['Array', 'Simulation']",85.80%,Easy,40.4127%;,186.7K,217.5K,
1390,1390. Four Divisors,"['Array', 'Math']",41.20%,Medium,9.86312%;,25.2K,61.3K,
1391,1391. Check if There is a Valid Path in a Grid,"['Array', 'Depth-First Search', '3+']",47.30%,Medium,12.6554%;,24.2K,51.2K,
1392,1392. Longest Happy Prefix,"['String', 'Rolling Hash', 'String Matching', '1+']",44.90%,Hard,44.746%;,28.9K,64.3K,
1393,1393. Capital Gain/Loss,['Database'],87.70%,Medium,30.1164%;,77.1K,88K,
1394,1394. Find Lucky Integer in an Array,"['Array', 'Hash Table', 'Counting']",64.40%,Easy,30.1964%;,90.3K,140.2K,
1395,1395. Count Number of Teams,"['Array', 'Dynamic Programming', '1+']",67.30%,Medium,45.4459%;,99.6K,148K,
1396,1396. Design Underground System,"['Hash Table', 'String', 'Design']",73.60%,Medium,74.5888%;,163.2K,221.8K,
1397,1397. Find All Good Strings,"['String', 'Dynamic Programming', '1+']",42.30%,Hard,45.7869%;,5.1K,12.2K,
1398,1398. Customers Who Bought Products A and B but Not C,['Database'],76.00%,Medium,19.4514%;,40K,52.7K,Y
1399,1399. Count Largest Group,"['Hash Table', 'Math']",67.00%,Easy,15.8399%;,37.2K,55.6K,
1400,1400. Construct K Palindrome Strings,"['Hash Table', 'String', 'Greedy', '1+']",62.80%,Medium,11.8338%;,44.4K,70.7K,
1401,1401. Circle and Rectangle Overlapping,"['Math', 'Geometry']",44.10%,Medium,43.3256%;,11.5K,26.1K,
1402,1402. Reducing Dishes,"['Array', 'Dynamic Programming', 'Greedy', '1+']",72.00%,Hard,37.7001%;,53.9K,74.9K,
1403,1403. Minimum Subsequence in Non-Increasing Order,"['Array', 'Greedy', 'Sorting']",72.30%,Easy,0%;,60.1K,83.1K,
1404,1404. Number of Steps to Reduce a Number in Binary Representation to One,"['String', 'Bit Manipulation']",52.60%,Medium,49.8689%;,33.5K,63.8K,
1405,1405. Longest Happy String,"['String', 'Greedy', 'Heap (Priority Queue)']",57.40%,Medium,57.1719%;,64K,111.5K,
1406,1406. Stone Game III,"['Array', 'Math', 'Dynamic Programming', '1+']",59.60%,Hard,30.5193%;,42.3K,71K,
1407,1407. Top Travellers,['Database'],62.10%,Easy,5.02444%;,78.3K,126K,
1408,1408. String Matching in an Array,"['Array', 'String', 'String Matching']",63.80%,Easy,28.7956%;,68.4K,107.2K,
1409,1409. Queries on a Permutation With Key,"['Array', 'Binary Indexed Tree', 'Simulation']",83.40%,Medium,10.1499%;,42.7K,51.2K,
1410,1410. HTML Entity Parser,"['Hash Table', 'String']",51.70%,Medium,46.9668%;,21.2K,41K,
1411,1411. Number of Ways to Paint N × 3 Grid,['Dynamic Programming'],62.40%,Hard,44.746%;,28.5K,45.6K,
1412,1412. Find the Quiet Students in All Exams,['Database'],62.10%,Hard,0%;,20.7K,33.3K,Y
1413,1413. Minimum Value to Get Positive Step by Step Sum,"['Array', 'Prefix Sum']",67.40%,Easy,50.69%;,95.4K,141.6K,
1414,1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K,"['Math', 'Greedy']",65.50%,Medium,11.4586%;,36.4K,55.7K,
1415,1415. The k-th Lexicographical String of All Happy Strings of Length n,"['String', 'Backtracking']",72.50%,Medium,12.6554%;,31.1K,42.9K,
1416,1416. Restore The Array,"['String', 'Dynamic Programming']",38.70%,Hard,42.0456%;,14.6K,37.9K,
1417,1417. Reformat The String,['String'],54.80%,Easy,7.26126%;,49.4K,90K,
1418,1418. Display Table of Food Orders in a Restaurant,"['Array', 'Hash Table', 'String', '2+']",74.10%,Medium,36.272%;,23K,31K,
1419,1419. Minimum Number of Frogs Croaking,"['String', 'Counting']",50.20%,Medium,65.2332%;,35.4K,70.5K,
1420,1420. Build Array Where You Can Find The Maximum Exactly K Comparisons,['Dynamic Programming'],63.10%,Hard,0%;,11.2K,17.8K,
1421,1421. NPV Queries,['Database'],83.30%,Easy,0%;,22.6K,27.1K,Y
1422,1422. Maximum Score After Splitting a String,['String'],58.00%,Easy,15.2639%;,45.5K,78.4K,
1423,1423. Maximum Points You Can Obtain from Cards,"['Array', 'Sliding Window', 'Prefix Sum']",52.30%,Medium,51.2004%;,217.1K,415.5K,
1424,1424. Diagonal Traverse II,"['Array', 'Sorting', 'Heap (Priority Queue)']",50.50%,Medium,34.82%;,47.3K,93.7K,
1425,1425. Constrained Subsequence Sum,"['Array', 'Dynamic Programming', 'Queue', '3+']",47.60%,Hard,21.5888%;,23.7K,49.9K,
1426,1426. Counting Elements,"['Array', 'Hash Table']",59.70%,Easy,3.98641%;,98.9K,165.6K,Y
1427,1427. Perform String Shifts,"['Array', 'Math', 'String']",54.30%,Easy,0%;,73.4K,135.2K,Y
1428,1428. Leftmost Column with at Least a One,"['Array', 'Binary Search', 'Matrix', '1+']",53.40%,Medium,45.923%;,164.5K,307.8K,Y
1429,1429. First Unique Number,"['Array', 'Hash Table', 'Design', '2+']",52.90%,Medium,24.3803%;,77.8K,146.9K,Y
1430,1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree,"['Tree', 'Depth-First Search', '2+']",46.40%,Medium,22.8064%;,42.5K,91.6K,Y
1431,1431. Kids With the Greatest Number of Candies,['Array'],87.30%,Easy,41.8108%;,389.4K,446.3K,
1432,1432. Max Difference You Can Get From Changing an Integer,"['Math', 'Greedy']",42.30%,Medium,34.5195%;,14.4K,34K,
1433,1433. Check If a String Can Break Another String,"['String', 'Greedy', 'Sorting']",68.90%,Medium,0%;,35.3K,51.2K,
1434,1434. Number of Ways to Wear Different Hats to Each Other,"['Array', 'Dynamic Programming', '2+']",43.00%,Hard,0%;,11.4K,26.6K,
1435,1435. Create a Session Bar Chart,['Database'],77.10%,Easy,0%;,19.8K,25.7K,Y
1436,1436. Destination City,"['Hash Table', 'String']",77.50%,Easy,27.5667%;,122.2K,157.7K,
1437,1437. Check If All 1's Are at Least Length K Places Away,['Array'],58.80%,Easy,13.3173%;,66K,112.4K,
1438,1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit,"['Array', 'Queue', 'Sliding Window', '3+']",48.30%,Medium,50.9345%;,107.7K,223K,
1439,1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows,"['Array', 'Binary Search', '2+']",61.40%,Hard,29.9546%;,28.5K,46.5K,
1440,1440. Evaluate Boolean Expression,['Database'],75.20%,Medium,0%;,21.3K,28.4K,Y
1441,1441. Build an Array With Stack Operations,"['Array', 'Stack', 'Simulation']",71.80%,Medium,37.7137%;,72K,100.3K,
1442,1442. Count Triplets That Can Form Two Arrays of Equal XOR,"['Array', 'Hash Table', 'Math', '2+']",76.00%,Medium,25.7411%;,31.4K,41.3K,
1443,1443. Minimum Time to Collect All Apples in a Tree,"['Hash Table', 'Tree', 'Depth-First Search', '1+']",62.80%,Medium,82.6403%;,98K,156.1K,
1444,1444. Number of Ways of Cutting a Pizza,"['Array', 'Dynamic Programming', '2+']",56.10%,Hard,98.8309%;,25.3K,45.1K,
1445,1445. Apples & Oranges,['Database'],89.80%,Medium,0%;,42K,46.8K,Y
1446,1446. Consecutive Characters,['String'],61.30%,Easy,21.733%;,137.6K,224.5K,
1447,1447. Simplified Fractions,"['Math', 'String', 'Number Theory']",65.10%,Medium,21.5888%;,26.1K,40K,
1448,1448. Count Good Nodes in Binary Tree,"['Tree', 'Depth-First Search', '2+']",74.30%,Medium,37.267%;,308.5K,415.1K,
1449,1449. Form Largest Integer With Digits That Add up to Target,"['Array', 'Dynamic Programming']",47.70%,Hard,42.122%;,14.6K,30.7K,
1450,1450. Number of Students Doing Homework at a Given Time,['Array'],75.90%,Easy,11.1044%;,100.4K,132.3K,
1451,1451. Rearrange Words in a Sentence,"['String', 'Sorting']",63.10%,Medium,28.7601%;,43.8K,69.5K,
1452,1452. People Whose List of Favorite Companies Is Not a Subset of Another List,"['Array', 'Hash Table', 'String']",56.80%,Medium,0%;,21K,37K,
1453,1453. Maximum Number of Darts Inside of a Circular Dartboard,"['Array', 'Math', 'Geometry']",36.90%,Hard,34.9923%;,5.2K,14K,
1454,1454. Active Users,['Database'],37.80%,Medium,23.4761%;,31.3K,83K,Y
1455,1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence,"['String', 'String Matching']",64.20%,Easy,0%;,62.8K,97.7K,
1456,1456. Maximum Number of Vowels in a Substring of Given Length,"['String', 'Sliding Window']",58.20%,Medium,13.5894%;,57K,98K,
1457,1457. Pseudo-Palindromic Paths in a Binary Tree,"['Bit Manipulation', 'Tree', '3+']",67.80%,Medium,55.8414%;,113.3K,167K,
1458,1458. Max Dot Product of Two Subsequences,"['Array', 'Dynamic Programming']",46.60%,Hard,17.3991%;,19.4K,41.6K,
1459,1459. Rectangles Area,['Database'],69.40%,Medium,10.7692%;,14.5K,20.9K,Y
1460,1460. Make Two Arrays Equal by Reversing Subarrays,"['Array', 'Hash Table', 'Sorting']",72.20%,Easy,4.88165%;,104K,144K,
1461,1461. Check If a String Contains All Binary Codes of Size K,"['Hash Table', 'String', 'Bit Manipulation', '2+']",56.60%,Medium,16.4607%;,108.3K,191.2K,
1462,1462. Course Schedule IV,"['Depth-First Search', 'Breadth-First Search', '2+']",49.00%,Medium,0%;,41.7K,85.1K,
1463,1463. Cherry Pickup II,"['Array', 'Dynamic Programming', 'Matrix']",69.60%,Hard,31.7166%;,78.2K,112.3K,
1464,1464. Maximum Product of Two Elements in an Array,"['Array', 'Sorting', 'Heap (Priority Queue)']",79.90%,Easy,20.3904%;,182.3K,228.2K,
1465,1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts,"['Array', 'Greedy', 'Sorting']",40.90%,Medium,49.8689%;,159.7K,390.9K,
1466,1466. Reorder Routes to Make All Paths Lead to the City Zero,"['Depth-First Search', 'Breadth-First Search', '1+']",61.70%,Medium,36.2613%;,74.9K,121.5K,
1467,1467. Probability of a Two Boxes Having The Same Number of Distinct Balls,"['Array', 'Math', 'Dynamic Programming', '3+']",60.80%,Hard,0%;,7K,11.6K,
1468,1468. Calculate Salaries,['Database'],80.70%,Medium,0%;,20.4K,25.3K,Y
1469,1469. Find All The Lonely Nodes,"['Tree', 'Depth-First Search', '2+']",82.20%,Easy,0%;,43.2K,52.6K,Y
1470,1470. Shuffle the Array,['Array'],89.00%,Easy,67.0693%;,508.5K,571.1K,
1471,1471. The k Strongest Values in an Array,"['Array', 'Two Pointers', 'Sorting']",60.40%,Medium,14.1068%;,33K,54.7K,
1472,1472. Design Browser History,"['Array', 'Linked List', 'Stack', '3+']",76.20%,Medium,78.9169%;,120K,157.5K,
1473,1473. Paint House III,"['Array', 'Dynamic Programming']",61.60%,Hard,38.5632%;,55.1K,89.4K,
1474,1474. Delete N Nodes After M Nodes of a Linked List,['Linked List'],73.40%,Easy,0%;,25K,34K,Y
1475,1475. Final Prices With a Special Discount in a Shop,"['Array', 'Stack', 'Monotonic Stack']",76.00%,Easy,24.4436%;,103.8K,136.6K,
1476,1476. Subrectangle Queries,"['Array', 'Design', 'Matrix']",88.30%,Medium,19.319%;,87.2K,98.8K,
1477,1477. Find Two Non-overlapping Sub-arrays Each With Target Sum,"['Array', 'Hash Table', 'Binary Search', '2+']",36.80%,Medium,32.1117%;,43.1K,117.2K,
1478,1478. Allocate Mailboxes,"['Array', 'Math', 'Dynamic Programming', '1+']",55.60%,Hard,32.997%;,20K,35.9K,
1479,1479. Sales by Day of the Week,['Database'],81.00%,Hard,0%;,15.1K,18.7K,Y
1480,1480. Running Sum of 1d Array,"['Array', 'Prefix Sum']",87.70%,Easy,87.2337%;,1.4M,1.6M,
1481,1481. Least Number of Unique Integers after K Removals,"['Array', 'Hash Table', 'Greedy', '2+']",55.70%,Medium,64.8433%;,93.9K,168.6K,
1482,1482. Minimum Number of Days to Make m Bouquets,"['Array', 'Binary Search']",54.20%,Medium,57.9456%;,58.1K,107.2K,
1483,1483. Kth Ancestor of a Tree Node,"['Binary Search', 'Dynamic Programming', '4+']",33.80%,Hard,34.4617%;,26.5K,78.5K,
1484,1484. Group Sold Products By The Date,['Database'],79.90%,Easy,23.8115%;,111.3K,139.3K,
1485,1485. Clone Binary Tree With Random Pointer,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",80.00%,Medium,0.709764%;,21.9K,27.3K,Y
1486,1486. XOR Operation in an Array,"['Math', 'Bit Manipulation']",84.60%,Easy,21.8517%;,151.1K,178.6K,
1487,1487. Making File Names Unique,"['Array', 'Hash Table', 'String']",36.20%,Medium,52.3074%;,29.6K,81.9K,
1488,1488. Avoid Flood in The City,"['Array', 'Hash Table', 'Binary Search', '2+']",26.40%,Medium,51.5135%;,30.2K,114.3K,
1489,1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree,"['Union Find', 'Graph', 'Sorting', '2+']",52.50%,Hard,40.3369%;,10.8K,20.5K,
1490,1490. Clone N-ary Tree,"['Hash Table', 'Tree', 'Depth-First Search', '1+']",83.50%,Medium,0%;,24.7K,29.6K,Y
1491,1491. Average Salary Excluding the Minimum and Maximum Salary,"['Array', 'Sorting']",61.40%,Easy,42.6564%;,196.9K,320.7K,
1492,1492. The kth Factor of n,['Math'],62.80%,Medium,30.7068%;,112.4K,179K,
1493,1493. Longest Subarray of 1's After Deleting One Element,"['Array', 'Dynamic Programming', 'Sliding Window']",60.40%,Medium,59.2398%;,58.3K,96.5K,
1494,1494. Parallel Courses II,"['Dynamic Programming', 'Bit Manipulation', '2+']",30.40%,Hard,52.6585%;,13.5K,44.5K,
1495,1495. Friendly Movies Streamed Last Month,['Database'],49.20%,Easy,0%;,24.5K,49.9K,Y
1496,1496. Path Crossing,"['Hash Table', 'String']",56.00%,Easy,30.2937%;,44.4K,79.3K,
1497,1497. Check If Array Pairs Are Divisible by k,"['Array', 'Hash Table', 'Counting']",39.10%,Medium,42.3616%;,40K,102.3K,
1498,1498. Number of Subsequences That Satisfy the Given Sum Condition,"['Array', 'Two Pointers', 'Binary Search', '1+']",37.50%,Medium,52.2411%;,40.5K,108K,
1499,1499. Max Value of Equation,"['Array', 'Queue', 'Sliding Window', '2+']",45.80%,Hard,47.216%;,36.8K,80.5K,
1500,1500. Design a File Sharing System,"['Hash Table', 'Design', '2+']",44.60%,Medium,34.9923%;,3.5K,7.8K,Y
1501,1501. Countries You Can Safely Invest In,['Database'],54.20%,Medium,22.1031%;,31.1K,57.4K,Y
1502,1502. Can Make Arithmetic Progression From Sequence,"['Array', 'Sorting']",67.80%,Easy,18.5956%;,125.4K,185.1K,
1503,1503. Last Moment Before All Ants Fall Out of a Plank,"['Array', 'Brainteaser', 'Simulation']",55.70%,Medium,22.8064%;,18.2K,32.7K,
1504,1504. Count Submatrices With All Ones,"['Array', 'Dynamic Programming', 'Stack', '2+']",57.60%,Medium,40.3369%;,43.2K,75.1K,
1505,1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits,"['String', 'Greedy', 'Binary Indexed Tree', '1+']",38.40%,Hard,57.7719%;,8.6K,22.5K,
1506,1506. Find Root of N-Ary Tree,"['Hash Table', 'Bit Manipulation', 'Tree', '1+']",78.50%,Medium,42.122%;,29K,37K,Y
1507,1507. Reformat Date,['String'],63.30%,Easy,32.3758%;,52.9K,83.7K,
1508,1508. Range Sum of Sorted Subarray Sums,"['Array', 'Two Pointers', 'Binary Search', '1+']",59.00%,Medium,18.0312%;,32.1K,54.4K,
1509,1509. Minimum Difference Between Largest and Smallest Value in Three Moves,"['Array', 'Greedy', 'Sorting']",54.60%,Medium,51.4471%;,74.3K,136K,
1510,1510. Stone Game IV,"['Math', 'Dynamic Programming', 'Game Theory']",60.30%,Hard,11.9311%;,64.4K,106.9K,
1511,1511. Customer Order Frequency,['Database'],71.50%,Easy,0%;,34.8K,48.7K,Y
1512,1512. Number of Good Pairs,"['Array', 'Hash Table', 'Math', '1+']",88.20%,Easy,54.8193%;,420.8K,476.9K,
1513,1513. Number of Substrings With Only 1s,"['Math', 'String']",45.40%,Medium,8.84357%;,36.2K,79.7K,
1514,1514. Path with Maximum Probability,"['Array', 'Graph', 'Heap (Priority Queue)', '1+']",48.60%,Medium,18.4798%;,62.7K,129K,
1515,1515. Best Position for a Service Centre,"['Math', 'Geometry', 'Randomized']",37.30%,Hard,33.9534%;,11.9K,31.9K,
1516,1516. Move Sub-Tree of N-Ary Tree,"['Tree', 'Depth-First Search']",63.40%,Hard,0%;,2K,3.2K,Y
1517,1517. Find Users With Valid E-Mails,['Database'],54.10%,Easy,0%;,22.7K,42K,Y
1518,1518. Water Bottles,"['Math', 'Simulation']",60.40%,Easy,29.3417%;,61K,100.9K,
1519,1519. Number of Nodes in the Sub-Tree With the Same Label,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",55.30%,Medium,77.6007%;,77.8K,140.7K,
1520,1520. Maximum Number of Non-Overlapping Substrings,"['String', 'Greedy']",38.20%,Hard,57.6005%;,13K,34K,
1521,1521. Find a Value of a Mysterious Function Closest to Target,"['Array', 'Binary Search', 'Bit Manipulation', '1+']",43.40%,Hard,24.3803%;,8.6K,19.9K,
1522,1522. Diameter of N-Ary Tree,"['Tree', 'Depth-First Search']",73.50%,Medium,0%;,37.8K,51.4K,Y
1523,1523. Count Odd Numbers in an Interval Range,['Math'],49.70%,Easy,87.3574%;,281.7K,567.3K,
1524,1524. Number of Sub-arrays With Odd Sum,"['Array', 'Math', 'Dynamic Programming', '1+']",43.30%,Medium,42.122%;,31.6K,72.9K,
1525,1525. Number of Good Ways to Split a String,"['String', 'Dynamic Programming', '1+']",68.90%,Medium,27.9407%;,87.9K,127.5K,
1526,1526. Minimum Number of Increments on Subarrays to Form a Target Array,"['Array', 'Dynamic Programming', 'Stack', '2+']",68.50%,Hard,34.1541%;,30.7K,44.8K,
1527,1527. Patients With a Condition,['Database'],40.80%,Easy,13.4902%;,99.7K,244.2K,
1528,1528. Shuffle String,"['Array', 'String']",85.20%,Easy,34.9923%;,284.1K,333.3K,
1529,1529. Minimum Suffix Flips,"['String', 'Greedy']",72.60%,Medium,54.3914%;,38.7K,53.3K,
1530,1530. Number of Good Leaf Nodes Pairs,"['Tree', 'Depth-First Search', 'Binary Tree']",61.10%,Medium,30.5193%;,34K,55.7K,
1531,1531. String Compression II,"['String', 'Dynamic Programming']",49.50%,Hard,89.7635%;,43.2K,87.2K,
1532,1532. The Most Recent Three Orders,['Database'],70.00%,Medium,0%;,22K,31.5K,Y
1533,1533. Find the Index of the Large Integer,"['Array', 'Binary Search', 'Interactive']",56.00%,Medium,21.4467%;,10K,17.9K,Y
1534,1534. Count Good Triplets,"['Array', 'Enumeration']",80.90%,Easy,36.3773%;,94.7K,117K,
1535,1535. Find the Winner of an Array Game,"['Array', 'Simulation']",48.60%,Medium,39.8147%;,28.2K,58K,
1536,1536. Minimum Swaps to Arrange a Binary Grid,"['Array', 'Greedy', 'Matrix']",46.50%,Medium,28.7601%;,12.8K,27.6K,
1537,1537. Get the Maximum Score,"['Array', 'Two Pointers', '2+']",39.30%,Hard,35.9968%;,21.2K,53.9K,
1538,1538. Guess the Majority in a Hidden Array,"['Array', 'Math', 'Interactive']",63.50%,Medium,0%;,1.7K,2.7K,Y
1539,1539. Kth Missing Positive Number,"['Array', 'Binary Search']",58.60%,Easy,59.7463%;,296.3K,506K,
1540,1540. Can Convert String in K Moves,"['Hash Table', 'String']",33.40%,Medium,20.2551%;,15.9K,47.7K,
1541,1541. Minimum Insertions to Balance a Parentheses String,"['String', 'Stack', 'Greedy']",49.80%,Medium,27.3012%;,38K,76.3K,
1542,1542. Find Longest Awesome Substring,"['Hash Table', 'String', 'Bit Manipulation']",41.50%,Hard,40.8815%;,11.1K,26.9K,
1543,1543. Fix Product Name Format,['Database'],60.80%,Easy,0%;,17.2K,28.3K,Y
1544,1544. Make The String Great,"['String', 'Stack']",63.30%,Easy,64.3387%;,135.1K,213.6K,
1545,1545. Find Kth Bit in Nth Binary String,"['String', 'Recursion']",58.50%,Medium,34.9923%;,32.6K,55.7K,
1546,1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target,"['Array', 'Hash Table', 'Greedy', '1+']",47.40%,Medium,16.6236%;,24.3K,51.3K,
1547,1547. Minimum Cost to Cut a Stick,"['Array', 'Dynamic Programming']",57.00%,Hard,44.2324%;,45.5K,79.7K,
1548,1548. The Most Similar Path in a Graph,"['Dynamic Programming', 'Graph']",57.10%,Hard,28.4803%;,14.7K,25.7K,Y
1549,1549. The Most Recent Orders for Each Product,['Database'],67.40%,Medium,7.09575%;,22.2K,32.9K,Y
1550,1550. Three Consecutive Odds,['Array'],63.50%,Easy,8.46999%;,64.4K,101.4K,
1551,1551. Minimum Operations to Make Array Equal,['Math'],81.50%,Medium,28.7601%;,80.5K,98.8K,
1552,1552. Magnetic Force Between Two Balls,"['Array', 'Binary Search', 'Sorting']",58.00%,Medium,26.8321%;,39.5K,68.1K,
1553,1553. Minimum Number of Days to Eat N Oranges,"['Dynamic Programming', 'Memoization']",34.70%,Hard,34.1541%;,29.2K,83.9K,
1554,1554. Strings Differ by One Character,"['Hash Table', 'String', 'Rolling Hash', '1+']",42.60%,Medium,25.795%;,21.9K,51.4K,Y
1555,1555. Bank Account Summary,['Database'],52.30%,Medium,0%;,13.8K,26.5K,Y
1556,1556. Thousand Separator,['String'],54.60%,Easy,34.4617%;,41.1K,75.4K,
1557,1557. Minimum Number of Vertices to Reach All Nodes,['Graph'],79.40%,Medium,11.5504%;,88.6K,111.5K,
1558,1558. Minimum Numbers of Function Calls to Make Target Array,"['Array', 'Greedy', 'Bit Manipulation']",63.90%,Medium,21.5888%;,18K,28.2K,
1559,1559. Detect Cycles in 2D Grid,"['Array', 'Depth-First Search', '3+']",48.00%,Medium,33.626%;,32K,66.7K,
1560,1560. Most Visited Sector in a Circular Track,"['Array', 'Simulation']",58.60%,Easy,39.6173%;,26K,44.3K,
1561,1561. Maximum Number of Coins You Can Get,"['Array', 'Math', 'Greedy', '2+']",79.10%,Medium,22.4876%;,64.1K,81.1K,
1562,1562. Find Latest Group of Size M,"['Array', 'Binary Search', 'Simulation']",42.80%,Medium,13.5894%;,16K,37.4K,
1563,1563. Stone Game V,"['Array', 'Math', 'Dynamic Programming', '1+']",40.30%,Hard,49.6993%;,15.5K,38.5K,
1564,1564. Put Boxes Into the Warehouse I,"['Array', 'Greedy', 'Sorting']",67.00%,Medium,0%;,14.2K,21.2K,Y
1565,1565. Unique Orders and Customers Per Month,['Database'],82.90%,Easy,0%;,18.4K,22.2K,Y
1566,1566. Detect Pattern of Length M Repeated K or More Times,"['Array', 'Enumeration']",43.40%,Easy,0%;,29.1K,67.1K,
1567,1567. Maximum Length of Subarray With Positive Product,"['Array', 'Dynamic Programming', 'Greedy']",44.00%,Medium,49.9143%;,81.8K,185.8K,
1568,1568. Minimum Number of Days to Disconnect Island,"['Array', 'Depth-First Search', '3+']",46.50%,Hard,27.6804%;,10.6K,22.9K,
1569,1569. Number of Ways to Reorder Array to Get Same BST,"['Array', 'Math', 'Divide and Conquer', '7+']",47.90%,Hard,0%;,11.7K,24.4K,
1570,1570. Dot Product of Two Sparse Vectors,"['Array', 'Hash Table', 'Two Pointers', '1+']",90.30%,Medium,73.1377%;,183.1K,202.7K,Y
1571,1571. Warehouse Manager,['Database'],89.00%,Easy,10.1499%;,33.6K,37.8K,Y
1572,1572. Matrix Diagonal Sum,"['Array', 'Matrix']",80.20%,Easy,24.4334%;,171.7K,214K,
1573,1573. Number of Ways to Split a String,"['Math', 'String']",32.50%,Medium,37.6761%;,23.7K,72.9K,
1574,1574. Shortest Subarray to be Removed to Make Array Sorted,"['Array', 'Two Pointers', 'Binary Search', '2+']",37.00%,Medium,43.4928%;,24.8K,66.9K,
1575,1575. Count All Possible Routes,"['Array', 'Dynamic Programming', 'Memoization']",56.70%,Hard,27.6804%;,12.6K,22.2K,
1576,1576. Replace All ?'s to Avoid Consecutive Repeating Characters,['String'],48.30%,Easy,46.3401%;,51.7K,107.1K,
1577,1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers,"['Array', 'Hash Table', 'Math', '1+']",40.10%,Medium,29.9546%;,17.9K,44.6K,
1578,1578. Minimum Time to Make Rope Colorful,"['Array', 'String', 'Dynamic Programming', '1+']",63.50%,Medium,82.3999%;,144.9K,228.3K,
1579,1579. Remove Max Number of Edges to Keep Graph Fully Traversable,"['Union Find', 'Graph']",53.20%,Hard,33.5231%;,18.4K,34.6K,
1580,1580. Put Boxes Into the Warehouse II,"['Array', 'Greedy', 'Sorting']",63.70%,Medium,0%;,3.9K,6.1K,Y
1581,1581. Customer Who Visited but Did Not Make Any Transactions,['Database'],85.20%,Easy,9.2456%;,85.9K,100.9K,
1582,1582. Special Positions in a Binary Matrix,"['Array', 'Matrix']",65.40%,Easy,32.7945%;,39.7K,60.7K,
1583,1583. Count Unhappy Friends,"['Array', 'Simulation']",61.00%,Medium,49.3253%;,23.6K,38.7K,
1584,1584. Min Cost to Connect All Points,"['Array', 'Union Find', 'Graph', '1+']",64.00%,Medium,33.3873%;,152.5K,238.3K,
1585,1585. Check If String Is Transformable With Substring Sort Operations,"['String', 'Greedy', 'Sorting']",47.90%,Hard,0%;,6.9K,14.3K,
1586,1586. Binary Search Tree Iterator II,"['Stack', 'Tree', 'Design', '3+']",70.90%,Medium,49.6993%;,12.5K,17.7K,Y
1587,1587. Bank Account Summary II,['Database'],86.30%,Easy,8.25545%;,66.7K,77.3K,
1588,1588. Sum of All Odd Length Subarrays,"['Array', 'Math', 'Prefix Sum']",83.40%,Easy,50.2586%;,151K,181.1K,
1589,1589. Maximum Sum Obtained of Any Permutation,"['Array', 'Greedy', 'Sorting', '1+']",37.20%,Medium,0%;,15.7K,42K,
1590,1590. Make Sum Divisible by P,"['Array', 'Hash Table', 'Prefix Sum']",28.00%,Medium,31.8195%;,21.3K,75.9K,
1591,1591. Strange Printer II,"['Array', 'Graph', 'Topological Sort', '1+']",58.60%,Hard,43.3256%;,8.4K,14.4K,
1592,1592. Rearrange Spaces Between Words,['String'],43.50%,Easy,40.3369%;,46.9K,107.7K,
1593,1593. Split a String Into the Max Number of Unique Substrings,"['Hash Table', 'String', 'Backtracking']",55.30%,Medium,30.5193%;,25.3K,45.8K,
1594,1594. Maximum Non Negative Product in a Matrix,"['Array', 'Dynamic Programming', 'Matrix']",33.10%,Medium,13.5894%;,20.3K,61.2K,
1595,1595. Minimum Cost to Connect Two Groups of Points,"['Array', 'Dynamic Programming', '3+']",46.40%,Hard,34.5195%;,7.2K,15.5K,
1596,1596. The Most Frequently Ordered Products for Each Customer,['Database'],83.50%,Medium,15.8399%;,26K,31.1K,Y
1597,1597. Build Binary Expression Tree From Infix Expression,"['String', 'Stack', 'Tree', '1+']",62.70%,Hard,28.4803%;,11.8K,18.9K,Y
1598,1598. Crawler Log Folder,"['Array', 'String', 'Stack']",64.50%,Easy,31.4888%;,57.7K,89.4K,
1599,1599. Maximum Profit of Operating a Centennial Wheel,"['Array', 'Simulation']",43.80%,Medium,0%;,10.8K,24.8K,
1600,1600. Throne Inheritance,"['Hash Table', 'Tree', 'Depth-First Search', '1+']",63.50%,Medium,31.2883%;,13.7K,21.5K,
1601,1601. Maximum Number of Achievable Transfer Requests,"['Array', 'Backtracking', 'Bit Manipulation', '1+']",51.20%,Hard,34.9923%;,9.2K,17.9K,
1602,1602. Find Nearest Right Node in Binary Tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",75.60%,Medium,0%;,21.1K,27.9K,Y
1603,1603. Design Parking System,"['Design', 'Simulation', 'Counting']",87.90%,Easy,45.7166%;,171.6K,195.2K,
1604,1604. Alert Using Same Key-Card Three or More Times in a One Hour Period,"['Array', 'Hash Table', 'String', '1+']",47.00%,Medium,50.8387%;,29.1K,62K,
1605,1605. Find Valid Matrix Given Row and Column Sums,"['Array', 'Greedy', 'Matrix']",78.00%,Medium,8.39841%;,33K,42.4K,
1606,1606. Find Servers That Handled Most Number of Requests,"['Array', 'Greedy', 'Heap (Priority Queue)', '1+']",42.90%,Hard,54.2003%;,12.9K,29.9K,
1607,1607. Sellers With No Sales,['Database'],54.80%,Easy,5.9586%;,24.5K,44.7K,Y
1608,1608. Special Array With X Elements Greater Than or Equal X,"['Array', 'Binary Search', 'Sorting']",60.40%,Easy,36.9661%;,63.7K,105.3K,
1609,1609. Even Odd Tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",54.30%,Medium,18.5444%;,42.7K,78.7K,
1610,1610. Maximum Number of Visible Points,"['Array', 'Math', 'Geometry', '2+']",37.30%,Hard,70.1804%;,36K,96.5K,
1611,1611. Minimum One Bit Operations to Make Integers Zero,"['Dynamic Programming', 'Bit Manipulation', '1+']",63.30%,Hard,64.8433%;,12.5K,19.8K,
1612,1612. Check If Two Expression Trees are Equivalent,"['Tree', 'Depth-First Search', 'Binary Tree']",70.20%,Medium,0%;,6.2K,8.8K,Y
1613,1613. Find the Missing IDs,['Database'],75.00%,Medium,0%;,15.1K,20.2K,Y
1614,1614. Maximum Nesting Depth of the Parentheses,"['String', 'Stack']",82.30%,Easy,41.3644%;,124.1K,150.8K,
1615,1615. Maximal Network Rank,['Graph'],58.50%,Medium,38.7718%;,60.3K,103.1K,
1616,1616. Split Two Strings to Make Palindrome,"['Two Pointers', 'String']",31.20%,Medium,0%;,19.9K,63.7K,
1617,1617. Count Subtrees With Max Distance Between Cities,"['Dynamic Programming', 'Bit Manipulation', '3+']",66.10%,Hard,0%;,8K,12.1K,
1618,1618. Maximum Font to Fit a Sentence in a Screen,"['Array', 'String', 'Binary Search', '1+']",59.70%,Medium,34.9923%;,6.1K,10.2K,Y
1619,1619. Mean of Array After Removing Some Elements,"['Array', 'Sorting']",65.70%,Easy,11.2987%;,43.7K,66.5K,
1620,1620. Coordinate With Maximum Network Quality,"['Array', 'Enumeration']",37.70%,Medium,0%;,7.4K,19.7K,
1621,1621. Number of Sets of K Non-Overlapping Line Segments,"['Math', 'Dynamic Programming']",42.30%,Medium,26.2365%;,8.1K,19.2K,
1622,1622. Fancy Sequence,"['Math', 'Design', 'Segment Tree']",16.10%,Hard,29.8543%;,9.5K,58.9K,
1623,1623. All Valid Triplets That Can Represent a Country,['Database'],86.80%,Easy,0%;,16.8K,19.3K,Y
1624,1624. Largest Substring Between Two Equal Characters,"['Hash Table', 'String']",59.10%,Easy,19.1985%;,41K,69.4K,
1625,1625. Lexicographically Smallest String After Applying Operations,"['String', 'Breadth-First Search']",65.50%,Medium,31.2883%;,12.3K,18.7K,
1626,1626. Best Team With No Conflicts,"['Array', 'Dynamic Programming', 'Sorting']",51.10%,Medium,78.0943%;,70.2K,137.2K,
1627,1627. Graph Connectivity With Threshold,"['Array', 'Math', 'Union Find']",46.30%,Hard,36.5316%;,13.8K,29.9K,
1628,1628. Design an Expression Tree With Evaluate Function,"['Math', 'Stack', 'Tree', '2+']",82.80%,Medium,46.3401%;,24.1K,29.1K,Y
1629,1629. Slowest Key,"['Array', 'String']",59.20%,Easy,24.3125%;,88K,148.6K,
1630,1630. Arithmetic Subarrays,"['Array', 'Sorting']",80.30%,Medium,21.9148%;,48.8K,60.8K,
1631,1631. Path With Minimum Effort,"['Array', 'Binary Search', '5+']",55.60%,Medium,25.0527%;,141.1K,253.7K,
1632,1632. Rank Transform of a Matrix,"['Array', 'Greedy', 'Union Find', '3+']",40.90%,Hard,0%;,19.9K,48.6K,
1633,1633. Percentage of Users Attended a Contest,['Database'],66.90%,Easy,0%;,22.9K,34.2K,Y
1634,1634. Add Two Polynomials Represented as Linked Lists,"['Linked List', 'Math', 'Two Pointers']",54.40%,Medium,22.8064%;,8.7K,16K,Y
1635,1635. Hopper Company Queries I,['Database'],51.00%,Hard,0%;,6.7K,13.1K,Y
1636,1636. Sort Array by Increasing Frequency,"['Array', 'Hash Table', 'Sorting']",69.50%,Easy,60.1194%;,91.6K,131.8K,
1637,1637. Widest Vertical Area Between Two Points Containing No Points,"['Array', 'Sorting']",84.30%,Medium,25.2677%;,38.3K,45.4K,
1638,1638. Count Substrings That Differ by One Character,"['Hash Table', 'String', 'Dynamic Programming']",71.40%,Medium,27.875%;,23.9K,33.5K,
1639,1639. Number of Ways to Form a Target String Given a Dictionary,"['Array', 'String', 'Dynamic Programming']",43.20%,Hard,77.2982%;,10.4K,24.1K,
1640,1640. Check Array Formation Through Concatenation,"['Array', 'Hash Table']",56.20%,Easy,18.2526%;,74K,131.6K,
1641,1641. Count Sorted Vowel Strings,"['Math', 'Dynamic Programming', 'Combinatorics']",77.40%,Medium,39.0451%;,154.3K,199.4K,
1642,1642. Furthest Building You Can Reach,"['Array', 'Greedy', 'Heap (Priority Queue)']",48.30%,Medium,55.5162%;,112.4K,232.8K,
1643,1643. Kth Smallest Instructions,"['Array', 'Math', 'Dynamic Programming', '1+']",47.00%,Hard,44.195%;,9.9K,21K,
1644,1644. Lowest Common Ancestor of a Binary Tree II,"['Tree', 'Depth-First Search', 'Binary Tree']",59.90%,Medium,15.9149%;,56.5K,94.3K,Y
1645,1645. Hopper Company Queries II,['Database'],38.80%,Hard,0%;,5.1K,13.1K,Y
1646,1646. Get Maximum in Generated Array,"['Array', 'Dynamic Programming', 'Simulation']",50.20%,Easy,24.0725%;,84.2K,167.9K,
1647,1647. Minimum Deletions to Make Character Frequencies Unique,"['Hash Table', 'String', 'Greedy', '1+']",59.10%,Medium,65.1355%;,169.6K,286.9K,
1648,1648. Sell Diminishing-Valued Colored Balls,"['Array', 'Math', 'Binary Search', '3+']",30.40%,Medium,33.203%;,34.6K,113.6K,
1649,1649. Create Sorted Array through Instructions,"['Array', 'Binary Search', '5+']",37.30%,Hard,27.6804%;,22.3K,59.7K,
1650,1650. Lowest Common Ancestor of a Binary Tree III,"['Hash Table', 'Tree', 'Binary Tree']",77.40%,Medium,53.1801%;,157.5K,203.4K,Y
1651,1651. Hopper Company Queries III,['Database'],68.10%,Hard,0%;,5.2K,7.7K,Y
1652,1652. Defuse the Bomb,['Array'],62.20%,Easy,10.4515%;,30.3K,48.7K,
1653,1653. Minimum Deletions to Make String Balanced,"['String', 'Dynamic Programming', 'Stack']",59.10%,Medium,58.6663%;,33.6K,56.9K,
1654,1654. Minimum Jumps to Reach Home,"['Array', 'Dynamic Programming', '1+']",29.00%,Medium,51.8888%;,34.6K,119.3K,
1655,1655. Distribute Repeating Integers,"['Array', 'Dynamic Programming', '3+']",38.90%,Hard,17.3991%;,10.2K,26.2K,
1656,1656. Design an Ordered Stream,"['Array', 'Hash Table', 'Design', '1+']",85.20%,Easy,71.035%;,65.6K,76.9K,
1657,1657. Determine if Two Strings Are Close,"['Hash Table', 'String', 'Sorting']",56.30%,Medium,78.3131%;,105.3K,187K,
1658,1658. Minimum Operations to Reduce X to Zero,"['Array', 'Hash Table', 'Binary Search', '2+']",37.60%,Medium,18.0312%;,109.1K,290K,
1659,1659. Maximize Grid Happiness,"['Dynamic Programming', 'Bit Manipulation', '2+']",38.20%,Hard,31.2883%;,4.3K,11.2K,
1660,1660. Correct a Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",72.50%,Medium,31.2883%;,13.8K,19.1K,Y
1661,1661. Average Time of Process per Machine,['Database'],78.50%,Easy,0%;,20.1K,25.6K,Y
1662,1662. Check If Two String Arrays are Equivalent,"['Array', 'String']",83.40%,Easy,44.9601%;,265.1K,317.7K,
1663,1663. Smallest String With A Given Numeric Value,"['String', 'Greedy']",66.80%,Medium,14.9912%;,87.1K,130.4K,
1664,1664. Ways to Make a Fair Array,"['Array', 'Dynamic Programming']",63.40%,Medium,39.1453%;,30.1K,47.5K,
1665,1665. Minimum Initial Energy to Finish Tasks,"['Array', 'Greedy', 'Sorting']",56.30%,Hard,28.7601%;,14K,24.9K,
1666,1666. Change the Root of a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",73.10%,Medium,0%;,3.3K,4.5K,Y
1667,1667. Fix Names in a Table,['Database'],65.20%,Easy,20.0071%;,101.4K,155.4K,
1668,1668. Maximum Repeating Substring,"['String', 'String Matching']",39.50%,Easy,25.581%;,34K,86.1K,
1669,1669. Merge In Between Linked Lists,['Linked List'],73.80%,Medium,29.4541%;,68.7K,93.1K,
1670,1670. Design Front Middle Back Queue,"['Array', 'Linked List', 'Design', '2+']",57.30%,Medium,25.795%;,20.6K,35.9K,
1671,1671. Minimum Number of Removals to Make Mountain Array,"['Array', 'Binary Search', '2+']",42.40%,Hard,32.7945%;,20.7K,48.8K,
1672,1672. Richest Customer Wealth,"['Array', 'Matrix']",87.90%,Easy,71.1256%;,559.6K,636.5K,
1673,1673. Find the Most Competitive Subsequence,"['Array', 'Stack', 'Greedy', '1+']",49.30%,Medium,47.3848%;,51.1K,103.8K,
1674,1674. Minimum Moves to Make Array Complementary,"['Array', 'Hash Table', 'Prefix Sum']",38.60%,Medium,38.9364%;,7.3K,19K,
1675,1675. Minimize Deviation in Array,"['Array', 'Greedy', 'Heap (Priority Queue)', '1+']",54.70%,Hard,63.3547%;,87.5K,160.1K,
1676,1676. Lowest Common Ancestor of a Binary Tree IV,"['Tree', 'Depth-First Search', 'Binary Tree']",79.50%,Medium,0%;,28.3K,35.6K,Y
1677,1677. Product's Worth Over Invoices,['Database'],38.40%,Easy,0%;,14.1K,36.6K,Y
1678,1678. Goal Parser Interpretation,['String'],86.60%,Easy,23.8283%;,172.3K,199K,
1679,1679. Max Number of K-Sum Pairs,"['Array', 'Hash Table', 'Two Pointers', '1+']",57.30%,Medium,38.3606%;,121.6K,212.3K,
1680,1680. Concatenation of Consecutive Binary Numbers,"['Math', 'Bit Manipulation', 'Simulation']",57.00%,Medium,81.7243%;,86.8K,152.4K,
1681,1681. Minimum Incompatibility,"['Array', 'Dynamic Programming', '2+']",37.40%,Hard,0%;,6.7K,18K,
1682,1682. Longest Palindromic Subsequence II,"['String', 'Dynamic Programming']",49.50%,Medium,0%;,4.5K,9.1K,Y
1683,1683. Invalid Tweets,['Database'],90.70%,Easy,0%;,22.5K,24.8K,Y
1684,1684. Count the Number of Consistent Strings,"['Array', 'Hash Table', 'String', '1+']",82.20%,Easy,3.4596%;,124.5K,151.5K,
1685,1685. Sum of Absolute Differences in a Sorted Array,"['Array', 'Math', 'Prefix Sum']",63.70%,Medium,34.9041%;,26.6K,41.8K,
1686,1686. Stone Game VI,"['Array', 'Math', 'Greedy', '3+']",54.80%,Medium,46.6618%;,14.2K,25.9K,
1687,1687. Delivering Boxes from Storage to Ports,"['Array', 'Dynamic Programming', '4+']",38.70%,Hard,59.7914%;,5K,12.8K,
1688,1688. Count of Matches in Tournament,"['Math', 'Simulation']",83.20%,Easy,30.3787%;,94.7K,113.8K,
1689,1689. Partitioning Into Minimum Number Of Deci-Binary Numbers,"['String', 'Greedy']",89.20%,Medium,35.1281%;,169.3K,189.8K,
1690,1690. Stone Game VII,"['Array', 'Math', 'Dynamic Programming', '1+']",58.20%,Medium,18.2526%;,30.1K,51.7K,
1691,1691. Maximum Height by Stacking Cuboids,"['Array', 'Dynamic Programming', 'Sorting']",54.40%,Hard,38.8308%;,17.2K,31.6K,
1692,1692. Count Ways to Distribute Candies,['Dynamic Programming'],62.10%,Hard,28.4803%;,2.1K,3.3K,Y
1693,1693. Daily Leads and Partners,['Database'],88.40%,Easy,7.37732%;,72.7K,82.2K,
1694,1694. Reformat Phone Number,['String'],65.00%,Easy,0%;,30.3K,46.6K,
1695,1695. Maximum Erasure Value,"['Array', 'Hash Table', 'Sliding Window']",57.60%,Medium,27.4261%;,107.8K,187.3K,
1696,1696. Jump Game VI,"['Array', 'Dynamic Programming', 'Queue', '3+']",46.10%,Medium,63.8519%;,97.4K,211.5K,
1697,1697. Checking Existence of Edge Length Limited Paths,"['Array', 'Union Find', 'Graph', '1+']",50.80%,Hard,0%;,12.5K,24.5K,
1698,1698. Number of Distinct Substrings in a String,"['String', 'Trie', 'Rolling Hash', '2+']",63.50%,Medium,26.2365%;,7.9K,12.4K,Y
1699,1699. Number of Calls Between Two Persons,['Database'],83.10%,Medium,10.282%;,32.6K,39.2K,Y
1700,1700. Number of Students Unable to Eat Lunch,"['Array', 'Stack', 'Queue', '1+']",68.60%,Easy,26.8896%;,61.1K,89.1K,
1701,1701. Average Waiting Time,"['Array', 'Simulation']",62.60%,Medium,21.5888%;,23.7K,37.9K,
1702,1702. Maximum Binary String After Change,"['String', 'Greedy']",46.30%,Medium,60.8561%;,10.6K,22.9K,
1703,1703. Minimum Adjacent Swaps for K Consecutive Ones,"['Array', 'Greedy', 'Sliding Window', '1+']",42.30%,Hard,69.1268%;,8.2K,19.4K,
1704,1704. Determine if String Halves Are Alike,"['String', 'Counting']",77.80%,Easy,65.7873%;,185.8K,239K,
1705,1705. Maximum Number of Eaten Apples,"['Array', 'Greedy', 'Heap (Priority Queue)']",38.00%,Medium,48.2628%;,18.8K,49.5K,
1706,1706. Where Will the Ball Fall,"['Array', 'Dynamic Programming', '3+']",71.50%,Medium,66.21%;,124.9K,174.8K,
1707,1707. Maximum XOR With an Element From Array,"['Array', 'Bit Manipulation', 'Trie']",44.80%,Hard,14.6633%;,13.6K,30.4K,
1708,1708. Largest Subarray Length K,"['Array', 'Greedy']",63.90%,Easy,0%;,7.1K,11.1K,Y
1709,1709. Biggest Window Between Visits,['Database'],75.70%,Medium,9.59007%;,16.6K,21.9K,Y
1710,1710. Maximum Units on a Truck,"['Array', 'Greedy', 'Sorting']",73.80%,Easy,57.5151%;,262.1K,355.1K,
1711,1711. Count Good Meals,"['Array', 'Hash Table']",29.20%,Medium,8.61622%;,31.7K,108.4K,
1712,1712. Ways to Split Array Into Three Subarrays,"['Array', 'Two Pointers', 'Binary Search', '1+']",32.60%,Medium,35.2666%;,27.2K,83.4K,
1713,1713. Minimum Operations to Make a Subsequence,"['Array', 'Hash Table', 'Binary Search', '1+']",48.90%,Hard,37.38%;,9.2K,18.8K,
1714,1714. Sum Of Special Evenly-Spaced Elements In Array,"['Array', 'Dynamic Programming']",49.20%,Hard,0%;,1.1K,2.3K,Y
1715,1715. Count Apples and Oranges,['Database'],76.30%,Medium,0%;,12.1K,15.9K,Y
1716,1716. Calculate Money in Leetcode Bank,['Math'],66.10%,Easy,13.3173%;,38.6K,58.4K,
1717,1717. Maximum Score From Removing Substrings,"['String', 'Stack', 'Greedy']",46.20%,Medium,18.2526%;,12.1K,26.2K,
1718,1718. Construct the Lexicographically Largest Valid Sequence,"['Array', 'Backtracking']",51.90%,Medium,53.14%;,10.6K,20.4K,
1719,1719. Number Of Ways To Reconstruct A Tree,"['Tree', 'Graph']",43.60%,Hard,28.4803%;,3.4K,7.8K,
1720,1720. Decode XORed Array,"['Array', 'Bit Manipulation']",85.80%,Easy,34.011%;,107.7K,125.5K,
1721,1721. Swapping Nodes in a Linked List,"['Linked List', 'Two Pointers']",67.20%,Medium,52.4519%;,205.3K,305.5K,
1722,1722. Minimize Hamming Distance After Swap Operations,"['Array', 'Depth-First Search', 'Union Find']",48.70%,Medium,42.122%;,15.1K,31K,
1723,1723. Find Minimum Time to Finish All Jobs,"['Array', 'Dynamic Programming', '3+']",42.50%,Hard,57.662%;,20.3K,47.7K,
1724,1724. Checking Existence of Edge Length Limited Paths II,"['Union Find', 'Graph', 'Minimum Spanning Tree']",52.50%,Hard,0%;,2.3K,4.4K,Y
1725,1725. Number Of Rectangles That Can Form The Largest Square,['Array'],78.60%,Easy,5.49016%;,55K,70K,
1726,1726. Tuple with Same Product,"['Array', 'Hash Table']",60.80%,Medium,29.1201%;,23.1K,38K,
1727,1727. Largest Submatrix With Rearrangements,"['Array', 'Greedy', 'Sorting', '1+']",61.20%,Medium,46.6618%;,14.9K,24.3K,
1728,1728. Cat and Mouse II,"['Array', 'Math', 'Dynamic Programming', '5+']",39.90%,Hard,26.2365%;,5.7K,14.4K,
1729,1729. Find Followers Count,['Database'],71.20%,Easy,1.8465%;,60.2K,84.5K,
1730,1730. Shortest Path to Get Food,"['Array', 'Breadth-First Search', 'Matrix']",54.10%,Medium,47.9636%;,52.6K,97.3K,Y
1731,1731. The Number of Employees Which Report to Each Employee,['Database'],49.50%,Easy,12.7041%;,18.1K,36.7K,Y
1732,1732. Find the Highest Altitude,"['Array', 'Prefix Sum']",78.90%,Easy,26.0135%;,107.6K,136.4K,
1733,1733. Minimum Number of People to Teach,"['Array', 'Greedy']",41.90%,Medium,28.4803%;,7.4K,17.7K,
1734,1734. Decode XORed Permutation,"['Array', 'Bit Manipulation']",63.00%,Medium,0%;,12K,19.1K,
1735,1735. Count Ways to Make Array With Product,"['Array', 'Math', 'Dynamic Programming', '2+']",50.30%,Hard,0%;,4.5K,8.9K,
1736,1736. Latest Time by Replacing Hidden Digits,"['String', 'Greedy']",42.40%,Easy,0%;,28.3K,66.7K,
1737,1737. Change Minimum Characters to Satisfy One of Three Conditions,"['Hash Table', 'String', 'Counting', '1+']",35.30%,Medium,0%;,11.4K,32.2K,
1738,1738. Find Kth Largest XOR Coordinate Value,"['Array', 'Divide and Conquer', '5+']",61.00%,Medium,0%;,18.3K,30K,
1739,1739. Building Boxes,"['Math', 'Binary Search', 'Greedy']",52.00%,Hard,0%;,5.9K,11.3K,
1740,1740. Find Distance in a Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",69.10%,Medium,53.14%;,18.1K,26.1K,Y
1741,1741. Find Total Time Spent by Each Employee,['Database'],89.80%,Easy,32.3955%;,78.9K,87.8K,
1742,1742. Maximum Number of Balls in a Box,"['Hash Table', 'Math', 'Counting']",73.70%,Easy,0%;,50.3K,68.3K,
1743,1743. Restore the Array From Adjacent Pairs,"['Array', 'Hash Table']",68.60%,Medium,50.2757%;,34.1K,49.8K,
1744,1744. Can You Eat Your Favorite Candy on Your Favorite Day?,"['Array', 'Prefix Sum']",33.00%,Medium,24.3803%;,9K,27.2K,
1745,1745. Palindrome Partitioning IV,"['String', 'Dynamic Programming']",45.40%,Hard,0%;,19.4K,42.6K,
1746,1746. Maximum Subarray Sum After One Operation,"['Array', 'Dynamic Programming']",62.20%,Medium,0%;,8K,12.9K,Y
1747,1747. Leetflex Banned Accounts,['Database'],67.20%,Medium,15.8399%;,14.9K,22.1K,Y
1748,1748. Sum of Unique Elements,"['Array', 'Hash Table', 'Counting']",76.20%,Easy,33.707%;,111.3K,146.1K,
1749,1749. Maximum Absolute Sum of Any Subarray,"['Array', 'Dynamic Programming']",58.40%,Medium,21.5888%;,30.2K,51.7K,
1750,1750. Minimum Length of String After Deleting Similar Ends,"['Two Pointers', 'String']",43.90%,Medium,29.7983%;,18.3K,41.7K,
1751,1751. Maximum Number of Events That Can Be Attended II,"['Array', 'Binary Search', 'Dynamic Programming']",56.90%,Hard,27.3012%;,21K,37K,
1752,1752. Check if Array Is Sorted and Rotated,['Array'],50.00%,Easy,59.6539%;,80.8K,161.5K,
1753,1753. Maximum Score From Removing Stones,"['Math', 'Greedy', 'Heap (Priority Queue)']",66.60%,Medium,14.4731%;,30.3K,45.6K,
1754,1754. Largest Merge Of Two Strings,"['Two Pointers', 'String', 'Greedy']",45.80%,Medium,17.3991%;,17.8K,38.8K,
1755,1755. Closest Subsequence Sum,"['Array', 'Two Pointers', '3+']",36.70%,Hard,29.9546%;,11.8K,32.1K,
1756,1756. Design Most Recently Used Queue,"['Array', 'Hash Table', 'Stack', '3+']",78.50%,Medium,34.82%;,8.9K,11.4K,Y
1757,1757. Recyclable and Low Fat Products,['Database'],92.60%,Easy,44.5657%;,295K,318.4K,
1758,1758. Minimum Changes To Make Alternating Binary String,['String'],58.30%,Easy,37.6761%;,34K,58.2K,
1759,1759. Count Number of Homogenous Substrings,"['Math', 'String']",48.40%,Medium,27.3012%;,24.4K,50.4K,
1760,1760. Minimum Limit of Balls in a Bag,"['Array', 'Binary Search']",60.40%,Medium,31.5509%;,29.9K,49.4K,
1761,1761. Minimum Degree of a Connected Trio in a Graph,['Graph'],41.60%,Hard,40.3369%;,19.3K,46.5K,
1762,1762. Buildings With an Ocean View,"['Array', 'Stack', 'Monotonic Stack']",79.10%,Medium,68.9226%;,139.9K,176.8K,Y
1763,1763. Longest Nice Substring,"['Hash Table', 'String', 'Divide and Conquer', '2+']",61.60%,Easy,34.6501%;,36.8K,59.6K,
1764,1764. Form Array by Concatenating Subarrays of Another Array,"['Array', 'Greedy', 'String Matching']",52.90%,Medium,0%;,12.6K,23.7K,
1765,1765. Map of Highest Peak,"['Array', 'Breadth-First Search', 'Matrix']",60.20%,Medium,17.3991%;,20.5K,34.1K,
1766,1766. Tree of Coprimes,"['Math', 'Tree', 'Depth-First Search', '1+']",39.40%,Hard,0%;,7.3K,18.5K,
1767,1767. Find the Subtasks That Did Not Execute,['Database'],81.50%,Hard,0%;,8K,9.8K,Y
1768,1768. Merge Strings Alternately,"['Two Pointers', 'String']",77.30%,Easy,10.1971%;,95.5K,123.5K,
1769,1769. Minimum Number of Operations to Move All Balls to Each Box,"['Array', 'String']",85.10%,Medium,31.7693%;,98.1K,115.2K,
1770,1770. Maximum Score from Performing Multiplication Operations,"['Array', 'Dynamic Programming']",37.40%,Hard,59.3355%;,92.1K,246.5K,
1771,1771. Maximize Palindrome Length From Subsequences,"['String', 'Dynamic Programming']",35.30%,Hard,0%;,9.1K,25.7K,
1772,1772. Sort Features by Popularity,"['Array', 'Hash Table', 'String', '1+']",65.10%,Medium,0%;,4.9K,7.5K,Y
1773,1773. Count Items Matching a Rule,"['Array', 'String']",84.40%,Easy,35.9288%;,150.5K,178.3K,
1774,1774. Closest Dessert Cost,"['Array', 'Dynamic Programming', 'Backtracking']",47.40%,Medium,41.9109%;,24.6K,51.8K,
1775,1775. Equal Sum Arrays With Minimum Number of Operations,"['Array', 'Hash Table', 'Greedy', '1+']",53.00%,Medium,54.9864%;,24.3K,45.7K,
1776,1776. Car Fleet II,"['Array', 'Math', 'Stack', '2+']",53.50%,Hard,38.7718%;,21.6K,40.3K,
1777,1777. Product's Price for Each Store,['Database'],84.20%,Easy,12.232%;,16.4K,19.4K,Y
1778,1778. Shortest Path in a Hidden Grid,"['Depth-First Search', 'Breadth-First Search', '2+']",39.10%,Medium,0%;,4.6K,11.8K,Y
1779,1779. Find Nearest Point That Has the Same X or Y Coordinate,['Array'],67.30%,Easy,25.4545%;,93.5K,139K,
1780,1780. Check if Number is a Sum of Powers of Three,['Math'],65.80%,Medium,29.8543%;,31.6K,48K,
1781,1781. Sum of Beauty of All Substrings,"['Hash Table', 'String', 'Counting']",60.80%,Medium,30.2937%;,19.9K,32.7K,
1782,1782. Count Pairs Of Nodes,"['Two Pointers', 'Binary Search', 'Graph']",38.50%,Hard,0%;,5.4K,14K,
1783,1783. Grand Slam Titles,['Database'],86.80%,Medium,11.1044%;,18.2K,20.9K,Y
1784,1784. Check if Binary String Has at Most One Segment of Ones,['String'],40.10%,Easy,6.21537%;,32.2K,80.3K,
1785,1785. Minimum Elements to Add to Form a Given Sum,"['Array', 'Greedy']",42.60%,Medium,0%;,17.4K,40.8K,
1786,1786. Number of Restricted Paths From First to Last Node,"['Dynamic Programming', 'Graph', '3+']",39.30%,Medium,22.8064%;,18K,45.9K,
1787,1787. Make the XOR of All Segments Equal to Zero,"['Array', 'Dynamic Programming', '1+']",39.40%,Hard,40.3369%;,4.3K,11K,
1788,1788. Maximize the Beauty of the Garden,"['Array', 'Greedy', 'Prefix Sum']",66.60%,Hard,0%;,1.8K,2.6K,Y
1789,1789. Primary Department for Each Employee,['Database'],79.30%,Easy,11.4586%;,15.2K,19.2K,Y
1790,1790. Check if One String Swap Can Make Strings Equal,"['Hash Table', 'String', 'Counting']",45.40%,Easy,22.7347%;,81.3K,179.2K,
1791,1791. Find Center of Star Graph,['Graph'],83.50%,Easy,23.1776%;,129.6K,155.1K,
1792,1792. Maximum Average Pass Ratio,"['Array', 'Greedy', 'Heap (Priority Queue)']",52.30%,Medium,0%;,18.7K,35.8K,
1793,1793. Maximum Score of a Good Subarray,"['Array', 'Two Pointers', 'Binary Search', '2+']",53.50%,Hard,43.7048%;,19.4K,36.3K,
1794,1794. Count Pairs of Equal Substrings With Minimum Difference,"['Hash Table', 'String', 'Greedy']",65.00%,Medium,0%;,1.6K,2.4K,Y
1795,1795. Rearrange Products Table,['Database'],86.90%,Easy,37.6061%;,80.3K,92.4K,
1796,1796. Second Largest Digit in a String,"['Hash Table', 'String']",49.30%,Easy,25.795%;,38.1K,77.2K,
1797,1797. Design Authentication Manager,"['Hash Table', 'Design']",56.90%,Medium,27.3012%;,16.4K,28.8K,
1798,1798. Maximum Number of Consecutive Values You Can Make,"['Array', 'Greedy']",55.90%,Medium,0%;,13.4K,24K,
1799,1799. Maximize Score After N Operations,"['Array', 'Math', 'Dynamic Programming', '4+']",46.00%,Hard,46.3401%;,15.9K,34.5K,
1800,1800. Maximum Ascending Subarray Sum,['Array'],63.20%,Easy,6.48922%;,41.2K,65.2K,
1801,1801. Number of Orders in the Backlog,"['Array', 'Heap (Priority Queue)', 'Simulation']",48.30%,Medium,61.3214%;,15.9K,33K,
1802,1802. Maximum Value at a Given Index in a Bounded Array,"['Binary Search', 'Greedy']",32.40%,Medium,30.5193%;,15.9K,49.2K,
1803,1803. Count Pairs With XOR in a Range,"['Array', 'Bit Manipulation', 'Trie']",47.00%,Hard,44.195%;,6K,12.7K,
1804,1804. Implement Trie II (Prefix Tree),"['Hash Table', 'String', 'Design', '1+']",59.70%,Medium,22.8064%;,11.6K,19.4K,Y
1805,1805. Number of Different Integers in a String,"['Hash Table', 'String']",36.60%,Easy,17.1984%;,35.8K,97.9K,
1806,1806. Minimum Number of Operations to Reinitialize a Permutation,"['Array', 'Math', 'Simulation']",72.00%,Medium,0%;,15.8K,21.9K,
1807,1807. Evaluate the Bracket Pairs of a String,"['Array', 'Hash Table', 'String']",66.60%,Medium,18.6606%;,24.4K,36.6K,
1808,1808. Maximize Number of Nice Divisors,"['Math', 'Recursion']",31.70%,Hard,24.3803%;,5.5K,17.2K,
1809,1809. Ad-Free Sessions,['Database'],59.00%,Easy,0%;,12.7K,21.5K,Y
1810,1810. Minimum Path Cost in a Hidden Grid,"['Depth-First Search', 'Breadth-First Search', '3+']",54.50%,Medium,0%;,2.3K,4.3K,Y
1811,1811. Find Interview Candidates,['Database'],63.50%,Medium,0%;,12.3K,19.3K,Y
1812,1812. Determine Color of a Chessboard Square,"['Math', 'String']",77.70%,Easy,2.78525%;,55.4K,71.3K,
1813,1813. Sentence Similarity III,"['Array', 'Two Pointers', 'String']",33.30%,Medium,25.795%;,13K,39K,
1814,1814. Count Nice Pairs in an Array,"['Array', 'Hash Table', 'Math', '1+']",42.00%,Medium,39.5461%;,23.9K,56.9K,
1815,1815. Maximum Number of Groups Getting Fresh Donuts,"['Array', 'Dynamic Programming', '3+']",40.10%,Hard,40.3369%;,5.4K,13.4K,
1816,1816. Truncate Sentence,"['Array', 'String']",82.90%,Easy,5.5457%;,98.2K,118.4K,
1817,1817. Finding the Users Active Minutes,"['Array', 'Hash Table']",80.40%,Medium,31.6472%;,46K,57.2K,
1818,1818. Minimum Absolute Sum Difference,"['Array', 'Binary Search', 'Sorting', '1+']",30.30%,Medium,15.5467%;,20.4K,67.3K,
1819,1819. Number of Different Subsequences GCDs,"['Array', 'Math', 'Counting', '1+']",39.10%,Hard,31.2883%;,7.3K,18.6K,
1820,1820. Maximum Number of Accepted Invitations,"['Array', 'Backtracking', 'Matrix']",49.40%,Medium,0%;,5.2K,10.6K,Y
1821,1821. Find Customers With Positive Revenue this Year,['Database'],89.10%,Easy,13.1068%;,14.2K,16K,Y
1822,1822. Sign of the Product of an Array,"['Array', 'Math']",65.20%,Easy,13.6611%;,161.7K,247.9K,
1823,1823. Find the Winner of the Circular Game,"['Array', 'Math', 'Recursion', '2+']",78.20%,Medium,62.0739%;,86.9K,111.2K,
1824,1824. Minimum Sideway Jumps,"['Array', 'Dynamic Programming', 'Greedy']",49.40%,Medium,14.9912%;,26.4K,53.4K,
1825,1825. Finding MK Average,"['Design', 'Queue', 'Heap (Priority Queue)', '2+']",35.60%,Hard,28.7601%;,10.1K,28.3K,
1826,1826. Faulty Sensor,"['Array', 'Two Pointers']",49.80%,Easy,0%;,3.5K,7.1K,Y
1827,1827. Minimum Operations to Make the Array Increasing,"['Array', 'Greedy']",78.30%,Easy,22.5712%;,64.2K,82K,
1828,1828. Queries on Number of Points Inside a Circle,"['Array', 'Math', 'Geometry']",86.30%,Medium,20.3451%;,57.9K,67.1K,
1829,1829. Maximum XOR for Each Query,"['Array', 'Bit Manipulation', 'Prefix Sum']",76.80%,Medium,15.5467%;,22.1K,28.7K,
1830,1830. Minimum Number of Operations to Make String Sorted,"['Math', 'String', 'Combinatorics']",49.10%,Hard,24.3803%;,3K,6.1K,
1831,1831. Maximum Transaction Each Day,['Database'],83.10%,Medium,0%;,12.6K,15.2K,Y
1832,1832. Check if the Sentence Is Pangram,"['Hash Table', 'String']",83.60%,Easy,55.2217%;,221K,264.5K,
1833,1833. Maximum Ice Cream Bars,"['Array', 'Greedy', 'Sorting']",74.00%,Medium,78.0253%;,137.9K,186.4K,
1834,1834. Single-Threaded CPU,"['Array', 'Sorting', 'Heap (Priority Queue)']",45.80%,Medium,82.3227%;,86.3K,188.7K,
1835,1835. Find XOR Sum of All Pairs Bitwise AND,"['Array', 'Math', 'Bit Manipulation']",60.80%,Hard,50.581%;,14.7K,24.1K,
1836,1836. Remove Duplicates From an Unsorted Linked List,"['Hash Table', 'Linked List']",70.50%,Medium,49.203%;,22.9K,32.5K,Y
1837,1837. Sum of Digits in Base K,['Math'],77.00%,Easy,21.0977%;,38.6K,50.1K,
1838,1838. Frequency of the Most Frequent Element,"['Array', 'Binary Search', 'Greedy', '3+']",39.20%,Medium,42.3985%;,40K,102.1K,
1839,1839. Longest Substring Of All Vowels in Order,"['String', 'Sliding Window']",48.60%,Medium,25.1653%;,24.1K,49.6K,
1840,1840. Maximum Building Height,"['Array', 'Math']",35.50%,Hard,37.38%;,6K,17K,
1841,1841. League Statistics,['Database'],55.30%,Medium,20.0096%;,10.7K,19.4K,Y
1842,1842. Next Palindrome Using Same Digits,"['Two Pointers', 'String']",53.10%,Hard,60.8561%;,4.8K,9K,Y
1843,1843. Suspicious Bank Accounts,['Database'],47.20%,Medium,0%;,8.2K,17.5K,Y
1844,1844. Replace All Digits with Characters,['String'],80.20%,Easy,11.4586%;,59.1K,73.7K,
1845,1845. Seat Reservation Manager,"['Design', 'Heap (Priority Queue)']",65.60%,Medium,15.4217%;,30.6K,46.6K,
1846,1846. Maximum Element After Decreasing and Rearranging,"['Array', 'Greedy', 'Sorting']",58.90%,Medium,24.193%;,18.9K,32.1K,
1847,1847. Closest Room,"['Array', 'Binary Search', 'Sorting']",35.60%,Hard,0%;,7K,19.7K,
1848,1848. Minimum Distance to the Target Element,['Array'],57.80%,Easy,15.5467%;,33.1K,57.2K,
1849,1849. Splitting a String Into Descending Consecutive Values,"['String', 'Backtracking']",33.10%,Medium,0%;,18.8K,56.8K,
1850,1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number,"['Two Pointers', 'String', 'Greedy']",71.80%,Medium,24.9635%;,17.5K,24.4K,
1851,1851. Minimum Interval to Include Each Query,"['Array', 'Binary Search', 'Line Sweep', '2+']",48.20%,Hard,34.4617%;,16.1K,33.3K,
1852,1852. Distinct Numbers in Each Subarray,"['Array', 'Hash Table', 'Sliding Window']",71.20%,Medium,36.5316%;,5.6K,7.8K,Y
1853,1853. Convert Date Format,['Database'],86.70%,Easy,0%;,10.1K,11.7K,Y
1854,1854. Maximum Population Year,"['Array', 'Counting']",60.00%,Easy,49.4876%;,46.9K,78.2K,
1855,1855. Maximum Distance Between a Pair of Values,"['Array', 'Two Pointers', 'Binary Search', '1+']",53.10%,Medium,3.40729%;,40.1K,75.5K,
1856,1856. Maximum Subarray Min-Product,"['Array', 'Stack', 'Monotonic Stack', '1+']",37.90%,Medium,36.8023%;,20.4K,53.9K,
1857,1857. Largest Color Value in a Directed Graph,"['Hash Table', 'Dynamic Programming', '4+']",40.80%,Hard,34.9923%;,14.9K,36.6K,
1858,1858. Longest Word With All Prefixes,"['Depth-First Search', 'Trie']",67.20%,Medium,0%;,5.9K,8.7K,Y
1859,1859. Sorting the Sentence,"['String', 'Sorting']",84.10%,Easy,22.1788%;,108.8K,129.4K,
1860,1860. Incremental Memory Leak,['Simulation'],71.60%,Medium,17.3991%;,15.4K,21.5K,
1861,1861. Rotating the Box,"['Array', 'Two Pointers', 'Matrix']",65.30%,Medium,50.7931%;,39.8K,60.9K,
1862,1862. Sum of Floored Pairs,"['Array', 'Math', 'Binary Search', '1+']",28.10%,Hard,19.1985%;,7.4K,26.3K,
1863,1863. Sum of All Subset XOR Totals,"['Array', 'Math', 'Backtracking', '2+']",80.00%,Easy,28.3885%;,51.6K,64.5K,
1864,1864. Minimum Number of Swaps to Make the Binary String Alternating,"['String', 'Greedy']",42.80%,Medium,37.0907%;,22.2K,51.8K,
1865,1865. Finding Pairs With a Certain Sum,"['Array', 'Hash Table', 'Design']",50.30%,Medium,62.4301%;,20.1K,39.9K,
1866,1866. Number of Ways to Rearrange Sticks With K Sticks Visible,"['Math', 'Dynamic Programming', 'Combinatorics']",55.60%,Hard,22.8064%;,10.7K,19.3K,
1867,1867. Orders With Maximum Quantity Above Average,['Database'],73.80%,Medium,0%;,12.8K,17.3K,Y
1868,1868. Product of Two Run-Length Encoded Arrays,"['Array', 'Two Pointers']",57.70%,Medium,24.3803%;,25.7K,44.4K,Y
1869,1869. Longer Contiguous Segments of Ones than Zeros,['String'],60.30%,Easy,8.61622%;,37.3K,61.9K,
1870,1870. Minimum Speed to Arrive on Time,"['Array', 'Binary Search']",38.40%,Medium,17.0023%;,27.8K,72.3K,
1871,1871. Jump Game VII,"['Two Pointers', 'String', 'Prefix Sum']",25.10%,Medium,32.1117%;,33.7K,134.3K,
1872,1872. Stone Game VIII,"['Array', 'Math', 'Dynamic Programming', '2+']",52.70%,Hard,0%;,7.2K,13.7K,
1873,1873. Calculate Special Bonus,['Database'],59.80%,Easy,37.3163%;,155.2K,259.5K,
1874,1874. Minimize Product Sum of Two Arrays,"['Array', 'Greedy', 'Sorting']",90.10%,Medium,0%;,16K,17.8K,Y
1875,1875. Group Employees of the Same Salary,['Database'],73.20%,Medium,9.86312%;,8.7K,12K,Y
1876,1876. Substrings of Size Three with Distinct Characters,"['Hash Table', 'String', 'Sliding Window', '1+']",71.10%,Easy,17.4824%;,73.3K,103K,
1877,1877. Minimize Maximum Pair Sum in Array,"['Array', 'Two Pointers', 'Greedy', '1+']",79.90%,Medium,41.2977%;,70.1K,87.7K,
1878,1878. Get Biggest Three Rhombus Sums in a Grid,"['Array', 'Math', 'Sorting', '3+']",47.10%,Medium,22.8064%;,12.4K,26.3K,
1879,1879. Minimum XOR Sum of Two Arrays,"['Array', 'Dynamic Programming', '2+']",45.00%,Hard,31.2883%;,10.4K,23.1K,
1880,1880. Check if Word Equals Summation of Two Words,['String'],73.90%,Easy,15.7471%;,50.9K,68.8K,
1881,1881. Maximum Value after Insertion,"['String', 'Greedy']",36.80%,Medium,24.193%;,22.8K,61.8K,
1882,1882. Process Tasks Using Servers,"['Array', 'Heap (Priority Queue)']",39.50%,Medium,27.3012%;,24.8K,62.9K,
1883,1883. Minimum Skips to Arrive at Meeting On Time,"['Array', 'Dynamic Programming']",38.30%,Hard,0%;,5.5K,14.4K,
1884,1884. Egg Drop With 2 Eggs and N Floors,"['Math', 'Dynamic Programming']",70.80%,Medium,54.7449%;,33.2K,46.9K,
1885,1885. Count Pairs in Two Arrays,"['Array', 'Binary Search', 'Sorting']",59.40%,Medium,0%;,4.4K,7.5K,Y
1886,1886. Determine Whether Matrix Can Be Obtained By Rotation,"['Array', 'Matrix']",55.70%,Easy,25.991%;,51.2K,91.9K,
1887,1887. Reduction Operations to Make the Array Elements Equal,"['Array', 'Sorting']",62.50%,Medium,22.8064%;,20.9K,33.4K,
1888,1888. Minimum Number of Flips to Make the Binary String Alternating,"['String', 'Dynamic Programming', 'Greedy', '1+']",38.80%,Medium,24.868%;,17.9K,46.2K,
1889,1889. Minimum Space Wasted From Packaging,"['Array', 'Binary Search', 'Sorting', '1+']",31.20%,Hard,36.272%;,10.2K,32.6K,
1890,1890. The Latest Login in 2020,['Database'],78.90%,Easy,5.71733%;,53.8K,68.1K,
1891,1891. Cutting Ribbons,"['Array', 'Binary Search']",48.30%,Medium,27.875%;,50.6K,104.8K,Y
1892,1892. Page Recommendations II,['Database'],43.60%,Hard,0%;,5.1K,11.7K,Y
1893,1893. Check if All the Integers in a Range Are Covered,"['Array', 'Hash Table', 'Prefix Sum']",50.40%,Easy,29.0472%;,30.6K,60.6K,
1894,1894. Find the Student that Will Replace the Chalk,"['Array', 'Binary Search', 'Simulation', '1+']",44.30%,Medium,6.48922%;,28.7K,64.6K,
1895,1895. Largest Magic Square,"['Array', 'Matrix', 'Prefix Sum']",52.00%,Medium,45.7869%;,9K,17.4K,
1896,1896. Minimum Cost to Change the Final Value of Expression,"['Math', 'String', 'Dynamic Programming', '1+']",54.70%,Hard,0%;,3.3K,6K,
1897,1897. Redistribute Characters to Make All Strings Equal,"['Hash Table', 'String', 'Counting']",59.60%,Easy,0%;,28.2K,47.3K,
1898,1898. Maximum Number of Removable Characters,"['Array', 'String', 'Binary Search']",40.50%,Medium,25.2677%;,21.2K,52.3K,
1899,1899. Merge Triplets to Form Target Triplet,"['Array', 'Greedy']",64.60%,Medium,23.7854%;,28.8K,44.6K,
1900,1900. The Earliest and Latest Rounds Where Players Compete,"['Dynamic Programming', 'Memoization']",51.70%,Hard,0%;,4.6K,9K,
1901,1901. Find a Peak Element II,"['Array', 'Binary Search', 'Matrix']",52.40%,Medium,30.6765%;,35.6K,67.9K,
1902,1902. Depth of BST Given Insertion Order,"['Tree', 'Binary Search Tree', 'Binary Tree', '1+']",44.50%,Medium,0%;,1.8K,4.1K,Y
1903,1903. Largest Odd Number in String,"['Math', 'String', 'Greedy']",56.00%,Easy,22.7157%;,54.5K,97.3K,
1904,1904. The Number of Full Rounds You Have Played,"['Math', 'String']",44.90%,Medium,34.5195%;,18.7K,41.8K,
1905,1905. Count Sub Islands,"['Array', 'Depth-First Search', '3+']",67.60%,Medium,26.1105%;,63.9K,94.5K,
1906,1906. Minimum Absolute Difference Queries,"['Array', 'Hash Table']",43.90%,Medium,45.7869%;,9.4K,21.3K,
1907,1907. Count Salary Categories,['Database'],63.50%,Medium,0%;,8.2K,12.8K,Y
1908,1908. Game of Nim,"['Array', 'Math', 'Dynamic Programming', '3+']",64.60%,Medium,36.5316%;,3.9K,6K,Y
1909,1909. Remove One Element to Make the Array Strictly Increasing,['Array'],26.00%,Easy,48.3079%;,44.4K,170.4K,
1910,1910. Remove All Occurrences of a Substring,['String'],74.50%,Medium,45.8793%;,56.4K,75.7K,
1911,1911. Maximum Alternating Subsequence Sum,"['Array', 'Dynamic Programming']",59.30%,Medium,34.9923%;,23.8K,40.1K,
1912,1912. Design Movie Rental System,"['Array', 'Hash Table', 'Design', '2+']",39.90%,Hard,34.9923%;,4.9K,12.3K,
1913,1913. Maximum Product Difference Between Two Pairs,"['Array', 'Sorting']",81.30%,Easy,32.5913%;,80.7K,99.3K,
1914,1914. Cyclically Rotating a Grid,"['Array', 'Matrix', 'Simulation']",48.40%,Medium,37.38%;,10.8K,22.3K,
1915,1915. Number of Wonderful Substrings,"['Hash Table', 'String', 'Bit Manipulation', '1+']",45.30%,Medium,33.9534%;,10.8K,23.9K,
1916,1916. Count Ways to Build Rooms in an Ant Colony,"['Math', 'Dynamic Programming', 'Tree', '3+']",49.40%,Hard,65.7392%;,5.3K,10.8K,
1917,1917. Leetcodify Friends Recommendations,['Database'],28.20%,Hard,0%;,4.7K,16.8K,Y
1918,1918. Kth Smallest Subarray Sum,"['Array', 'Binary Search', 'Sliding Window']",52.60%,Medium,41.9109%;,3.2K,6.1K,Y
1919,1919. Leetcodify Similar Friends,['Database'],43.00%,Hard,0%;,4K,9.3K,Y
1920,1920. Build Array from Permutation,"['Array', 'Simulation']",90.30%,Easy,58.3558%;,312.1K,345.7K,
1921,1921. Eliminate Maximum Number of Monsters,"['Array', 'Greedy', 'Sorting']",37.30%,Medium,22.3505%;,21.4K,57.3K,
1922,1922. Count Good Numbers,"['Math', 'Recursion']",39.80%,Medium,49.429%;,24.6K,61.8K,
1923,1923. Longest Common Subpath,"['Array', 'Binary Search', 'Rolling Hash', '2+']",27.60%,Hard,55.821%;,6K,21.8K,
1924,1924. Erect the Fence II,"['Array', 'Math', 'Geometry']",53.10%,Hard,0%;,558,1.1K,Y
1925,1925. Count Square Sum Triples,"['Math', 'Enumeration']",68.00%,Easy,10.6971%;,31.6K,46.4K,
1926,1926. Nearest Exit from Entrance in Maze,"['Array', 'Breadth-First Search', 'Matrix']",48.80%,Medium,62.03%;,76.2K,156.2K,
1927,1927. Sum Game,"['Math', 'Greedy', 'Game Theory']",46.80%,Medium,27.6804%;,8.4K,18K,
1928,1928. Minimum Cost to Reach Destination in Time,"['Dynamic Programming', 'Graph']",37.80%,Hard,0%;,14.3K,37.9K,
1929,1929. Concatenation of Array,['Array'],90.20%,Easy,56.1632%;,382.3K,423.6K,
1930,1930. Unique Length-3 Palindromic Subsequences,"['Hash Table', 'String', 'Prefix Sum']",52.00%,Medium,32.0173%;,22.9K,44.1K,
1931,1931. Painting a Grid With Three Different Colors,['Dynamic Programming'],57.10%,Hard,0%;,7.5K,13.2K,
1932,1932. Merge BSTs to Create Single BST,"['Hash Table', 'Binary Search', 'Tree', '2+']",35.50%,Hard,55.5428%;,6.3K,17.8K,
1933,1933. Check if String Is Decomposable Into Value-Equal Substrings,['String'],50.60%,Easy,0%;,2.9K,5.8K,Y
1934,1934. Confirmation Rate,['Database'],76.20%,Medium,20.0096%;,9.9K,13K,Y
1935,1935. Maximum Number of Words You Can Type,"['Hash Table', 'String']",71.50%,Easy,0%;,42.1K,58.9K,
1936,1936. Add Minimum Number of Rungs,"['Array', 'Greedy']",42.70%,Medium,0%;,22.7K,53.2K,
1937,1937. Maximum Number of Points with Cost,"['Array', 'Dynamic Programming']",36.10%,Medium,52.0844%;,53.8K,149K,
1938,1938. Maximum Genetic Difference Query,"['Array', 'Bit Manipulation', 'Trie']",39.60%,Hard,40.3369%;,4.2K,10.7K,
1939,1939. Users That Actively Request Confirmation Messages,['Database'],59.30%,Easy,14.6633%;,8.1K,13.7K,Y
1940,1940. Longest Common Subsequence Between Sorted Arrays,"['Array', 'Hash Table', 'Counting']",79.00%,Medium,0%;,5K,6.4K,Y
1941,1941. Check if All Characters Have Equal Number of Occurrences,"['Hash Table', 'String', 'Counting']",76.80%,Easy,20.4864%;,59.6K,77.6K,
1942,1942. The Number of the Smallest Unoccupied Chair,"['Array', 'Heap (Priority Queue)', 'Ordered Set']",40.60%,Medium,26.2365%;,13.9K,34.1K,
1943,1943. Describe the Painting,"['Array', 'Prefix Sum']",48.20%,Medium,0%;,9.9K,20.5K,
1944,1944. Number of Visible People in a Queue,"['Array', 'Stack', 'Monotonic Stack']",69.10%,Hard,51.5861%;,32.3K,46.7K,
1945,1945. Sum of Digits of String After Convert,"['String', 'Simulation']",61.40%,Easy,27.4261%;,38.5K,62.7K,
1946,1946. Largest Number After Mutating Substring,"['Array', 'String', 'Greedy']",34.90%,Medium,0%;,17.1K,48.9K,
1947,1947. Maximum Compatibility Score Sum,"['Array', 'Dynamic Programming', '3+']",61.00%,Medium,28.4803%;,19.1K,31.3K,
1948,1948. Delete Duplicate Folders in System,"['Array', 'Hash Table', 'String', '2+']",56.60%,Hard,46.6618%;,7.1K,12.5K,
1949,1949. Strong Friendship,['Database'],56.50%,Medium,0%;,8.9K,15.7K,Y
1950,1950. Maximum of Minimum Values in All Subarrays,"['Array', 'Stack', 'Monotonic Stack']",49.80%,Medium,0%;,2.4K,4.9K,Y
1951,1951. All the Pairs With the Maximum Number of Common Followers,['Database'],70.90%,Medium,10.7692%;,8.7K,12.2K,Y
1952,1952. Three Divisors,['Math'],58.10%,Easy,13.8435%;,42.5K,73.2K,
1953,1953. Maximum Number of Weeks for Which You Can Work,"['Array', 'Greedy']",39.40%,Medium,10.4515%;,18.9K,48.1K,
1954,1954. Minimum Garden Perimeter to Collect Enough Apples,"['Math', 'Binary Search']",53.30%,Medium,19.1985%;,13.6K,25.4K,
1955,1955. Count Number of Special Subsequences,"['Array', 'Dynamic Programming']",51.00%,Hard,21.4467%;,9.3K,18.2K,
1956,1956. Minimum Time For K Virus Variants to Spread,"['Array', 'Math', 'Binary Search', '2+']",48.00%,Hard,0%;,696,1.4K,Y
1957,1957. Delete Characters to Make Fancy String,['String'],57.00%,Easy,14.9912%;,26.7K,46.9K,
1958,1958. Check if Move is Legal,"['Array', 'Matrix', 'Enumeration']",45.40%,Medium,42.0456%;,8.9K,19.7K,
1959,1959. Minimum Total Space Wasted With K Resizing Operations,"['Array', 'Dynamic Programming']",42.30%,Medium,22.8064%;,6.8K,16K,
1960,1960. Maximum Product of the Length of Two Palindromic Substrings,"['String', 'Rolling Hash', 'Hash Function']",29.70%,Hard,69.0128%;,2.6K,8.8K,
1961,1961. Check If String Is a Prefix of Array,"['Array', 'String']",53.50%,Easy,33.229%;,36.8K,68.8K,
1962,1962. Remove Stones to Minimize the Total,"['Array', 'Heap (Priority Queue)']",60.20%,Medium,68.0138%;,77.7K,129.1K,
1963,1963. Minimum Number of Swaps to Make the String Balanced,"['Two Pointers', 'String', 'Stack', '1+']",69.20%,Medium,52.6022%;,44.2K,63.8K,
1964,1964. Find the Longest Valid Obstacle Course at Each Position,"['Array', 'Binary Search', 'Binary Indexed Tree']",47.20%,Hard,0%;,10.1K,21.5K,
1965,1965. Employees With Missing Information,['Database'],75.50%,Easy,26.6565%;,83.2K,110.2K,
1966,1966. Binary Searchable Numbers in an Unsorted Array,"['Array', 'Binary Search']",65.40%,Medium,0%;,2.2K,3.4K,Y
1967,1967. Number of Strings That Appear as Substrings in Word,['String'],80.00%,Easy,12.547%;,46.7K,58.3K,
1968,1968. Array With Elements Not Equal to Average of Neighbors,"['Array', 'Greedy', 'Sorting']",49.50%,Medium,15.2639%;,23.8K,48K,
1969,1969. Minimum Non-Zero Product of the Array Elements,"['Math', 'Greedy', 'Recursion']",34.20%,Medium,46.6618%;,8.9K,26K,
1970,1970. Last Day Where You Can Still Cross,"['Array', 'Binary Search', '4+']",49.60%,Hard,40.8815%;,11.4K,23K,
1971,1971. Find if Path Exists in Graph,"['Depth-First Search', 'Breadth-First Search', '2+']",52.10%,Easy,62.5024%;,222.7K,427.3K,
1972,1972. First and Last Call On the Same Day,['Database'],52.30%,Hard,36.1283%;,7.3K,14K,Y
1973,1973. Count Nodes Equal to Sum of Descendants,"['Tree', 'Depth-First Search', '2+']",75.10%,Medium,0%;,7.7K,10.2K,Y
1974,1974. Minimum Time to Type Word Using Special Typewriter,"['String', 'Greedy']",72.30%,Easy,26.0755%;,29.4K,40.7K,
1975,1975. Maximum Matrix Sum,"['Array', 'Greedy', 'Matrix']",48.30%,Medium,31.2883%;,14.6K,30.2K,
1976,1976. Number of Ways to Arrive at Destination,"['Dynamic Programming', 'Graph', '2+']",31.00%,Medium,42.9884%;,28.5K,91.8K,
1977,1977. Number of Ways to Separate Numbers,"['String', 'Dynamic Programming', 'Suffix Array']",21.00%,Hard,62.4872%;,4.4K,21K,
1978,1978. Employees Whose Manager Left the Company,['Database'],50.00%,Easy,0%;,8.4K,16.8K,Y
1979,1979. Find Greatest Common Divisor of Array,"['Array', 'Math', 'Number Theory']",76.90%,Easy,19.8445%;,77.9K,101.2K,
1980,1980. Find Unique Binary String,"['Array', 'String', 'Backtracking']",65.20%,Medium,30.2937%;,35.3K,54.2K,
1981,1981. Minimize the Difference Between Target and Chosen Elements,"['Array', 'Dynamic Programming', 'Matrix']",32.40%,Medium,21.0327%;,20.1K,61.9K,
1982,1982. Find Array Given Subset Sums,"['Array', 'Divide and Conquer']",48.50%,Hard,74.7605%;,4.1K,8.6K,
1983,1983. Widest Pair of Indices With Equal Range Sum,"['Array', 'Hash Table', 'Prefix Sum']",54.20%,Medium,0%;,1.8K,3.4K,Y
1984,1984. Minimum Difference Between Highest and Lowest of K Scores,"['Array', 'Sliding Window', 'Sorting']",54.40%,Easy,24.3803%;,42K,77.3K,
1985,1985. Find the Kth Largest Integer in the Array,"['Array', 'String', 'Divide and Conquer', '3+']",44.50%,Medium,34.82%;,44.9K,100.8K,
1986,1986. Minimum Number of Work Sessions to Finish the Tasks,"['Array', 'Dynamic Programming', '3+']",32.70%,Medium,45.2455%;,19.4K,59.2K,
1987,1987. Number of Unique Good Subsequences,"['String', 'Dynamic Programming']",52.20%,Hard,49.6993%;,9.2K,17.5K,
1988,1988. Find Cutoff Score for Each School,['Database'],68.60%,Medium,0%;,8.5K,12.4K,Y
1989,1989. Maximum Number of People That Can Be Caught in Tag,"['Array', 'Greedy']",52.40%,Medium,0%;,1.6K,3.1K,Y
1990,1990. Count the Number of Experiments,['Database'],51.20%,Medium,16.6236%;,4.9K,9.6K,Y
1991,1991. Find the Middle Index in Array,"['Array', 'Prefix Sum']",67.40%,Easy,22.7347%;,58.8K,87.2K,
1992,1992. Find All Groups of Farmland,"['Array', 'Depth-First Search', '2+']",68.70%,Medium,29.9546%;,21.1K,30.7K,
1993,1993. Operations on Tree,"['Hash Table', 'Tree', 'Depth-First Search', '2+']",44.10%,Medium,48.0937%;,10.3K,23.3K,
1994,1994. The Number of Good Subsets,"['Array', 'Math', 'Dynamic Programming', '2+']",34.80%,Hard,69.1268%;,5.1K,14.7K,
1995,1995. Count Special Quadruplets,"['Array', 'Enumeration']",59.80%,Easy,32.3995%;,29.9K,50.1K,
1996,1996. The Number of Weak Characters in the Game,"['Array', 'Stack', 'Greedy', '2+']",44.00%,Medium,30.2739%;,93.6K,212.8K,
1997,1997. First Day Where You Have Been in All the Rooms,"['Array', 'Dynamic Programming']",37.00%,Medium,0%;,7.5K,20.4K,
1998,1998. GCD Sort of an Array,"['Array', 'Math', 'Union Find', '1+']",45.60%,Hard,59.7914%;,6.6K,14.5K,
1999,1999. Smallest Greater Multiple Made of Two Digits,"['Math', 'Enumeration']",49.50%,Medium,0%;,1.3K,2.5K,Y
2000,2000. Reverse Prefix of Word,"['Two Pointers', 'String']",78.60%,Easy,11.1736%;,60.5K,77K,
2001,2001. Number of Pairs of Interchangeable Rectangles,"['Array', 'Hash Table', 'Math', '2+']",46.00%,Medium,14.9912%;,23.7K,51.6K,
2002,2002. Maximum Product of the Length of Two Palindromic Subsequences,"['String', 'Dynamic Programming', '3+']",54.00%,Medium,41.1983%;,17.4K,32.1K,
2003,2003. Smallest Missing Genetic Value in Each Subtree,"['Dynamic Programming', 'Tree', '2+']",44.70%,Hard,0%;,6.4K,14.4K,
2004,2004. The Number of Seniors and Juniors to Join the Company,['Database'],40.20%,Hard,42.122%;,5.9K,14.6K,Y
2005,2005. Subtree Removal Game with Fibonacci Tree,"['Math', 'Dynamic Programming', 'Tree', '2+']",63.50%,Hard,0%;,466,734,Y
2006,2006. Count Number of Pairs With Absolute Difference K,"['Array', 'Hash Table', 'Counting']",82.70%,Easy,28.0732%;,90.8K,109.8K,
2007,2007. Find Original Array From Doubled Array,"['Array', 'Hash Table', 'Greedy', '1+']",40.70%,Medium,78.7661%;,117.3K,288.2K,
2008,2008. Maximum Earnings From Taxi,"['Array', 'Binary Search', '2+']",43.60%,Medium,43.0538%;,21.1K,48.4K,
2009,2009. Minimum Number of Operations to Make Array Continuous,"['Array', 'Binary Search']",45.60%,Hard,51.1705%;,10.6K,23.2K,
2010,2010. The Number of Seniors and Juniors to Join the Company II,['Database'],59.70%,Hard,0%;,4K,6.7K,Y
2011,2011. Final Value of Variable After Performing Operations,"['Array', 'String', 'Simulation']",88.70%,Easy,16.6442%;,212.5K,239.6K,
2012,2012. Sum of Beauty in the Array,['Array'],46.90%,Medium,58.0822%;,18.4K,39.2K,
2013,2013. Detect Squares,"['Array', 'Hash Table', 'Design', '1+']",50.30%,Medium,50.4801%;,44.3K,88K,
2014,2014. Longest Subsequence Repeated k Times,"['String', 'Backtracking', 'Greedy', '2+']",55.60%,Hard,36.5316%;,5.7K,10.3K,
2015,2015. Average Height of Buildings in Each Segment,"['Array', 'Greedy', 'Sorting', '1+']",58.90%,Medium,0%;,1.5K,2.6K,Y
2016,2016. Maximum Difference Between Increasing Elements,['Array'],54.20%,Easy,48.7246%;,57.3K,105.7K,
2017,2017. Grid Game,"['Array', 'Matrix', 'Prefix Sum']",43.60%,Medium,7.09575%;,15K,34.5K,
2018,2018. Check if Word Can Be Placed In Crossword,"['Array', 'Matrix', 'Enumeration']",49.40%,Medium,44.746%;,16.9K,34.2K,
2019,2019. The Score of Students Solving Math Expression,"['Array', 'Math', 'String', '3+']",33.80%,Hard,0%;,5.7K,16.8K,
2020,2020. Number of Accounts That Did Not Stream,['Database'],73.30%,Medium,19.1985%;,7.5K,10.2K,Y
2021,2021. Brightest Position on Street,"['Array', 'Prefix Sum', 'Ordered Set']",62.30%,Medium,63.7756%;,4.1K,6.7K,Y
2022,2022. Convert 1D Array Into 2D Array,"['Array', 'Matrix', 'Simulation']",59.00%,Easy,12.4404%;,55.6K,94.3K,
2023,2023. Number of Pairs of Strings With Concatenation Equal to Target,"['Array', 'String']",73.30%,Medium,50.1094%;,30.6K,41.8K,
2024,2024. Maximize the Confusion of an Exam,"['String', 'Binary Search', 'Sliding Window', '1+']",60.30%,Medium,30.3128%;,24.2K,40.1K,
2025,2025. Maximum Number of Ways to Partition an Array,"['Array', 'Hash Table', 'Counting', '2+']",32.80%,Hard,39.8147%;,6.9K,21K,
2026,2026. Low-Quality Problems,['Database'],84.90%,Easy,0%;,8.7K,10.2K,Y
2027,2027. Minimum Moves to Convert String,"['String', 'Greedy']",53.90%,Easy,0%;,26.5K,49.1K,
2028,2028. Find Missing Observations,"['Array', 'Math', 'Simulation']",44.50%,Medium,53.9407%;,20.3K,45.5K,
2029,2029. Stone Game IX,"['Array', 'Math', 'Greedy', '2+']",26.60%,Medium,37.38%;,6.3K,23.7K,
2030,2030. Smallest K-Length Subsequence With Occurrences of a Letter,"['String', 'Stack', 'Greedy', '1+']",38.80%,Hard,31.2883%;,6.1K,15.8K,
2031,2031. Count Subarrays With More Ones Than Zeros,"['Array', 'Binary Search', '5+']",51.90%,Medium,0%;,2.8K,5.5K,Y
2032,2032. Two Out of Three,"['Array', 'Hash Table']",73.50%,Easy,19.6484%;,45.1K,61.4K,
2033,2033. Minimum Operations to Make a Uni-Value Grid,"['Array', 'Math', 'Sorting', '1+']",52.30%,Medium,0%;,18.6K,35.6K,
2034,2034. Stock Price Fluctuation,"['Hash Table', 'Design', '3+']",48.90%,Medium,58.4403%;,55.6K,113.8K,
2035,2035. Partition Array Into Two Arrays to Minimize Sum Difference,"['Array', 'Two Pointers', 'Binary Search', '4+']",18.80%,Hard,74.3288%;,13.2K,69.9K,
2036,2036. Maximum Alternating Subarray Sum,"['Array', 'Dynamic Programming']",41.00%,Medium,0%;,2.1K,5.2K,Y
2037,2037. Minimum Number of Moves to Seat Everyone,"['Array', 'Sorting']",82.10%,Easy,23.1776%;,45.5K,55.4K,
2038,2038. Remove Colored Pieces if Both Neighbors are the Same Color,"['Math', 'String', 'Greedy', '1+']",58.00%,Medium,64.68%;,23.2K,40K,
2039,2039. The Time When the Network Becomes Idle,"['Array', 'Breadth-First Search', 'Graph']",51.00%,Medium,0%;,10.5K,20.7K,
2040,2040. Kth Smallest Product of Two Sorted Arrays,"['Array', 'Binary Search']",28.90%,Hard,39.8147%;,8.9K,30.9K,
2041,2041. Accepted Candidates From the Interviews,['Database'],79.10%,Medium,0%;,6.1K,7.7K,Y
2042,2042. Check if Numbers Are Ascending in a Sentence,['String'],67.20%,Easy,4.78958%;,40K,59.5K,
2043,2043. Simple Bank System,"['Array', 'Hash Table', 'Design', '1+']",65.30%,Medium,20.5072%;,18K,27.6K,
2044,2044. Count Number of Maximum Bitwise-OR Subsets,"['Array', 'Backtracking', 'Bit Manipulation']",75.60%,Medium,0%;,20.2K,26.7K,
2045,2045. Second Minimum Time to Reach Destination,"['Breadth-First Search', 'Graph', 'Shortest Path']",39.20%,Hard,40.3369%;,8.6K,22K,
2046,2046. Sort Linked List Already Sorted Using Absolute Values,"['Linked List', 'Two Pointers', 'Sorting']",68.60%,Medium,31.2883%;,4.8K,7K,Y
2047,2047. Number of Valid Words in a Sentence,['String'],29.30%,Easy,23.563%;,21.2K,72.2K,
2048,2048. Next Greater Numerically Balanced Number,"['Math', 'Backtracking', 'Enumeration']",47.30%,Medium,0%;,10.8K,22.9K,
2049,2049. Count Nodes With the Highest Score,"['Array', 'Tree', 'Depth-First Search', '1+']",47.60%,Medium,40.6119%;,16.1K,33.9K,
2050,2050. Parallel Courses III,"['Dynamic Programming', 'Graph', '1+']",59.20%,Hard,37.2197%;,17.6K,29.6K,
2051,2051. The Category of Each Member in the Store,['Database'],71.60%,Medium,0%;,5.4K,7.5K,Y
2052,2052. Minimum Cost to Separate Sentence Into Rows,"['Array', 'Dynamic Programming']",50.10%,Medium,0%;,1.4K,2.7K,Y
2053,2053. Kth Distinct String in an Array,"['Array', 'Hash Table', 'String', '1+']",72.00%,Easy,7.35586%;,42.2K,58.6K,
2054,2054. Two Best Non-Overlapping Events,"['Array', 'Binary Search', '3+']",45.20%,Medium,22.8064%;,13.3K,29.4K,
2055,2055. Plates Between Candles,"['Array', 'String', 'Binary Search', '1+']",44.60%,Medium,57.7719%;,29K,65.1K,
2056,2056. Number of Valid Move Combinations On Chessboard,"['Array', 'String', 'Backtracking', '1+']",58.10%,Hard,40.3369%;,3.4K,5.8K,
2057,2057. Smallest Index With Equal Value,['Array'],71.60%,Easy,7.20542%;,40.2K,56.2K,
2058,2058. Find the Minimum and Maximum Number of Nodes Between Critical Points,['Linked List'],57.10%,Medium,21.5888%;,22.6K,39.6K,
2059,2059. Minimum Operations to Convert Number,"['Array', 'Breadth-First Search']",47.70%,Medium,19.1985%;,13K,27.3K,
2060,2060. Check if an Original String Exists Given Two Encoded Strings,"['String', 'Dynamic Programming']",40.90%,Hard,34.9923%;,9.1K,22.2K,
2061,2061. Number of Spaces Cleaning Robot Cleaned,"['Array', 'Matrix', 'Simulation']",54.70%,Medium,0%;,3.5K,6.4K,Y
2062,2062. Count Vowel Substrings of a String,"['Hash Table', 'String']",66.00%,Easy,53.9438%;,26.9K,40.7K,
2063,2063. Vowels of All Substrings,"['Math', 'String', 'Dynamic Programming', '1+']",54.70%,Medium,0%;,21.2K,38.7K,
2064,2064. Minimized Maximum of Products Distributed to Any Store,"['Array', 'Binary Search']",50.70%,Medium,25.2677%;,19.3K,38K,
2065,2065. Maximum Path Quality of a Graph,"['Array', 'Backtracking', 'Graph']",57.30%,Hard,62.3151%;,14.8K,25.9K,
2066,2066. Account Balance,['Database'],84.60%,Medium,0%;,6.4K,7.6K,Y
2067,2067. Number of Equal Count Substrings,"['String', 'Counting', 'Prefix Sum']",48.40%,Medium,0%;,1.9K,3.8K,Y
2068,2068. Check Whether Two Strings are Almost Equivalent,"['Hash Table', 'String', 'Counting']",64.40%,Easy,75.2152%;,32.2K,50K,
2069,2069. Walking Robot Simulation II,"['Design', 'Simulation']",23.10%,Medium,32.7945%;,7.8K,33.9K,
2070,2070. Most Beautiful Item for Each Query,"['Array', 'Binary Search', 'Sorting']",49.60%,Medium,0%;,12.2K,24.5K,
2071,2071. Maximum Number of Tasks You Can Assign,"['Array', 'Binary Search', 'Greedy', '3+']",34.00%,Hard,18.2526%;,6.5K,19.2K,
2072,2072. The Winner University,['Database'],72.40%,Easy,0%;,7.7K,10.6K,Y
2073,2073. Time Needed to Buy Tickets,"['Array', 'Queue', 'Simulation']",62.30%,Easy,30.5193%;,39.2K,63K,
2074,2074. Reverse Nodes in Even Length Groups,['Linked List'],53.40%,Medium,18.6606%;,15.5K,29.1K,
2075,2075. Decode the Slanted Ciphertext,"['String', 'Simulation']",50.30%,Medium,49.6993%;,10.8K,21.5K,
2076,2076. Process Restricted Friend Requests,"['Union Find', 'Graph']",53.30%,Hard,28.4803%;,13.4K,25.1K,
2077,2077. Paths in Maze That Lead to Same Room,['Graph'],55.40%,Medium,0%;,3K,5.3K,Y
2078,2078. Two Furthest Houses With Different Colors,"['Array', 'Greedy']",67.10%,Easy,11.9639%;,39.8K,59.4K,
2079,2079. Watering Plants,['Array'],80.00%,Medium,16.0864%;,33.3K,41.6K,
2080,2080. Range Frequency Queries,"['Array', 'Hash Table', 'Binary Search', '2+']",38.60%,Medium,25.7411%;,15.9K,41.2K,
2081,2081. Sum of k-Mirror Numbers,"['Math', 'Enumeration']",42.00%,Hard,31.2883%;,6.3K,15K,
2082,2082. The Number of Rich Customers,['Database'],79.80%,Easy,0%;,8.1K,10.2K,Y
2083,2083. Substrings That Begin and End With the Same Letter,"['Hash Table', 'Math', 'String', '2+']",67.80%,Medium,0%;,5.1K,7.6K,Y
2084,2084. Drop Type 1 Orders for Customers With Type 0 Orders,['Database'],88.60%,Medium,0%;,7K,7.9K,Y
2085,2085. Count Common Words With One Occurrence,"['Array', 'Hash Table', 'String', '1+']",70.00%,Easy,17.3021%;,43.3K,61.8K,
2086,2086. Minimum Number of Food Buckets to Feed the Hamsters,"['String', 'Dynamic Programming', 'Greedy']",44.90%,Medium,0%;,14.2K,31.6K,
2087,2087. Minimum Cost Homecoming of a Robot in a Grid,"['Array', 'Greedy', 'Matrix']",51.10%,Medium,55.5428%;,13.2K,25.9K,
2088,2088. Count Fertile Pyramids in a Land,"['Array', 'Dynamic Programming', 'Matrix']",63.70%,Hard,26.2365%;,5.7K,9K,
2089,2089. Find Target Indices After Sorting Array,"['Array', 'Binary Search', 'Sorting']",76.40%,Easy,19.9468%;,109.6K,143.5K,
2090,2090. K Radius Subarray Averages,"['Array', 'Sliding Window']",42.70%,Medium,20.5072%;,22.9K,53.6K,
2091,2091. Removing Minimum and Maximum From Array,"['Array', 'Greedy']",55.90%,Medium,41.1873%;,28.7K,51.4K,
2092,2092. Find All People With Secret,"['Depth-First Search', 'Breadth-First Search', '3+']",34.20%,Hard,29.7983%;,20.4K,59.7K,
2093,2093. Minimum Cost to Reach City With Discounts,"['Graph', 'Shortest Path']",56.10%,Medium,0%;,3.8K,6.8K,Y
2094,2094. Finding 3-Digit Even Numbers,"['Array', 'Hash Table', 'Sorting', '1+']",57.80%,Easy,24.3803%;,22.4K,38.8K,
2095,2095. Delete the Middle Node of a Linked List,"['Linked List', 'Two Pointers']",59.50%,Medium,58.0035%;,178.3K,299.5K,
2096,2096. Step-By-Step Directions From a Binary Tree Node to Another,"['String', 'Tree', 'Depth-First Search', '1+']",48.40%,Medium,61.7718%;,79.6K,164.3K,
2097,2097. Valid Arrangement of Pairs,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",41.20%,Hard,40.3369%;,7K,16.9K,
2098,2098. Subsequence of Size K With the Largest Even Sum,"['Array', 'Greedy', 'Sorting']",38.30%,Medium,0%;,2.2K,5.6K,Y
2099,2099. Find Subsequence of Length K With the Largest Sum,"['Array', 'Hash Table', 'Sorting', '1+']",42.90%,Easy,30.7804%;,32.1K,74.8K,
2100,2100. Find Good Days to Rob the Bank,"['Array', 'Dynamic Programming', 'Prefix Sum']",49.20%,Medium,31.6472%;,20K,40.6K,
2101,2101. Detonate the Maximum Bombs,"['Array', 'Math', 'Depth-First Search', '3+']",42.00%,Medium,55.5965%;,28.5K,67.9K,
2102,2102. Sequentially Ordinal Rank Tracker,"['Design', 'Heap (Priority Queue)', '2+']",65.90%,Hard,33.9534%;,12.1K,18.4K,
2103,2103. Rings and Rods,"['Hash Table', 'String']",81.30%,Easy,2.83177%;,51.6K,63.5K,
2104,2104. Sum of Subarray Ranges,"['Array', 'Stack', 'Monotonic Stack']",60.30%,Medium,46.1531%;,66.9K,110.9K,
2105,2105. Watering Plants II,"['Array', 'Two Pointers', 'Simulation']",49.50%,Medium,9.32972%;,15.2K,30.7K,
2106,2106. Maximum Fruits Harvested After at Most K Steps,"['Array', 'Binary Search', 'Sliding Window', '1+']",35.00%,Hard,19.1985%;,8.5K,24.2K,
2107,2107. Number of Unique Flavors After Sharing K Candies,"['Array', 'Hash Table', 'Sliding Window']",56.20%,Medium,0%;,2.2K,4K,Y
2108,2108. Find First Palindromic String in the Array,"['Array', 'Two Pointers', 'String']",78.70%,Easy,17.6568%;,81K,103K,
2109,2109. Adding Spaces to a String,"['Array', 'String', 'Simulation']",56.50%,Medium,18.7129%;,30.4K,53.7K,
2110,2110. Number of Smooth Descent Periods of a Stock,"['Array', 'Math', 'Dynamic Programming']",57.70%,Medium,19.5373%;,27.6K,47.9K,
2111,2111. Minimum Operations to Make the Array K-Increasing,"['Array', 'Binary Search']",37.60%,Hard,24.3803%;,10.7K,28.6K,
2112,2112. The Airport With the Most Traffic,['Database'],70.90%,Medium,0%;,5.4K,7.6K,Y
2113,2113. Elements in Array After Removing and Replacing Elements,['Array'],73.30%,Medium,0%;,1.4K,2K,Y
2114,2114. Maximum Number of Words Found in Sentences,"['Array', 'String']",87.20%,Easy,25.207%;,169.6K,194.4K,
2115,2115. Find All Possible Recipes from Given Supplies,"['Array', 'Hash Table', 'String', '2+']",48.50%,Medium,59.8964%;,64K,132K,
2116,2116. Check if a Parentheses String Can Be Valid,"['String', 'Stack', 'Greedy']",31.10%,Medium,19.4514%;,15K,48.3K,
2117,2117. Abbreviating the Product of a Range,['Math'],27.20%,Hard,0%;,2.6K,9.7K,
2118,2118. Build the Equation,['Database'],57.10%,Hard,0%;,1.5K,2.7K,Y
2119,2119. A Number After a Double Reversal,['Math'],76.90%,Easy,16.7898%;,53.8K,69.9K,
2120,2120. Execution of All Suffix Instructions Staying in a Grid,"['String', 'Simulation']",83.30%,Medium,9.59007%;,22.9K,27.5K,
2121,2121. Intervals Between Identical Elements,"['Array', 'Hash Table', 'Prefix Sum']",43.20%,Medium,17.4898%;,15.2K,35.1K,
2122,2122. Recover the Original Array,"['Array', 'Hash Table', 'Sorting', '1+']",38.50%,Hard,21.4467%;,8.7K,22.7K,
2123,2123. Minimum Operations to Remove Adjacent Ones in Matrix,"['Array', 'Graph', 'Matrix']",41.10%,Hard,0%;,685,1.7K,Y
2124,2124. Check if All A's Appears Before All B's,['String'],71.40%,Easy,29.6781%;,51.3K,71.8K,
2125,2125. Number of Laser Beams in a Bank,"['Array', 'Math', 'String', '1+']",82.20%,Medium,23.8283%;,44.3K,53.9K,
2126,2126. Destroying Asteroids,"['Array', 'Greedy', 'Sorting']",49.90%,Medium,6.48922%;,27K,54.1K,
2127,2127. Maximum Employees to Be Invited to a Meeting,"['Depth-First Search', 'Graph', 'Topological Sort']",34.60%,Hard,77.0631%;,8.2K,23.9K,
2128,2128. Remove All Ones With Row and Column Flips,"['Array', 'Math', 'Bit Manipulation', '1+']",76.30%,Medium,29.9546%;,30.2K,39.6K,Y
2129,2129. Capitalize the Title,['String'],62.00%,Easy,11.5504%;,42.4K,68.3K,
2130,2130. Maximum Twin Sum of a Linked List,"['Linked List', 'Two Pointers', 'Stack']",80.70%,Medium,33.7298%;,86.9K,107.7K,
2131,2131. Longest Palindrome by Concatenating Two Letter Words,"['Array', 'Hash Table', 'String', '2+']",48.50%,Medium,44.0341%;,98.1K,202.3K,
2132,2132. Stamping the Grid,"['Array', 'Greedy', 'Matrix', '1+']",31.70%,Hard,59.3988%;,5.6K,17.6K,
2133,2133. Check if Every Row and Column Contains All Numbers,"['Array', 'Hash Table', 'Matrix']",52.40%,Easy,34.3172%;,50.8K,96.8K,
2134,2134. Minimum Swaps to Group All 1's Together II,"['Array', 'Sliding Window']",51.30%,Medium,46.6618%;,21.3K,41.5K,
2135,2135. Count Words Obtained After Adding a Letter,"['Array', 'Hash Table', 'String', '2+']",42.80%,Medium,28.4803%;,29.3K,68.5K,
2136,2136. Earliest Possible Day of Full Bloom,"['Array', 'Greedy', 'Sorting']",73.60%,Hard,56.5973%;,47K,63.8K,
2137,2137. Pour Water Between Buckets to Make Water Levels Equal,"['Array', 'Binary Search']",67.10%,Medium,0%;,1.7K,2.5K,Y
2138,2138. Divide a String Into Groups of Size k,"['String', 'Simulation']",65.40%,Easy,0%;,34.6K,52.9K,
2139,2139. Minimum Moves to Reach Target Score,"['Math', 'Greedy']",48.80%,Medium,15.5467%;,32K,65.5K,
2140,2140. Solving Questions With Brainpower,"['Array', 'Dynamic Programming']",46.40%,Medium,24.8146%;,24.8K,53.5K,
2141,2141. Maximum Running Time of N Computers,"['Array', 'Binary Search', 'Greedy', '1+']",39.20%,Hard,0%;,11.1K,28.3K,
2142,2142. The Number of Passengers in Each Bus I,['Database'],49.80%,Medium,0%;,5.7K,11.5K,Y
2143,2143. Choose Numbers From Two Arrays in Range,"['Array', 'Dynamic Programming']",52.30%,Hard,0%;,783,1.5K,Y
2144,2144. Minimum Cost of Buying Candies With Discount,"['Array', 'Greedy', 'Sorting']",61.00%,Easy,17.1984%;,34.7K,56.8K,
2145,2145. Count the Hidden Sequences,"['Array', 'Prefix Sum']",36.90%,Medium,38.8308%;,14.7K,40K,
2146,2146. K Highest Ranked Items Within a Price Range,"['Array', 'Breadth-First Search', 'Sorting', '2+']",41.40%,Medium,26.6969%;,12.2K,29.5K,
2147,2147. Number of Ways to Divide a Long Corridor,"['Math', 'String', 'Dynamic Programming']",39.90%,Hard,0%;,9.5K,23.8K,
2148,2148. Count Elements With Strictly Smaller and Greater Elements,"['Array', 'Sorting']",59.70%,Easy,14.2421%;,40K,67K,
2149,2149. Rearrange Array Elements by Sign,"['Array', 'Two Pointers', 'Simulation']",80.70%,Medium,42.9867%;,70.2K,87K,
2150,2150. Find All Lonely Numbers in the Array,"['Array', 'Hash Table', 'Counting']",60.60%,Medium,27.1776%;,33.6K,55.5K,
2151,2151. Maximum Good People Based on Statements,"['Array', 'Backtracking', 'Bit Manipulation', '1+']",49.20%,Hard,28.4803%;,11.1K,22.5K,
2152,2152. Minimum Number of Lines to Cover Points,"['Array', 'Hash Table', 'Math', '5+']",46.60%,Medium,0%;,1.4K,3K,Y
2153,2153. The Number of Passengers in Each Bus II,['Database'],46.40%,Hard,48.1543%;,1.8K,3.9K,Y
2154,2154. Keep Multiplying Found Values by Two,"['Array', 'Hash Table', 'Sorting', '1+']",72.60%,Easy,14.5032%;,62.7K,86.3K,
2155,2155. All Divisions With the Highest Score of a Binary Array,['Array'],63.50%,Medium,15.9149%;,24.6K,38.7K,
2156,2156. Find Substring With Given Hash Value,"['String', 'Sliding Window', 'Rolling Hash', '1+']",22.30%,Hard,0%;,11.2K,50.1K,
2157,2157. Groups of Strings,"['String', 'Bit Manipulation', 'Union Find']",25.70%,Hard,32.7945%;,7.5K,29.3K,
2158,2158. Amount of New Area Painted Each Day,"['Array', 'Segment Tree', 'Ordered Set']",54.60%,Hard,17.3991%;,23.1K,42.3K,Y
2159,2159. Order Two Columns Independently,['Database'],61.20%,Medium,16.6236%;,4.5K,7.3K,Y
2160,2160. Minimum Sum of Four Digit Number After Splitting Digits,"['Math', 'Greedy', 'Sorting']",86.90%,Easy,47.0739%;,79.2K,91.1K,
2161,2161. Partition Array According to Given Pivot,"['Array', 'Two Pointers', 'Simulation']",84.80%,Medium,34.1274%;,45.9K,54.1K,
2162,2162. Minimum Cost to Set Cooking Time,"['Math', 'Enumeration']",39.90%,Medium,24.3803%;,13.3K,33.4K,
2163,2163. Minimum Difference in Sums After Removal of Elements,"['Array', 'Dynamic Programming', '1+']",47.60%,Hard,55.5428%;,7.5K,15.7K,
2164,2164. Sort Even and Odd Indices Independently,"['Array', 'Sorting']",65.10%,Easy,18.2526%;,42K,64.5K,
2165,2165. Smallest Value of the Rearranged Number,"['Math', 'Sorting']",51.40%,Medium,27.4362%;,27.8K,54.1K,
2166,2166. Design Bitset,"['Array', 'Hash Table', 'Design']",31.70%,Medium,19.0883%;,18.5K,58.3K,
2167,2167. Minimum Time to Remove All Cars Containing Illegal Goods,"['String', 'Dynamic Programming']",40.70%,Hard,0%;,10.3K,25.2K,
2168,2168. Unique Substrings With Equal Digit Frequency,"['Hash Table', 'String', 'Rolling Hash', '2+']",59.30%,Medium,0%;,1.7K,2.8K,Y
2169,2169. Count Operations to Obtain Zero,"['Math', 'Simulation']",75.10%,Easy,6.21537%;,51.6K,68.7K,
2170,2170. Minimum Operations to Make the Array Alternating,"['Array', 'Hash Table', 'Greedy', '1+']",33.20%,Medium,14.1068%;,19K,57.3K,
2171,2171. Removing Minimum Number of Magic Beans,"['Array', 'Sorting', 'Prefix Sum']",42.10%,Medium,27.3012%;,21K,49.9K,
2172,2172. Maximum AND Sum of Array,"['Array', 'Dynamic Programming', '2+']",48.30%,Hard,39.8147%;,10.5K,21.8K,
2173,2173. Longest Winning Streak,['Database'],54.20%,Hard,0%;,2.6K,4.8K,Y
2174,2174. Remove All Ones With Row and Column Flips II,"['Array', 'Bit Manipulation', '2+']",68.20%,Medium,0%;,4.1K,6K,Y
2175,2175. The Change in Global Rankings,['Database'],64.80%,Medium,0%;,3.9K,6K,Y
2176,2176. Count Equal and Divisible Pairs in an Array,['Array'],79.70%,Easy,5.32242%;,48.9K,61.3K,
2177,2177. Find Three Consecutive Integers That Sum to a Given Number,"['Math', 'Simulation']",64.00%,Medium,11.4586%;,32.4K,50.6K,
2178,2178. Maximum Split of Positive Even Integers,"['Math', 'Backtracking', 'Greedy']",59.30%,Medium,30.3128%;,37.9K,63.8K,
2179,2179. Count Good Triplets in an Array,"['Array', 'Binary Search', '5+']",38.50%,Hard,53.9226%;,5.9K,15.4K,
2180,2180. Count Integers With Even Digit Sum,"['Math', 'Simulation']",65.40%,Easy,12.4404%;,40.6K,62.1K,
2181,2181. Merge Nodes in Between Zeros,"['Linked List', 'Simulation']",86.40%,Medium,14.4731%;,69.7K,80.7K,
2182,2182. Construct String With Repeat Limit,"['String', 'Greedy', 'Heap (Priority Queue)', '1+']",52.40%,Medium,28.7601%;,16.8K,32.1K,
2183,2183. Count Array Pairs Divisible by K,"['Array', 'Math', 'Number Theory']",28.40%,Hard,42.6099%;,11.7K,41.2K,
2184,2184. Number of Ways to Build Sturdy Brick Wall,"['Array', 'Dynamic Programming', '2+']",50.20%,Medium,65.4099%;,5K,10K,Y
2185,2185. Counting Words With a Given Prefix,"['Array', 'String']",77.30%,Easy,19.3421%;,59.9K,77.4K,
2186,2186. Minimum Number of Steps to Make Two Strings Anagram II,"['Hash Table', 'String', 'Counting']",72.00%,Medium,0%;,31.1K,43.1K,
2187,2187. Minimum Time to Complete Trips,"['Array', 'Binary Search']",39.20%,Medium,68.4741%;,93.4K,238.2K,
2188,2188. Minimum Time to Finish the Race,"['Array', 'Dynamic Programming']",41.70%,Hard,46.6618%;,9.7K,23.3K,
2189,2189. Number of Ways to Build House of Cards,"['Math', 'Dynamic Programming']",62.70%,Medium,0%;,1.5K,2.4K,Y
2190,2190. Most Frequent Number Following Key In an Array,"['Array', 'Hash Table', 'Counting']",60.00%,Easy,20.5392%;,26.1K,43.6K,
2191,2191. Sort the Jumbled Numbers,"['Array', 'Sorting']",45.80%,Medium,0%;,16.1K,35.2K,
2192,2192. All Ancestors of a Node in a Directed Acyclic Graph,"['Depth-First Search', 'Breadth-First Search', '2+']",50.70%,Medium,32.0943%;,22.8K,45K,
2193,2193. Minimum Number of Moves to Make Palindrome,"['Two Pointers', 'String', 'Greedy', '1+']",51.30%,Hard,63.3253%;,16.9K,33K,
2194,2194. Cells in a Range on an Excel Sheet,['String'],85.10%,Easy,35.8925%;,46.1K,54.2K,
2195,2195. Append K Integers With Minimal Sum,"['Array', 'Math', 'Greedy', '1+']",25.00%,Medium,18.0312%;,25.6K,102.3K,
2196,2196. Create Binary Tree From Descriptions,"['Array', 'Hash Table', 'Tree', '3+']",72.30%,Medium,34.4617%;,25.8K,35.6K,
2197,2197. Replace Non-Coprime Numbers in Array,"['Array', 'Math', 'Stack', '1+']",38.60%,Hard,41.7749%;,11.5K,29.9K,
2198,2198. Number of Single Divisor Triplets,['Math'],56.00%,Medium,49.6993%;,787,1.4K,Y
2199,2199. Finding the Topic of Each Post,['Database'],49.30%,Hard,0%;,1.6K,3.3K,Y
2200,2200. Find All K-Distant Indices in an Array,['Array'],65.00%,Easy,9.32972%;,31K,47.6K,
2201,2201. Count Artifacts That Can Be Extracted,"['Array', 'Hash Table', 'Simulation']",55.30%,Medium,0%;,16.9K,30.5K,
2202,2202. Maximize the Topmost Element After K Moves,"['Array', 'Greedy']",22.80%,Medium,23.4761%;,22.3K,97.6K,
2203,2203. Minimum Weighted Subgraph With the Required Paths,"['Graph', 'Shortest Path']",35.90%,Hard,32.7945%;,9K,25K,
2204,2204. Distance to a Cycle in Undirected Graph,"['Depth-First Search', 'Breadth-First Search', '2+']",70.30%,Hard,0%;,2K,2.8K,Y
2205,2205. The Number of Users That Are Eligible for Discount,['Database'],50.30%,Easy,0%;,4K,7.9K,Y
2206,2206. Divide Array Into Equal Pairs,"['Array', 'Hash Table', 'Bit Manipulation', '1+']",73.90%,Easy,16.8742%;,51.4K,69.5K,
2207,2207. Maximize Number of Subsequences in a String,"['String', 'Greedy', 'Prefix Sum']",33.30%,Medium,32.1117%;,15.4K,46.1K,
2208,2208. Minimum Operations to Halve Array Sum,"['Array', 'Greedy', 'Heap (Priority Queue)']",45.40%,Medium,26.2365%;,20.1K,44.3K,
2209,2209. Minimum White Tiles After Covering With Carpets,"['String', 'Dynamic Programming', 'Prefix Sum']",34.20%,Hard,49.6993%;,9.6K,28.1K,
2210,2210. Count Hills and Valleys in an Array,['Array'],58.30%,Easy,51.7443%;,30.5K,52.2K,
2211,2211. Count Collisions on a Road,"['String', 'Stack']",42.30%,Medium,0%;,19.3K,45.5K,
2212,2212. Maximum Points in an Archery Competition,"['Array', 'Bit Manipulation', 'Recursion', '1+']",49.50%,Medium,53.14%;,12.4K,25.1K,
2213,2213. Longest Substring of One Repeating Character,"['Array', 'String', 'Segment Tree', '1+']",30.90%,Hard,0%;,3.4K,11.1K,
2214,2214. Minimum Health to Beat Game,"['Array', 'Greedy', 'Prefix Sum']",58.00%,Medium,63.2713%;,27.3K,47.1K,Y
2215,2215. Find the Difference of Two Arrays,"['Array', 'Hash Table']",70.40%,Easy,39.4782%;,49.6K,70.4K,
2216,2216. Minimum Deletions to Make Array Beautiful,"['Array', 'Stack', 'Greedy']",46.80%,Medium,34.1541%;,24.7K,52.8K,
2217,2217. Find Palindrome With Fixed Length,"['Array', 'Math']",34.00%,Medium,30.5193%;,14.2K,41.8K,
2218,2218. Maximum Value of K Coins From Piles,"['Array', 'Dynamic Programming', 'Prefix Sum']",48.20%,Hard,11.4586%;,13.8K,28.6K,
2219,2219. Maximum Sum Score of Array,"['Array', 'Prefix Sum']",60.70%,Medium,0%;,2.8K,4.6K,Y
2220,2220. Minimum Bit Flips to Convert Number,['Bit Manipulation'],82.30%,Easy,23.0472%;,36.6K,44.5K,
2221,2221. Find Triangular Sum of an Array,"['Array', 'Math', 'Simulation', '1+']",78.50%,Medium,40.9013%;,52.4K,66.8K,
2222,2222. Number of Ways to Select Buildings,"['String', 'Dynamic Programming', 'Prefix Sum']",51.30%,Medium,59.5121%;,25.7K,50K,
2223,2223. Sum of Scores of Built Strings,"['String', 'Binary Search', 'Rolling Hash', '3+']",37.40%,Hard,0%;,5.2K,13.9K,
2224,2224. Minimum Number of Operations to Convert Time,"['String', 'Greedy']",65.40%,Easy,0%;,31.5K,48.2K,
2225,2225. Find Players With Zero or One Losses,"['Array', 'Hash Table', 'Sorting', '1+']",72.60%,Medium,60.5593%;,89.1K,122.7K,
2226,2226. Maximum Candies Allocated to K Children,"['Array', 'Binary Search']",36.60%,Medium,25.4545%;,26K,71.1K,
2227,2227. Encrypt and Decrypt Strings,"['Array', 'Hash Table', 'String', '2+']",39.40%,Hard,45.7869%;,9.9K,25.1K,
2228,2228. Users With Two Purchases Within Seven Days,['Database'],44.10%,Medium,0%;,4.7K,10.7K,Y
2229,2229. Check if an Array Is Consecutive,['Array'],61.10%,Easy,0%;,3.9K,6.4K,Y
2230,2230. The Users That Are Eligible for Discount,['Database'],49.50%,Easy,0%;,3.3K,6.7K,Y
2231,2231. Largest Number After Digit Swaps by Parity,"['Sorting', 'Heap (Priority Queue)']",61.00%,Easy,42.0456%;,30.6K,50.2K,
2232,2232. Minimize Result by Adding Parentheses to Expression,"['String', 'Enumeration']",65.80%,Medium,72.768%;,15.1K,23K,
2233,2233. Maximum Product After K Increments,"['Array', 'Greedy', 'Heap (Priority Queue)']",41.10%,Medium,0%;,22.7K,55.1K,
2234,2234. Maximum Total Beauty of the Gardens,"['Array', 'Two Pointers', 'Binary Search', '2+']",28.50%,Hard,42.122%;,5.3K,18.7K,
2235,2235. Add Two Integers,['Math'],88.50%,Easy,83.9035%;,245.4K,277.1K,
2236,2236. Root Equals Sum of Children,"['Tree', 'Binary Tree']",84.80%,Easy,43.801%;,114.8K,135.5K,
2237,2237. Count Positions on Street With Required Brightness,"['Array', 'Prefix Sum']",64.70%,Medium,40.3369%;,1.9K,3K,Y
2238,2238. Number of Times a Driver Was a Passenger,['Database'],73.70%,Medium,0%;,4.2K,5.7K,Y
2239,2239. Find Closest Number to Zero,['Array'],45.50%,Easy,39.4436%;,37.5K,82.4K,
2240,2240. Number of Ways to Buy Pens and Pencils,"['Math', 'Enumeration']",56.90%,Medium,8.61622%;,20.1K,35.3K,
2241,2241. Design an ATM Machine,"['Array', 'Greedy', 'Design']",38.90%,Medium,13.5894%;,13.2K,34K,
2242,2242. Maximum Score of a Node Sequence,"['Array', 'Graph', 'Sorting', '1+']",37.90%,Hard,43.3256%;,9.5K,25K,
2243,2243. Calculate Digit Sum of a String,"['String', 'Simulation']",66.30%,Easy,28.5802%;,28.9K,43.5K,
2244,2244. Minimum Rounds to Complete All Tasks,"['Array', 'Hash Table', 'Greedy', '1+']",62.90%,Medium,89.2632%;,130.2K,206.9K,
2245,2245. Maximum Trailing Zeros in a Cornered Path,"['Array', 'Matrix', 'Prefix Sum']",35.00%,Medium,34.9923%;,6.9K,19.7K,
2246,2246. Longest Path With Different Adjacent Characters,"['Array', 'String', 'Tree', '3+']",55.80%,Hard,78.1535%;,65.2K,116.7K,
2247,2247. Maximum Cost of Trip With K Highways,"['Dynamic Programming', 'Bit Manipulation', '2+']",50.70%,Hard,40.3369%;,1.2K,2.3K,Y
2248,2248. Intersection of Multiple Arrays,"['Array', 'Hash Table', 'Counting']",68.70%,Easy,34.1274%;,46.6K,67.8K,
2249,2249. Count Lattice Points Inside a Circle,"['Array', 'Hash Table', 'Math', '2+']",50.50%,Medium,13.5894%;,18.2K,36K,
2250,2250. Count Number of Rectangles Containing Each Point,"['Array', 'Binary Search', '2+']",34.10%,Medium,13.5894%;,11.8K,34.7K,
2251,2251. Number of Flowers in Full Bloom,"['Array', 'Hash Table', 'Binary Search', '3+']",51.30%,Hard,30.7903%;,12.6K,24.5K,
2252,2252. Dynamic Pivoting of a Table,['Database'],57.90%,Hard,28.4803%;,784,1.4K,Y
2253,2253. Dynamic Unpivoting of a Table,['Database'],68.30%,Hard,0%;,480,703,Y
2254,2254. Design Video Sharing Platform,"['Hash Table', 'Stack', 'Design', '1+']",65.10%,Hard,0%;,1.4K,2.1K,Y
2255,2255. Count Prefixes of a Given String,"['Array', 'String']",72.90%,Easy,6.58461%;,38.6K,52.9K,
2256,2256. Minimum Average Difference,"['Array', 'Prefix Sum']",43.10%,Medium,69.427%;,74.7K,173.2K,
2257,2257. Count Unguarded Cells in the Grid,"['Array', 'Matrix', 'Simulation']",52.20%,Medium,0%;,13.2K,25.3K,
2258,2258. Escape the Spreading Fire,"['Array', 'Binary Search', '2+']",35.00%,Hard,43.0538%;,6.8K,19.3K,
2259,2259. Remove Digit From Number to Maximize Result,"['String', 'Greedy', 'Enumeration']",46.30%,Easy,24.5284%;,48.4K,104.6K,
2260,2260. Minimum Consecutive Cards to Pick Up,"['Array', 'Hash Table', 'Sliding Window']",51.20%,Medium,16.0671%;,40.1K,78.3K,
2261,2261. K Divisible Elements Subarrays,"['Array', 'Hash Table', 'Trie', '3+']",48.10%,Medium,0%;,20.5K,42.6K,
2262,2262. Total Appeal of A String,"['Hash Table', 'String', 'Dynamic Programming']",56.80%,Hard,23.563%;,22.5K,39.6K,
2263,2263. Make Array Non-decreasing or Non-increasing,"['Dynamic Programming', 'Greedy']",67.30%,Hard,0%;,950,1.4K,Y
2264,2264. Largest 3-Same-Digit Number in String,['String'],59.50%,Easy,11.1427%;,30.8K,51.8K,
2265,2265. Count Nodes Equal to Average of Subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",85.20%,Medium,26.3196%;,37.7K,44.2K,
2266,2266. Count Number of Texts,"['Hash Table', 'Math', 'String', '1+']",47.10%,Medium,14.6633%;,14.9K,31.7K,
2267,2267. Check if There Is a Valid Parentheses String Path,"['Array', 'Dynamic Programming', 'Matrix']",38.00%,Hard,48.8886%;,12.4K,32.6K,
2268,2268. Minimum Number of Keypresses,"['Array', 'String', 'Greedy', '2+']",73.20%,Medium,57.4651%;,10.6K,14.5K,Y
2269,2269. Find the K-Beauty of a Number,"['Math', 'String', 'Sliding Window']",57.70%,Easy,26.154%;,34.7K,60.1K,
2270,2270. Number of Ways to Split Array,"['Array', 'Prefix Sum']",45.60%,Medium,22.8064%;,25.3K,55.5K,
2271,2271. Maximum White Tiles Covered by a Carpet,"['Array', 'Binary Search', 'Greedy', '2+']",33.00%,Medium,20.2551%;,13K,39.5K,
2272,2272. Substring With Largest Variance,"['Array', 'Dynamic Programming']",37.00%,Hard,98.9666%;,23.4K,63.3K,
2273,2273. Find Resultant Array After Removing Anagrams,"['Array', 'Hash Table', 'String', '1+']",58.40%,Easy,50.1313%;,38.5K,65.9K,
2274,2274. Maximum Consecutive Floors Without Special Floors,"['Array', 'Sorting']",52.10%,Medium,26.7558%;,25.3K,48.4K,
2275,2275. Largest Combination With Bitwise AND Greater Than Zero,"['Array', 'Hash Table', 'Bit Manipulation', '1+']",72.40%,Medium,40.3369%;,20.2K,27.9K,
2276,2276. Count Integers in Intervals,"['Design', 'Segment Tree', 'Ordered Set']",34.40%,Hard,50.5698%;,12.8K,37.2K,
2277,2277. Closest Node to Path in Tree,"['Array', 'Tree', 'Depth-First Search', '1+']",63.80%,Hard,0%;,2.5K,3.9K,Y
2278,2278. Percentage of Letter in String,['String'],73.90%,Easy,7.13202%;,47K,63.5K,
2279,2279. Maximum Bags With Full Capacity of Rocks,"['Array', 'Greedy', 'Sorting']",67.70%,Medium,73.5739%;,83.9K,123.8K,
2280,2280. Minimum Lines to Represent a Line Chart,"['Array', 'Math', 'Geometry', '2+']",24.30%,Medium,32.997%;,21.8K,89.9K,
2281,2281. Sum of Total Strength of Wizards,"['Array', 'Stack', 'Monotonic Stack', '1+']",27.30%,Hard,95.7605%;,13.9K,50.7K,
2282,2282. Number of People That Can Be Seen in a Grid,"['Array', 'Stack', 'Matrix', '1+']",49.60%,Medium,0%;,1.1K,2.3K,Y
2283,2283. Check if Number Has Equal Digit Count and Digit Value,"['Hash Table', 'String', 'Counting']",73.20%,Easy,3.34958%;,37.6K,51.4K,
2284,2284. Sender With Largest Word Count,"['Array', 'Hash Table', 'String', '1+']",56.10%,Medium,21.0327%;,25.8K,46K,
2285,2285. Maximum Total Importance of Roads,"['Greedy', 'Graph', 'Sorting', '1+']",60.70%,Medium,26.4%;,24.4K,40.1K,
2286,2286. Booking Concert Tickets in Groups,"['Binary Search', 'Design', '2+']",15.30%,Hard,0%;,4.4K,28.8K,
2287,2287. Rearrange Characters to Make Target String,"['Hash Table', 'String', 'Counting']",58.10%,Easy,40.6717%;,30.1K,51.8K,
2288,2288. Apply Discount to Prices,['String'],27.90%,Medium,34.5195%;,17.2K,61.5K,
2289,2289. Steps to Make Array Non-decreasing,"['Array', 'Linked List', 'Stack', '1+']",21.10%,Medium,44.2751%;,14.2K,67.2K,
2290,2290. Minimum Obstacle Removal to Reach Corner,"['Array', 'Breadth-First Search', 'Graph', '3+']",49.50%,Hard,27.3012%;,15.8K,32K,
2291,2291. Maximum Profit From Trading Stocks,"['Array', 'Dynamic Programming']",45.40%,Medium,72.8322%;,3.4K,7.6K,Y
2292,2292. Products With Three or More Orders in Two Consecutive Years,['Database'],39.20%,Medium,14.6633%;,3.6K,9.1K,Y
2293,2293. Min Max Game,"['Array', 'Simulation']",63.80%,Easy,19.1985%;,35.4K,55.6K,
2294,2294. Partition Array Such That Maximum Difference Is K,"['Array', 'Greedy', 'Sorting']",72.70%,Medium,29.9546%;,30.4K,41.8K,
2295,2295. Replace Elements in an Array,"['Array', 'Hash Table', 'Simulation']",57.60%,Medium,14.7277%;,27.6K,47.9K,
2296,2296. Design a Text Editor,"['Linked List', 'String', 'Stack', '3+']",40.70%,Hard,55.3406%;,15.7K,38.6K,
2297,2297. Jump Game VIII,"['Array', 'Dynamic Programming', 'Stack', '3+']",55.90%,Medium,28.4803%;,1.4K,2.6K,Y
2298,2298. Tasks Count in the Weekend,['Database'],84.60%,Medium,0%;,3.3K,3.9K,Y
2299,2299. Strong Password Checker II,['String'],56.30%,Easy,12.1414%;,29.9K,53K,
2300,2300. Successful Pairs of Spells and Potions,"['Array', 'Two Pointers', 'Binary Search', '1+']",32.50%,Medium,6.9361%;,22.3K,68.8K,
2301,2301. Match Substring After Replacement,"['Array', 'Hash Table', 'String', '1+']",39.40%,Hard,23.4761%;,11.1K,28.2K,
2302,2302. Count Subarrays With Score Less Than K,"['Array', 'Binary Search', 'Sliding Window', '1+']",52.20%,Hard,21.7694%;,16.1K,30.9K,
2303,2303. Calculate Amount Paid in Taxes,"['Array', 'Simulation']",64.10%,Easy,47.3288%;,28.6K,44.6K,
2304,2304. Minimum Path Cost in a Grid,"['Array', 'Dynamic Programming', 'Matrix']",65.80%,Medium,34.5195%;,21K,31.9K,
2305,2305. Fair Distribution of Cookies,"['Array', 'Dynamic Programming', '3+']",61.90%,Medium,18.7129%;,22.4K,36.1K,
2306,2306. Naming a Company,"['Array', 'Hash Table', 'String', '2+']",47.10%,Hard,72.7378%;,54.7K,116.1K,
2307,2307. Check for Contradictions in Equations,"['Array', 'Depth-First Search', 'Union Find', '1+']",43.70%,Hard,0%;,849,1.9K,Y
2308,2308. Arrange Table by Gender,['Database'],72.50%,Medium,16.6236%;,3K,4.1K,Y
2309,2309. Greatest English Letter in Upper and Lower Case,"['Hash Table', 'String', 'Enumeration']",68.80%,Easy,10.282%;,38K,55.3K,
2310,2310. Sum of Numbers With Units Digit K,"['Math', 'Dynamic Programming', 'Greedy', '1+']",25.80%,Medium,12.6554%;,21.3K,82.7K,
2311,2311. Longest Binary Subsequence Less Than or Equal to K,"['String', 'Dynamic Programming', 'Greedy', '1+']",37.10%,Medium,29.7983%;,18.2K,49K,
2312,2312. Selling Pieces of Wood,"['Array', 'Dynamic Programming', 'Memoization']",48.50%,Hard,24.193%;,7.8K,16K,
2313,2313. Minimum Flips in Binary Tree to Get Result,"['Dynamic Programming', 'Tree', '2+']",63.60%,Hard,0%;,1.1K,1.7K,Y
2314,2314. The First Day of the Maximum Recorded Degree in Each City,['Database'],72.90%,Medium,0%;,2.8K,3.9K,Y
2315,2315. Count Asterisks,['String'],82.10%,Easy,27.5667%;,42.5K,51.7K,
2316,2316. Count Unreachable Pairs of Nodes in an Undirected Graph,"['Depth-First Search', 'Breadth-First Search', '2+']",38.90%,Medium,26.4%;,21.7K,55.8K,
2317,2317. Maximum XOR After Operations,"['Array', 'Math', 'Bit Manipulation']",79.20%,Medium,13.7578%;,16.8K,21.3K,
2318,2318. Number of Distinct Roll Sequences,"['Dynamic Programming', 'Memoization']",56.30%,Hard,20.2551%;,8.3K,14.8K,
2319,2319. Check if Matrix Is X-Matrix,"['Array', 'Matrix']",66.70%,Easy,33.8926%;,36.7K,54.9K,
2320,2320. Count Number of Ways to Place Houses,['Dynamic Programming'],40.60%,Medium,15.2639%;,21.8K,53.5K,
2321,2321. Maximum Score Of Spliced Array,"['Array', 'Dynamic Programming']",55.80%,Hard,36.1283%;,15.4K,27.5K,
2322,2322. Minimum Score After Removals on a Tree,"['Array', 'Bit Manipulation', 'Tree', '1+']",50.80%,Hard,49.6993%;,5.4K,10.6K,
2323,2323. Find Minimum Time to Finish All Jobs II,"['Array', 'Greedy', 'Sorting']",73.90%,Medium,0%;,1.6K,2.1K,Y
2324,2324. Product Sales Analysis IV,['Database'],77.80%,Medium,0%;,3.5K,4.4K,Y
2325,2325. Decode the Message,"['Hash Table', 'String']",84.70%,Easy,29.6318%;,53.6K,63.3K,
2326,2326. Spiral Matrix IV,"['Array', 'Linked List', 'Matrix', '1+']",74.70%,Medium,23.0424%;,26.1K,34.9K,
2327,2327. Number of People Aware of a Secret,"['Dynamic Programming', 'Queue', 'Simulation']",44.80%,Medium,39.6173%;,16.8K,37.4K,
2328,2328. Number of Increasing Paths in a Grid,"['Array', 'Dynamic Programming', '6+']",47.60%,Hard,35.9968%;,16.5K,34.6K,
2329,2329. Product Sales Analysis V,['Database'],68.50%,Easy,0%;,3.8K,5.5K,Y
2330,2330. Valid Palindrome IV,"['Two Pointers', 'String']",75.70%,Medium,0%;,2.6K,3.5K,Y
2331,2331. Evaluate Boolean Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",78.50%,Easy,18.0555%;,43.5K,55.4K,
2332,2332. The Latest Time to Catch a Bus,"['Array', 'Two Pointers', 'Binary Search', '1+']",23.40%,Medium,45.7869%;,13.2K,56.4K,
2333,2333. Minimum Sum of Squared Difference,"['Array', 'Math', 'Sorting', '1+']",25.50%,Medium,12.232%;,11K,43K,
2334,2334. Subarray With Elements Greater Than Varying Threshold,"['Array', 'Stack', 'Union Find', '1+']",41.20%,Hard,42.122%;,5.9K,14.4K,
2335,2335. Minimum Amount of Time to Fill Cups,"['Array', 'Greedy', 'Sorting', '1+']",56.30%,Easy,18.2526%;,33.5K,59.5K,
2336,2336. Smallest Number in Infinite Set,"['Hash Table', 'Design', 'Heap (Priority Queue)']",71.30%,Medium,13.9886%;,28.1K,39.4K,
2337,2337. Move Pieces to Obtain a String,"['Two Pointers', 'String']",48.00%,Medium,38.2904%;,20.6K,43K,
2338,2338. Count the Number of Ideal Arrays,"['Math', 'Dynamic Programming', '2+']",26.30%,Hard,0%;,4.7K,17.9K,
2339,2339. All the Matches of the League,['Database'],88.00%,Easy,0%;,4.1K,4.6K,Y
2340,2340. Minimum Adjacent Swaps to Make a Valid Array,"['Array', 'Greedy']",75.10%,Medium,70.686%;,6.2K,8.2K,Y
2341,2341. Maximum Number of Pairs in Array,"['Array', 'Hash Table', 'Counting']",76.00%,Easy,19.7704%;,46.3K,60.9K,
2342,2342. Max Sum of a Pair With Equal Sum of Digits,"['Array', 'Hash Table', 'Sorting', '1+']",53.40%,Medium,38.1402%;,31.5K,59K,
2343,2343. Query Kth Smallest Trimmed Number,"['Array', 'String', 'Divide and Conquer', '4+']",41.30%,Medium,20.2551%;,20.8K,50.2K,
2344,2344. Minimum Deletions to Make Array Divisible,"['Array', 'Math', 'Sorting', '2+']",56.80%,Hard,36.272%;,23.1K,40.6K,
2345,2345. Finding the Number of Visible Mountains,"['Array', 'Stack', 'Sorting', '1+']",42.30%,Medium,43.3256%;,3.3K,7.7K,Y
2346,2346. Compute the Rank as a Percentage,['Database'],32.70%,Medium,0%;,2.2K,6.7K,Y
2347,2347. Best Poker Hand,"['Array', 'Hash Table', 'Counting']",60.60%,Easy,29.9546%;,29.6K,48.8K,
2348,2348. Number of Zero-Filled Subarrays,"['Array', 'Math']",57.80%,Medium,6.35005%;,28.5K,49.2K,
2349,2349. Design a Number Container System,"['Hash Table', 'Design', '2+']",45.90%,Medium,22.8064%;,18.3K,39.8K,
2350,2350. Shortest Impossible Sequence of Rolls,"['Array', 'Hash Table', 'Greedy']",68.30%,Hard,38.9364%;,11.5K,16.9K,
2351,2351. First Letter to Appear Twice,"['Hash Table', 'String', 'Counting']",75.00%,Easy,34.1541%;,67.3K,89.7K,
2352,2352. Equal Row and Column Pairs,"['Array', 'Hash Table', 'Matrix', '1+']",70.70%,Medium,10.1499%;,33.6K,47.5K,
2353,2353. Design a Food Rating System,"['Hash Table', 'Design', '2+']",34.70%,Medium,18.6606%;,16.1K,46.6K,
2354,2354. Number of Excellent Pairs,"['Array', 'Hash Table', 'Binary Search', '1+']",46.00%,Hard,36.5316%;,11.8K,25.7K,
2355,2355. Maximum Number of Books You Can Take,"['Array', 'Dynamic Programming', 'Stack', '1+']",44.00%,Hard,80.8033%;,4K,9.1K,Y
2356,2356. Number of Unique Subjects Taught by Each Teacher,['Database'],90.30%,Easy,12.6554%;,4.7K,5.2K,Y
2357,2357. Make Array Zero by Subtracting Equal Amounts,"['Array', 'Hash Table', 'Greedy', '3+']",72.70%,Easy,57.2225%;,62.5K,86K,
2358,2358. Maximum Number of Groups Entering a Competition,"['Array', 'Math', 'Binary Search', '1+']",67.70%,Medium,14.2269%;,28.6K,42.2K,
2359,2359. Find Closest Node to Given Two Nodes,"['Depth-First Search', 'Graph']",46.20%,Medium,70.6397%;,66.2K,143.3K,
2360,2360. Longest Cycle in a Graph,"['Depth-First Search', 'Graph', 'Topological Sort']",38.90%,Hard,45.1267%;,17.6K,45.3K,
2361,2361. Minimum Costs Using the Train Line,"['Array', 'Dynamic Programming']",76.00%,Hard,71.4133%;,4K,5.3K,Y
2362,2362. Generate the Invoice,['Database'],80.50%,Hard,0%;,1.6K,1.9K,Y
2363,2363. Merge Similar Items,"['Array', 'Hash Table', 'Sorting', '1+']",75.50%,Easy,13.2244%;,35K,46.3K,
2364,2364. Count Number of Bad Pairs,"['Array', 'Hash Table']",41.10%,Medium,15.5827%;,22.4K,54.6K,
2365,2365. Task Scheduler II,"['Array', 'Hash Table', 'Simulation']",46.80%,Medium,41.9109%;,17.6K,37.7K,
2366,2366. Minimum Replacements to Sort the Array,"['Array', 'Math', 'Greedy']",40.90%,Hard,19.1985%;,9.6K,23.4K,
2367,2367. Number of Arithmetic Triplets,"['Array', 'Hash Table', 'Two Pointers', '1+']",83.60%,Easy,28.3792%;,65.3K,78.1K,
2368,2368. Reachable Nodes With Restrictions,"['Array', 'Hash Table', 'Tree', '3+']",57.80%,Medium,21.704%;,31.3K,54.2K,
2369,2369. Check if There is a Valid Partition For The Array,"['Array', 'Dynamic Programming']",40.10%,Medium,41.0997%;,19K,47.2K,
2370,2370. Longest Ideal Subsequence,"['Hash Table', 'String', 'Dynamic Programming']",37.70%,Medium,29.1201%;,18.6K,49.4K,
2371,2371. Minimize Maximum Value in a Grid,"['Array', 'Greedy', 'Union Find', '4+']",71.10%,Hard,0%;,896,1.3K,Y
2372,2372. Calculate the Influence of Each Salesperson,['Database'],85.60%,Medium,0%;,2.5K,2.9K,Y
2373,2373. Largest Local Values in a Matrix,"['Array', 'Matrix']",83.40%,Easy,36.9661%;,34.1K,40.9K,
2374,2374. Node With Highest Edge Score,"['Hash Table', 'Graph']",46.50%,Medium,27.875%;,25.4K,54.7K,
2375,2375. Construct Smallest Number From DI String,"['String', 'Backtracking', 'Stack', '1+']",74.60%,Medium,38.0565%;,21.6K,29K,
2376,2376. Count Special Integers,"['Math', 'Dynamic Programming']",36.70%,Hard,37.9182%;,8.6K,23.5K,
2377,2377. Sort the Olympic Table,['Database'],78.40%,Easy,0%;,3K,3.8K,Y
2378,2378. Choose Edges to Maximize Score in a Tree,"['Dynamic Programming', 'Tree', '1+']",60.30%,Medium,0%;,860,1.4K,Y
2379,2379. Minimum Recolors to Get K Consecutive Black Blocks,"['String', 'Sliding Window']",57.70%,Easy,34.1142%;,31.4K,54.5K,
2380,2380. Time Needed to Rearrange a Binary String,"['String', 'Dynamic Programming', 'Simulation']",49.00%,Medium,48.1062%;,22.1K,45.2K,
2381,2381. Shifting Letters II,"['Array', 'String', 'Prefix Sum']",35.00%,Medium,38.2904%;,14.5K,41.5K,
2382,2382. Maximum Segment Sum After Removals,"['Array', 'Union Find', 'Prefix Sum', '1+']",47.80%,Hard,51.3095%;,6.3K,13.2K,
2383,2383. Minimum Hours of Training to Win a Competition,"['Array', 'Greedy']",41.00%,Easy,30.3128%;,25.2K,61.5K,
2384,2384. Largest Palindromic Number,"['Hash Table', 'String', 'Greedy']",31.10%,Medium,50.2568%;,20.2K,64.9K,
2385,2385. Amount of Time for Binary Tree to Be Infected,"['Tree', 'Depth-First Search', '2+']",56.70%,Medium,31.2883%;,23K,40.6K,
2386,2386. Find the K-Sum of an Array,"['Array', 'Sorting', 'Heap (Priority Queue)']",38.50%,Hard,40.3369%;,6.9K,18K,
2387,2387. Median of a Row Wise Sorted Matrix,"['Array', 'Binary Search', 'Matrix']",68.60%,Medium,0%;,1.4K,2K,Y
2388,2388. Change Null Values in a Table to the Previous Value,['Database'],65.70%,Medium,15.9149%;,1.7K,2.6K,Y
2389,2389. Longest Subsequence With Limited Sum,"['Array', 'Binary Search', 'Greedy', '2+']",72.50%,Easy,49.5198%;,78.8K,108.6K,
2390,2390. Removing Stars From a String,"['String', 'Stack', 'Simulation']",65.20%,Medium,16.8742%;,39.5K,60.5K,
2391,2391. Minimum Amount of Time to Collect Garbage,"['Array', 'String', 'Prefix Sum']",84.40%,Medium,31.7693%;,31.9K,37.8K,
2392,2392. Build a Matrix With Conditions,"['Array', 'Graph', 'Topological Sort', '1+']",59.40%,Hard,16.6236%;,10.9K,18.3K,
2393,2393. Count Strictly Increasing Subarrays,"['Array', 'Math', 'Dynamic Programming']",72.90%,Medium,0%;,2.2K,3K,Y
2394,2394. Employees With Deductions,['Database'],41.70%,Medium,0%;,1.8K,4.3K,Y
2395,2395. Find Subarrays With Equal Sum,"['Array', 'Hash Table']",64.40%,Easy,13.974%;,33.9K,52.7K,
2396,2396. Strictly Palindromic Number,"['Math', 'Two Pointers', 'Brainteaser']",87.80%,Medium,38.7362%;,46.3K,52.8K,
2397,2397. Maximum Rows Covered by Columns,"['Array', 'Backtracking', 'Bit Manipulation', '2+']",52.80%,Medium,0%;,11.7K,22.2K,
2398,2398. Maximum Number of Robots Within Budget,"['Array', 'Binary Search', 'Queue', '3+']",33.00%,Hard,64.9828%;,14.7K,44.5K,
2399,2399. Check Distances Between Same Letters,"['Array', 'Hash Table', 'String']",70.60%,Easy,35.1541%;,33.9K,48.1K,
2400,2400. Number of Ways to Reach a Position After Exactly k Steps,"['Math', 'Dynamic Programming', 'Combinatorics']",33.00%,Medium,21.5888%;,21.1K,64.1K,
2401,2401. Longest Nice Subarray,"['Array', 'Bit Manipulation', 'Sliding Window']",49.20%,Medium,33.626%;,20.3K,41.3K,
2402,2402. Meeting Rooms III,"['Array', 'Sorting', 'Heap (Priority Queue)']",33.50%,Hard,78.9211%;,15.8K,47.2K,
2403,2403. Minimum Time to Kill All Monsters,"['Array', 'Dynamic Programming', '2+']",51.30%,Hard,49.6993%;,756,1.5K,Y
2404,2404. Most Frequent Even Element,"['Array', 'Hash Table', 'Counting']",51.00%,Easy,46.026%;,45.6K,89.4K,
2405,2405. Optimal Partition of String,"['Hash Table', 'String', 'Greedy']",75.20%,Medium,30.4303%;,33.3K,44.3K,
2406,2406. Divide Intervals Into Minimum Number of Groups,"['Array', 'Two Pointers', 'Greedy', '3+']",46.00%,Medium,45.923%;,20.4K,44.3K,
2407,2407. Longest Increasing Subsequence II,"['Array', 'Divide and Conquer', '5+']",21.70%,Hard,44.9208%;,7.9K,36.3K,
2408,2408. Design SQL,"['Array', 'Hash Table', 'String', '1+']",84.00%,Medium,28.4803%;,1.2K,1.5K,Y
2409,2409. Count Days Spent Together,"['Math', 'String']",43.50%,Easy,36.0075%;,16.7K,38.4K,
2410,2410. Maximum Matching of Players With Trainers,"['Array', 'Two Pointers', 'Greedy', '1+']",60.90%,Medium,16.7898%;,22.8K,37.3K,
2411,2411. Smallest Subarrays With Maximum Bitwise OR,"['Array', 'Binary Search', 'Bit Manipulation', '1+']",41.60%,Medium,42.3985%;,9.4K,22.6K,
2412,2412. Minimum Money Required Before Transactions,"['Array', 'Greedy', 'Sorting']",39.60%,Hard,44.746%;,8.4K,21.1K,
2413,2413. Smallest Even Multiple,"['Math', 'Number Theory']",87.70%,Easy,23.4107%;,76.8K,87.6K,
2414,2414. Length of the Longest Alphabetical Continuous Substring,['String'],56.10%,Medium,11.791%;,31.4K,56K,
2415,2415. Reverse Odd Levels of Binary Tree,"['Tree', 'Depth-First Search', '2+']",76.70%,Medium,30.1531%;,31.7K,41.3K,
2416,2416. Sum of Prefix Scores of Strings,"['Array', 'String', 'Trie', '1+']",43.70%,Hard,58.4061%;,19.5K,44.6K,
2417,2417. Closest Fair Integer,"['Math', 'Enumeration']",45.20%,Medium,49.6993%;,705,1.6K,Y
2418,2418. Sort the People,"['Array', 'Hash Table', 'String', '1+']",81.10%,Easy,37.365%;,66.4K,81.8K,
2419,2419. Longest Subarray With Maximum Bitwise AND,"['Array', 'Bit Manipulation', 'Brainteaser']",48.00%,Medium,31.8086%;,21.2K,44.2K,
2420,2420. Find All Good Indices,"['Array', 'Dynamic Programming', 'Prefix Sum']",37.50%,Medium,44.7695%;,18.2K,48.4K,
2421,2421. Number of Good Paths,"['Array', 'Tree', 'Union Find', '1+']",57.60%,Hard,83.2823%;,47.8K,83K,
2422,2422. Merge Operations to Turn Array Into a Palindrome,"['Array', 'Two Pointers', 'Greedy']",69.70%,Medium,0%;,1.2K,1.8K,Y
2423,2423. Remove Letter To Equalize Frequency,"['Hash Table', 'String', 'Counting']",18.00%,Easy,35.5245%;,24.4K,135.5K,
2424,2424. Longest Uploaded Prefix,"['Binary Search', 'Union Find', 'Design', '4+']",54.00%,Medium,29.7983%;,14.9K,27.6K,
2425,2425. Bitwise XOR of All Pairings,"['Array', 'Bit Manipulation', 'Brainteaser']",58.60%,Medium,8.39841%;,14.1K,24K,
2426,2426. Number of Pairs Satisfying Inequality,"['Array', 'Binary Search', '5+']",42.90%,Hard,48.6076%;,8.8K,20.5K,
2427,2427. Number of Common Factors,"['Math', 'Enumeration', 'Number Theory']",79.70%,Easy,30.6023%;,44.7K,56K,
2428,2428. Maximum Sum of an Hourglass,"['Array', 'Matrix', 'Prefix Sum']",74.20%,Medium,31.5509%;,26.7K,36K,
2429,2429. Minimize XOR,"['Greedy', 'Bit Manipulation']",42.50%,Medium,47.8794%;,17.4K,41K,
2430,2430. Maximum Deletions on a String,"['String', 'Dynamic Programming', '3+']",32.20%,Hard,75.3726%;,10.3K,31.9K,
2431,2431. Maximize Total Tastiness of Purchased Fruits,"['Array', 'Dynamic Programming']",67.50%,Medium,0%;,1.3K,1.9K,Y
2432,2432. The Employee That Worked on the Longest Task,['Array'],49.40%,Easy,27.8046%;,26.8K,54.3K,
2433,2433. Find The Original Array of Prefix Xor,"['Array', 'Bit Manipulation']",85.60%,Medium,15.5697%;,31.1K,36.3K,
2434,2434. Using a Robot to Print the Lexicographically Smallest String,"['Hash Table', 'String', 'Stack', '1+']",38.50%,Medium,52.7534%;,13.9K,36K,
2435,2435. Paths in Matrix Whose Sum Is Divisible by K,"['Array', 'Dynamic Programming', 'Matrix']",41.60%,Hard,49.8126%;,15K,36.1K,
2436,2436. Minimum Split Into Subarrays With GCD Greater Than One,"['Array', 'Math', 'Dynamic Programming', '2+']",74.00%,Medium,0%;,1.3K,1.8K,Y
2437,2437. Number of Valid Clock Times,"['String', 'Enumeration']",43.10%,Easy,50.2757%;,17.8K,41.3K,
2438,2438. Range Product Queries of Powers,"['Array', 'Bit Manipulation', 'Prefix Sum']",38.90%,Medium,33.9534%;,13K,33.5K,
2439,2439. Minimize Maximum of Array,"['Array', 'Binary Search', '3+']",34.40%,Medium,58.3355%;,10.9K,31.7K,
2440,2440. Create Components With Same Value,"['Array', 'Math', 'Tree', '2+']",54.60%,Hard,55.5428%;,4.2K,7.6K,
2441,2441. Largest Positive Integer That Exists With Its Negative,"['Array', 'Hash Table']",68.00%,Easy,35.246%;,37.1K,54.5K,
2442,2442. Count Number of Distinct Integers After Reverse Operations,"['Array', 'Hash Table', 'Math']",78.70%,Medium,27.2323%;,35.2K,44.7K,
2443,2443. Sum of Number and Its Reverse,"['Math', 'Enumeration']",45.80%,Medium,28.5802%;,27.7K,60.4K,
2444,2444. Count Subarrays With Fixed Bounds,"['Array', 'Queue', 'Sliding Window', '1+']",62.00%,Hard,76.9119%;,54.8K,88.4K,
2445,2445. Number of Nodes With Value One,"['Tree', 'Depth-First Search', '2+']",70.80%,Medium,51.3095%;,1.2K,1.7K,Y
2446,2446. Determine if Two Events Have Conflict,"['Array', 'String']",49.90%,Easy,35.1671%;,27.3K,54.7K,
2447,2447. Number of Subarrays With GCD Equal to K,"['Array', 'Math', 'Number Theory']",48.60%,Medium,34.1541%;,19K,39.2K,
2448,2448. Minimum Cost to Make Array Equal,"['Array', 'Binary Search', 'Greedy', '2+']",34.80%,Hard,71.4133%;,12K,34.4K,
2449,2449. Minimum Number of Operations to Make Arrays Similar,"['Array', 'Greedy', 'Sorting']",64.00%,Hard,33.5231%;,8.9K,14K,
2450,2450. Number of Distinct Binary Strings After Applying Operations,"['Math', 'String']",67.70%,Medium,0%;,555,820,Y
2451,2451. Odd String Difference,"['Hash Table', 'Math', 'String']",60.10%,Easy,32.9595%;,20K,33.2K,
2452,2452. Words Within Two Edits of Dictionary,"['Array', 'String']",60.40%,Medium,22.1788%;,15.5K,25.7K,
2453,2453. Destroy Sequential Targets,"['Array', 'Hash Table', 'Counting']",37.80%,Medium,0%;,11.4K,30.1K,
2454,2454. Next Greater Element IV,"['Array', 'Binary Search', 'Stack', '3+']",39.80%,Hard,59.3418%;,6.4K,15.9K,
2455,2455. Average Value of Even Numbers That Are Divisible by Three,"['Array', 'Math']",59.00%,Easy,11.4586%;,34.4K,58.3K,
2456,2456. Most Popular Video Creator,"['Array', 'Hash Table', 'String', '2+']",43.80%,Medium,37.0678%;,17.6K,40.3K,
2457,2457. Minimum Addition to Make Integer Beautiful,"['Math', 'Greedy']",37.00%,Medium,41.6518%;,15.2K,41.1K,
2458,2458. Height of Binary Tree After Subtree Removal Queries,"['Array', 'Tree', 'Depth-First Search', '2+']",37.00%,Hard,55.3406%;,8.4K,22.7K,
2459,2459. Sort Array by Moving Items to Empty Space,"['Array', 'Greedy', 'Sorting']",51.90%,Hard,0%;,461,889,Y
2460,2460. Apply Operations to an Array,"['Array', 'Simulation']",67.10%,Easy,31.9424%;,34.5K,51.4K,
2461,2461. Maximum Sum of Distinct Subarrays With Length K,"['Array', 'Hash Table', 'Sliding Window']",34.20%,Medium,44.491%;,22.6K,66K,
2462,2462. Total Cost to Hire K Workers,"['Array', 'Two Pointers', '2+']",37.50%,Medium,27.875%;,13.9K,37.1K,
2463,2463. Minimum Total Distance Traveled,"['Array', 'Dynamic Programming', 'Sorting']",40.70%,Hard,51.3095%;,5.9K,14.5K,
2464,2464. Minimum Subarrays in a Valid Split,"['Array', 'Math', 'Dynamic Programming', '1+']",56.00%,Medium,0%;,667,1.2K,Y
2465,2465. Number of Distinct Averages,"['Array', 'Hash Table', 'Two Pointers', '1+']",58.30%,Easy,13.974%;,25.4K,43.5K,
2466,2466. Count Ways To Build Good Strings,['Dynamic Programming'],42.10%,Medium,49.203%;,11.2K,26.6K,
2467,2467. Most Profitable Path in a Tree,"['Array', 'Tree', 'Depth-First Search', '2+']",48.30%,Medium,48.0937%;,6.9K,14.3K,
2468,2468. Split Message Based on Limit,"['String', 'Binary Search']",46.30%,Hard,57.7719%;,3.7K,8K,
2469,2469. Convert the Temperature,['Math'],89.10%,Easy,19.6773%;,68.8K,77.2K,
2470,2470. Number of Subarrays With LCM Equal to K,"['Array', 'Math', 'Number Theory']",38.40%,Medium,39.8147%;,17.8K,46.5K,
2471,2471. Minimum Number of Operations to Sort a Binary Tree by Level,"['Tree', 'Breadth-First Search', 'Binary Tree']",62.40%,Medium,23.563%;,15.3K,24.5K,
2472,2472. Maximum Number of Non-overlapping Palindrome Substrings,"['String', 'Dynamic Programming']",38.00%,Hard,68.84%;,9.1K,24K,
2473,2473. Minimum Cost to Buy Apples,"['Array', 'Graph', 'Heap (Priority Queue)', '1+']",62.90%,Medium,0%;,827,1.3K,Y
2474,2474. Customers With Strictly Increasing Purchases,['Database'],44.80%,Hard,28.7601%;,807,1.8K,Y
2475,2475. Number of Unequal Triplets in Array,"['Array', 'Hash Table']",70.90%,Easy,28.2673%;,25.2K,35.6K,
2476,2476. Closest Nodes Queries in a Binary Search Tree,"['Array', 'Binary Search', 'Tree', '2+']",40.70%,Medium,15.8399%;,14.8K,36.3K,
2477,2477. Minimum Fuel Cost to Report to the Capital,"['Tree', 'Depth-First Search', '2+']",67.80%,Medium,64.5577%;,53.5K,78.9K,
2478,2478. Number of Beautiful Partitions,"['String', 'Dynamic Programming']",30.70%,Hard,50.2568%;,7.3K,23.6K,
2479,2479. Maximum XOR of Two Non-Overlapping Subtrees,"['Tree', 'Depth-First Search', 'Graph', '1+']",46.90%,Hard,0%;,360,768,Y
2480,2480. Form a Chemical Bond,['Database'],56.80%,Easy,0%;,1.3K,2.3K,Y
2481,2481. Minimum Cuts to Divide a Circle,"['Math', 'Geometry']",52.50%,Easy,0%;,20K,38K,
2482,2482. Difference Between Ones and Zeros in Row and Column,"['Array', 'Matrix', 'Simulation']",79.70%,Medium,35.2666%;,16.6K,20.8K,
2483,2483. Minimum Penalty for a Shop,"['String', 'Prefix Sum']",55.70%,Medium,23.563%;,12.6K,22.6K,
2484,2484. Count Palindromic Subsequences,"['String', 'Dynamic Programming']",33.00%,Hard,66.0512%;,4.8K,14.6K,
2485,2485. Find the Pivot Integer,"['Math', 'Prefix Sum']",80.00%,Easy,14.8181%;,32K,39.9K,
2486,2486. Append Characters to String to Make Subsequence,"['Two Pointers', 'String', 'Greedy']",64.00%,Medium,47.9267%;,19.6K,30.6K,
2487,2487. Remove Nodes From Linked List,"['Linked List', 'Stack', 'Recursion', '1+']",68.70%,Medium,40.7496%;,25.5K,37.2K,
2488,2488. Count Subarrays With Median K,"['Array', 'Hash Table', 'Prefix Sum']",42.40%,Hard,33.8345%;,8K,18.9K,
2489,2489. Number of Substrings With Fixed Ratio,"['Hash Table', 'Math', 'String', '1+']",58.50%,Medium,0%;,501,856,Y
2490,2490. Circular Sentence,['String'],64.50%,Easy,19.0011%;,26.3K,40.7K,
2491,2491. Divide Players Into Teams of Equal Skill,"['Array', 'Hash Table', 'Two Pointers', '1+']",58.90%,Medium,46.5947%;,22.6K,38.4K,
2492,2492. Minimum Score of a Path Between Two Cities,"['Depth-First Search', 'Breadth-First Search', '2+']",46.50%,Medium,37.2197%;,15.7K,33.8K,
2493,2493. Divide Nodes Into the Maximum Number of Groups,"['Breadth-First Search', 'Union Find', 'Graph']",37.00%,Hard,46.9668%;,4.8K,13.1K,
2494,2494. Merge Overlapping Events in the Same Hall,['Database'],18.90%,Hard,24.3803%;,339,1.8K,Y
2495,2495. Number of Subarrays Having Even Product,"['Array', 'Math', 'Dynamic Programming']",65.20%,Medium,0%;,944,1.4K,Y
2496,2496. Maximum Value of a String in an Array,"['Array', 'String']",72.00%,Easy,10.6882%;,22.9K,31.8K,
2497,2497. Maximum Star Sum of a Graph,"['Array', 'Greedy', 'Graph', '2+']",38.40%,Medium,13.1068%;,11.6K,30.3K,
2498,2498. Frog Jump II,"['Array', 'Binary Search', 'Greedy']",61.10%,Medium,58.0822%;,10.9K,17.9K,
2499,2499. Minimum Total Cost to Make Arrays Unequal,"['Array', 'Hash Table', 'Greedy', '1+']",44.20%,Hard,53.14%;,2.7K,6.1K,
2500,2500. Delete Greatest Value in Each Row,"['Array', 'Sorting', 'Matrix']",81.10%,Easy,23.0247%;,28.4K,35.1K,
2501,2501. Longest Square Streak in an Array,"['Array', 'Hash Table', 'Binary Search', '2+']",39.60%,Medium,30.2937%;,19K,48.1K,
2502,2502. Design Memory Allocator,"['Array', 'Hash Table', 'Design', '1+']",52.20%,Medium,52.6725%;,10.8K,20.7K,
2503,2503. Maximum Number of Points From Grid Queries,"['Array', 'Breadth-First Search', 'Union Find', '2+']",37.00%,Hard,20.2551%;,6.2K,16.7K,
2504,2504. Concatenate the Name and the Profession,['Database'],55.40%,Easy,0%;,1.2K,2.1K,Y
2505,2505. Bitwise OR of All Subsequence Sums,"['Array', 'Math', 'Bit Manipulation', '1+']",59.40%,Medium,0%;,566,953,Y
2506,2506. Count Pairs Of Similar Strings,"['Array', 'Hash Table', 'String']",70.60%,Easy,35.8463%;,24.9K,35.3K,
2507,2507. Smallest Value After Replacing With Sum of Prime Factors,"['Math', 'Number Theory']",48.70%,Medium,26.2365%;,15.9K,32.7K,
2508,2508. Add Edges to Make Degrees of All Nodes Even,"['Hash Table', 'Graph']",32.30%,Hard,24.193%;,8.9K,27.6K,
2509,2509. Cycle Length Queries in a Tree,"['Tree', 'Binary Tree']",56.90%,Hard,34.5195%;,8.3K,14.6K,
2510,2510. Check if There is a Path With Equal Number of 0's And 1's,"['Array', 'Dynamic Programming', 'Matrix']",55.50%,Medium,0%;,958,1.7K,Y
2511,2511. Maximum Enemy Forts That Can Be Captured,"['Array', 'Two Pointers']",37.40%,Easy,16.1443%;,15.1K,40.4K,
2512,2512. Reward Top K Students,"['Array', 'Hash Table', 'String', '2+']",46.50%,Medium,23.9635%;,12.4K,26.6K,
2513,2513. Minimize the Maximum of Two Arrays,"['Math', 'Binary Search', 'Number Theory']",26.50%,Medium,46.9417%;,4.5K,16.8K,
2514,2514. Count Anagrams,"['Hash Table', 'Math', 'String', '2+']",34.20%,Hard,0%;,5.6K,16.3K,
2515,2515. Shortest Distance to Target String in a Circular Array,"['Array', 'String']",49.00%,Easy,28.2072%;,19.7K,40.2K,
2516,2516. Take K of Each Character From Left and Right,"['Hash Table', 'String', 'Sliding Window']",33.90%,Medium,38.9364%;,10.5K,30.9K,
2517,2517. Maximum Tastiness of Candy Basket,"['Array', 'Binary Search', 'Sorting']",64.60%,Medium,32.0173%;,10.1K,15.6K,
2518,2518. Number of Great Partitions,"['Array', 'Dynamic Programming']",32.90%,Hard,46.0662%;,5.1K,15.5K,
2519,2519. Count the Number of K-Big Indices,"['Array', 'Binary Search', '5+']",64.40%,Hard,0%;,568,882,Y
2520,2520. Count the Digits That Divide a Number,['Math'],85.00%,Easy,5.32829%;,36.1K,42.4K,
2521,2521. Distinct Prime Factors of Product of Array,"['Array', 'Hash Table', 'Math', '1+']",50.10%,Medium,14.9912%;,19.6K,39.1K,
2522,2522. Partition String Into Substrings With Values at Most K,"['String', 'Dynamic Programming', 'Greedy']",46.70%,Medium,30.5193%;,15.5K,33.1K,
2523,2523. Closest Prime Numbers in Range,"['Math', 'Number Theory']",37.00%,Medium,33.2625%;,15.4K,41.7K,
2524,2524. Maximum Frequency Score of a Subarray,"['Array', 'Hash Table', 'Math', '1+']",40.20%,Hard,0%;,532,1.3K,Y
2525,2525. Categorize Box According to Criteria,['Math'],34.00%,Easy,10.6971%;,21.4K,63.1K,
2526,2526. Find Consecutive Integers from a Data Stream,"['Hash Table', 'Design', 'Queue', '2+']",45.00%,Medium,0%;,15.6K,34.7K,
2527,2527. Find Xor-Beauty of Array,"['Array', 'Math', 'Bit Manipulation']",70.10%,Medium,0%;,13.5K,19.3K,
2528,2528. Maximize the Minimum Powered City,"['Array', 'Binary Search', 'Greedy', '3+']",32.10%,Hard,40.3369%;,4.3K,13.4K,
2529,2529. Maximum Count of Positive Integer and Negative Integer,"['Array', 'Binary Search', 'Counting']",74.90%,Easy,3.98641%;,43.7K,58.4K,
2530,2530. Maximal Score After Applying K Operations,"['Array', 'Greedy', 'Heap (Priority Queue)']",43.30%,Medium,23.563%;,20.8K,48K,
2531,2531. Make Number of Distinct Characters Equal,"['Hash Table', 'String', 'Counting']",25.50%,Medium,8.84357%;,13.3K,52.2K,
2532,2532. Time to Cross a Bridge,"['Array', 'Heap (Priority Queue)', 'Simulation']",53.50%,Hard,46.3401%;,3K,5.5K,
2533,2533. Number of Good Binary Strings,['Dynamic Programming'],65.00%,Medium,0%;,526,809,Y
2534,2534. Time Taken to Cross the Door,"['Array', 'Queue', 'Simulation']",70.60%,Hard,0%;,420,595,Y
2535,2535. Difference Between Element Sum and Digit Sum of an Array,"['Array', 'Math']",85.50%,Easy,23.3881%;,51.9K,60.7K,
2536,2536. Increment Submatrices by One,"['Array', 'Matrix', 'Prefix Sum']",48.30%,Medium,14.4731%;,16.5K,34.2K,
2537,2537. Count the Number of Good Subarrays,"['Array', 'Hash Table', 'Sliding Window']",47.90%,Medium,31.2883%;,11.8K,24.6K,
2538,2538. Difference Between Maximum and Minimum Price Sum,"['Array', 'Dynamic Programming', 'Tree']",34.90%,Hard,12.232%;,4.9K,14.2K,
2539,2539. Count the Number of Good Subsequences,"['Hash Table', 'Math', 'String', '2+']",77.40%,Medium,0%;,1.3K,1.6K,Y
2540,2540. Minimum Common Value,"['Array', 'Hash Table', 'Two Pointers', '1+']",51.60%,Easy,8.70598%;,29.8K,57.8K,
2541,2541. Minimum Operations to Make Array Equal II,"['Array', 'Math', 'Greedy']",30.90%,Medium,12.6554%;,16.7K,54K,
2542,2542. Maximum Subsequence Score,"['Array', 'Greedy', 'Sorting', '1+']",38.00%,Medium,41.6518%;,7.7K,20.4K,
2543,2543. Check if Point Is Reachable,"['Math', 'Number Theory']",42.20%,Hard,29.9546%;,4.6K,10.8K,
2544,2544. Alternating Digit Sum,['Math'],69.50%,Easy,4.17344%;,31.7K,45.6K,
2545,2545. Sort the Students by Their Kth Score,"['Array', 'Sorting', 'Matrix']",85.90%,Medium,0%;,28.4K,33.1K,
2546,2546. Apply Bitwise Operations to Make Strings Equal,"['String', 'Bit Manipulation']",40.60%,Medium,40.3369%;,15K,37K,
2547,2547. Minimum Cost to Split an Array,"['Array', 'Hash Table', '2+']",38.80%,Hard,32.1117%;,8.3K,21.5K,
2548,2548. Maximum Price to Fill a Bag,"['Array', 'Greedy', 'Sorting']",69.00%,Medium,0%;,702,1K,Y
2549,2549. Count Distinct Numbers on Board,"['Array', 'Hash Table', 'Math', '1+']",59.80%,Easy,14.1498%;,26K,43.5K,
2550,2550. Count Collisions of Monkeys on a Polygon,"['Math', 'Recursion']",26.50%,Medium,5.83612%;,14.6K,55K,
2551,2551. Put Marbles in Bags,"['Array', 'Greedy', 'Sorting', '1+']",52.80%,Hard,47.6769%;,8.6K,16.3K,
2552,2552. Count Increasing Quadruplets,"['Array', 'Dynamic Programming', '3+']",31.40%,Hard,46.6618%;,4.7K,15K,
2553,2553. Separate the Digits in an Array,"['Array', 'Simulation']",79.60%,Easy,1.36869%;,31.1K,39K,
2554,2554. Maximum Number of Integers to Choose From a Range I,"['Array', 'Hash Table', 'Binary Search', '2+']",52.40%,Medium,0%;,20.8K,39.7K,
2555,2555. Maximize Win From Two Segments,"['Array', 'Binary Search', 'Sliding Window']",30.20%,Medium,47.3848%;,6.3K,21K,
2556,2556. Disconnect Path in a Binary Matrix by at Most One Flip,"['Array', 'Dynamic Programming', '3+']",28.50%,Medium,11.6227%;,8.2K,28.8K,
2557,2557. Maximum Number of Integers to Choose From a Range II,"['Array', 'Binary Search', 'Greedy', '1+']",45.70%,Medium,0%;,688,1.5K,Y
2558,2558. Take Gifts From the Richest Pile,"['Array', 'Heap (Priority Queue)', 'Simulation']",66.40%,Easy,22.0065%;,26.2K,39.4K,
2559,2559. Count Vowel Strings in Ranges,"['Array', 'String', 'Prefix Sum']",51.30%,Medium,2.92746%;,19.5K,38.1K,
2560,2560. House Robber IV,"['Array', 'Binary Search']",39.60%,Medium,27.9407%;,9.9K,25.1K,
2561,2561. Rearranging Fruits,"['Array', 'Hash Table', 'Greedy']",34.20%,Hard,25.7411%;,6.2K,18K,
2562,2562. Find the Array Concatenation Value,"['Array', 'Two Pointers', 'Simulation']",69.70%,Easy,5.56439%;,28K,40.1K,
2563,2563. Count the Number of Fair Pairs,"['Array', 'Two Pointers', 'Binary Search', '1+']",31.80%,Medium,37.6662%;,16.5K,51.7K,
2564,2564. Substring XOR Queries,"['Array', 'Hash Table', 'String', '1+']",33.50%,Medium,10.4515%;,9.3K,27.9K,
2565,2565. Subsequence With the Minimum Score,"['Two Pointers', 'String', 'Binary Search']",32.10%,Hard,26.4%;,4.3K,13.5K,
2566,2566. Maximum Difference by Remapping a Digit,"['Math', 'Greedy']",60.20%,Easy,15.9149%;,17.4K,28.9K,
2567,2567. Minimum Score by Changing Two Elements,"['Array', 'Greedy', 'Sorting']",47.50%,Medium,37.0273%;,12.5K,26.3K,
2568,2568. Minimum Impossible OR,"['Array', 'Bit Manipulation', 'Brainteaser']",57.30%,Medium,13.1068%;,10.8K,18.9K,
2569,2569. Handling Sum Queries After Update,"['Array', 'Segment Tree']",25.70%,Hard,0%;,3.1K,12K,
2570,2570. Merge Two 2D Arrays by Summing Values,"['Array', 'Hash Table', 'Two Pointers']",73.10%,Easy,0%;,21.9K,29.9K,
2571,2571. Minimum Operations to Reduce an Integer to 0,"['Dynamic Programming', 'Greedy', '1+']",49.40%,Medium,14.9697%;,14.8K,30K,
2572,2572. Count the Number of Square-Free Subsets,"['Array', 'Math', 'Dynamic Programming', '1+']",20.30%,Medium,21.4467%;,4.6K,22.8K,
2573,2573. Find the String with LCP,"['String', 'Dynamic Programming', 'Greedy', '1+']",35.10%,Hard,42.3985%;,2.6K,7.4K,
2574,2574. Left and Right Sum Differences,"['Array', 'Prefix Sum']",88.60%,Easy,3.34324%;,33.7K,38.1K,
2575,2575. Find the Divisibility Array of a String,"['Array', 'Math', 'String']",30.90%,Medium,0%;,18.9K,61.2K,
2576,2576. Find the Maximum Number of Marked Indices,"['Array', 'Two Pointers', 'Binary Search', '2+']",37.20%,Medium,16.9594%;,13.2K,35.5K,
2577,2577. Minimum Time to Visit a Cell In a Grid,"['Array', 'Breadth-First Search', 'Graph', '3+']",35.50%,Hard,14.9577%;,6K,16.8K,
2578,2578. Split With Minimum Sum,"['Math', 'Greedy', 'Sorting']",69.40%,Easy,1.78561%;,17.5K,25.3K,
2579,2579. Count Total Number of Colored Cells,['Math'],57.00%,Medium,0%;,17.3K,30.3K,
2580,2580. Count Ways to Group Overlapping Ranges,"['Array', 'Sorting']",34.60%,Medium,0%;,10.8K,31.2K,
2581,2581. Count Number of Possible Root Nodes,"['Hash Table', 'Dynamic Programming', '2+']",47.70%,Hard,5.71733%;,3.1K,6.5K,
2582,2582. Pass the Pillow,"['Math', 'Simulation']",46.30%,Easy,2.66163%;,22.2K,47.9K,
2583,2583. Kth Largest Sum in a Binary Tree,"['Binary Search', 'Tree', 'Breadth-First Search']",46.60%,Medium,1.38542%;,18.1K,38.8K,
2584,2584. Split the Array to Make Coprime Products,"['Array', 'Hash Table', 'Math', '1+']",21.90%,Hard,0%;,8K,36.8K,
2585,2585. Number of Ways to Earn Points,"['Array', 'Dynamic Programming']",59.90%,Hard,8.50616%;,8.8K,14.7K,
2586,2586. Count the Number of Vowel Strings in Range,"['Array', 'String']",78.70%,Easy,0%;,23K,29.2K,
2587,2587. Rearrange Array to Maximize Prefix Score,"['Array', 'Greedy', 'Sorting', '1+']",39.30%,Medium,0%;,19.3K,49.1K,
2588,2588. Count the Number of Beautiful Subarrays,"['Array', 'Hash Table', 'Bit Manipulation', '1+']",48.90%,Medium,0%;,11K,22.5K,
2589,2589. Minimum Time to Complete All Tasks,"['Array', 'Binary Search', 'Stack', '2+']",35.30%,Hard,0%;,4.7K,13.4K,
2590,2590. Design a Todo List,[],59.50%,Medium,0%;,193,325,Y
